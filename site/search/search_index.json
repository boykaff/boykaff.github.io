{
    "docs": [
        {
            "location": "/",
            "text": "\u6301\u7eed\u66f4\u65b0\u4e2d...\n\n\n2018\u5e74\n\n\n18/03/\n\n\n\n\nfork-join\u6846\u67b6\u7ffb\u8bd1\n\n\nfork-join\u793a\u4f8b\u7bc7\n\n\nstream\u6d41\u6d45\u6790-1\n\n\nlambda\u539f\u7406\u7bc7(\u8bd1)\n\n\n\n\n18/02\n\n\n\n\n[lambda\u521d\u8bc6]((it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6.md)\n\n\n\n\n18/01\n\n\n\n\npostman\u5b89\u88c5\u4e0e\u5b66\u4e60\n\n\npostman\u6d4b\u8bd5\n\n\n\n\n2017\u5e74\n\n\n17/12\n\n\n\n\n[stream\u6d41\u6d45\u6790]((it/java/java8/stream\u6d41/stream\u6d41\u6d45\u6790.md)",
            "title": "\u4e3b\u9875"
        },
        {
            "location": "/#_1",
            "text": "",
            "title": "\u6301\u7eed\u66f4\u65b0\u4e2d..."
        },
        {
            "location": "/#2018",
            "text": "18/03/   fork-join\u6846\u67b6\u7ffb\u8bd1  fork-join\u793a\u4f8b\u7bc7  stream\u6d41\u6d45\u6790-1  lambda\u539f\u7406\u7bc7(\u8bd1)   18/02   [lambda\u521d\u8bc6]((it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6.md)   18/01   postman\u5b89\u88c5\u4e0e\u5b66\u4e60  postman\u6d4b\u8bd5",
            "title": "2018\u5e74"
        },
        {
            "location": "/#2017",
            "text": "17/12   [stream\u6d41\u6d45\u6790]((it/java/java8/stream\u6d41/stream\u6d41\u6d45\u6790.md)",
            "title": "2017\u5e74"
        },
        {
            "location": "/it/java/",
            "text": "java\u76f8\u5173\u6587\u6863\n\n\njava7\n\n\n\n\nfork-join\u6846\u67b6\u7ffb\u8bd1\n\n\nfork-join\u793a\u4f8b\u7bc7 18-03-21\n\n\n\n\njava8\n\n\n\n\n\n\nstream\u6d41\u6d45\u6790-1\n\n\n\n\n\n\nlambda\u521d\u8bc6\n\n\n\n\nlambda\u539f\u7406\u7bc7(\u8bd1)",
            "title": "java index"
        },
        {
            "location": "/it/java/#java",
            "text": "",
            "title": "java\u76f8\u5173\u6587\u6863"
        },
        {
            "location": "/it/java/#java7",
            "text": "fork-join\u6846\u67b6\u7ffb\u8bd1  fork-join\u793a\u4f8b\u7bc7 18-03-21",
            "title": "java7"
        },
        {
            "location": "/it/java/#java8",
            "text": "stream\u6d41\u6d45\u6790-1    lambda\u521d\u8bc6   lambda\u539f\u7406\u7bc7(\u8bd1)",
            "title": "java8"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/",
            "text": "java fork/join\u6846\u67b6\uff08\u8bd1\uff09\n\n\n\u65f6\u95f4\uff1a 2018-03-14\n\n\n\n\n\u9879\u76ee\u4e2d\u7528\u5230\u7684CompletableFuture\u5f02\u6b65\u7f16\u7a0b\u8f83\u591a\uff0c\u6b32\u7814\u7a76\u4e00\u4e0b\u5176\u4e2d\u7684\u539f\u7406\uff0c\u4e86\u89e3\u5230\u5176\u5e95\u5c42\u4f7f\u7528\u7684\u662fjava7\u4e2d\u7684fork/join\u6846\u67b6\uff0c\u5de7\u53c8\u89c5\u5f97\u5927\u5e08(Doug Lea)\u7684\u6587\u7ae0[\nA Java Fork/Join Framework\n]\uff0c\u7ffb\u8bd1\u4e00\u4e0b\u524d\u9762\u90e8\u5206\u5185\u5bb9\u3002\n\n\n\n\n\u6458\u8981\n\n\n\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86\u4e00\u79cd\u652f\u6301\u5e76\u884c\u7f16\u7a0b\u98ce\u683c\u7684java\u6846\u67b6\u7684\u8bbe\u8ba1\u3001\u5b9e\u73b0\u548c\u6027\u80fd\uff0c\u901a\u8fc7\u9012\u5f52\u5c06\u5176\u5212\u5206\u4e3a\u80fd\u591f\u5e76\u884c\u5904\u7406\u7684\u5b50\u4efb\u52a1\uff0c\u7b49\u5f85\u8ba1\u7b97\u5e76\u7ec4\u88c5\u7ed3\u679c\uff0c\u8fd9\u79cd\u6846\u67b6\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8eCilk work-stealing\u6846\u67b6\u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u4e3b\u8981\u7684\u5b9e\u73b0\u6280\u672f\u662f\u56f4\u7ed5\u7740\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b\u6784\u5efa\u6548\u7387\u548c\u7ba1\u7406\u5c55\u5f00\u7684\u3002\u6027\u80fd\u6d4b\u8bc4\u7ed3\u679c\u5c55\u793a\uff1a\u76f8\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u6709\u8f83\u597d\u7684\u5e76\u884c\u901f\u5ea6,\u4f46\u4e5f\u6709\u4e00\u4e9b\u53ef\u80fd\u9700\u8981\u6539\u8fdb\u3002\n\n\n1. \u4ecb\u7ecd\n\n\nfork/Join\u5e76\u884c\u6027\u5173\u6ce8\u6700\u7b80\u5355\u3001\u6700\u6709\u6548\u7684\u8bbe\u8ba1\u6280\u672f\u4ee5\u83b7\u53d6\u826f\u597d\u7684\u5e76\u884c\u6027\u80fd\uff0cfork/Join\u7b97\u6cd5\u662f\u719f\u77e5\u7684\u5206\u6cbb\u7b97\u6cd5\u7684\u5e76\u884c\u7248\u672c\uff0c\u5176\u5178\u578b\u5f62\u5f0f:\n\n\nResult solve (Problem problem) {\n    if (problem is small) \n       directly solve problem\n    else {\n        split problem into independent parts\n        fork new subtasks to solve each part \n        join all subtasks\n        compose result from subresults\n    }\n\n\n\n\nfork\u64cd\u4f5c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5e76\u884cfork/join\u5b50\u4efb\u52a1\uff0cjoin\u4efb\u52a1\u4f7f\u5f97\u5f53\u524d\u4efb\u52a1\u5728\u88abfork\u7684\u5b50\u4efb\u52a1\u8ba1\u7b97\u5b8c\u6210\u540e\u65b9\u80fd\u7ee7\u7eed\u3002\u548cfork/join\u7b97\u6cd5\u5176\u5b83\u7684\u5206\u6cbb\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u4e5f\u51e0\u4e4e\u91c7\u7528\u9012\u5f52\uff0c\u91cd\u590d\u5212\u5206\u5b50\u4efb\u52a1\u5c0f\u5230\u80fd\u591f\u4f7f\u7528\u7b80\u5355\u76f4\u63a5\u7684\u4e32\u884c\u65b9\u6cd5\u6765\u5904\u7406\u5b83\u4eec\u3002\n\n\n\u300aConcurrent Programming in Java\u300b\u7b2c\u4e8c\u7248\u4e00\u4e9b\u76f8\u5173\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f\u548c\u793a\u4f8b\u5c06\u5728\u7b2c4.4\u5c0f\u7ed3\u8fdb\u884c\u8ba8\u8bba\u3002\u7b2c2\u30013\u30014\u8282\u5206\u522b\u8ba8\u8bbaFJTask\u7684\u8bbe\u8ba1\u3001\u5b9e\u73b0\u4ee5\u53ca\u6027\u80fd\uff0c\u8fd9\u662f\u4e00\u4e2a\u652f\u6301java\u6846\u67b6\u5e76\u884c\u98ce\u683c\u7684\u6846\u67b6\u3002FJTask\u53ef\u4ee5\u901a\u8fc7[\n\u7f51\u5740 http://gee.cs.oswego.edu\n] \u4e0b\u7684util.concurrent\u5305\u83b7\u53d6\u5230\u3002\n\n\n2. \u8bbe\u8ba1\n\n\nfork/join\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u652f\u6301\u5e76\u884c\u6784\u9020\u5b50\u4efb\u52a1\u4ee5\u53ca\u6709\u7b49\u5f85\u5b8c\u6210\u7684\u673a\u5236\u7684\u4efb\u610f\u6846\u67b6\u6765\u8fd0\u884c\u3002\u7136\u800c\uff0cjava.lang.Thread\u7c7b(\u548cPOSIX\u7684pthreads\u7ebf\u7a0b\u4e00\u6837\uff0cJava\u7ebf\u7a0b\u5e38\u57fa\u4e8e\u5b83)\u5e76\u975e\u662f\u652f\u6301fork/join\u7f16\u7a0b\u7684\u6700\u4f18\u7684\u5de5\u5177\uff1a\n\n\n\n\nfork/join\u4efb\u52a1\u6709\u7b80\u5355\u3001\u5e38\u89c4\u7684\u540c\u6b65\u548c\u7ba1\u7406\u8981\u6c42\u3002\u8ba1\u7b97\u56fe\u8868\u8868\u660e\uff0cfork/join\u4efb\u52a1\u8fd0\u884c\u7684\u8c03\u5ea6\u7b56\u7565\u76f8\u6bd4\u4e8e\u901a\u7528\u7ebf\u7a0b\u66f4\u9ad8\u6548\u3002\u6bd4\u5982\uff0cfork/join\u4efb\u52a1\u9664\u975e\u662f\u5728\u7b49\u5f85\u5b50\u4efb\u52a1\uff0c\u5426\u5219\u6c38\u8fdc\u4e0d\u4f1a\u963b\u585e\u3002\u56e0\u6b64\uff0c\u666e\u901a\u7ebf\u7a0b\u5728\u8ffd\u8e2a\u963b\u585e\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u548c\u8bb0\u5f55\u662f\u4e00\u79cd\u6d6a\u8d39\u3002\n\n\n\u5408\u7406\u7684\u57fa\u672c\u4efb\u52a1\u7c92\u5ea6\uff0c\u6784\u9020\u548c\u7ba1\u7406\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5f00\u9500\u53ef\u80fd\u6bd4\u4efb\u52a1\u672c\u8eab\u7684\u8ba1\u7b97\u65f6\u95f4\u66f4\u4e45\uff0c\u5c3d\u7ba1\u7c92\u5ea6\u4f60\u80fd\u591f\u4e5f\u5e94\u8be5\u968f\u7740\u8fd0\u884c\u7684\u7279\u6b8a\u5e73\u53f0\u8fdb\u884c\u8c03\u6574\uff0c\u7c97\u7c92\u5ea6\u52a0\u91cd\u4e86\u7ebf\u7a0b\u7684\u5f00\u9500\uff0c\u5c06\u9650\u5236\u91c7\u7528\u5e76\u884c\u5904\u7406\u7684\u53ef\u80fd\u673a\u4f1a\u3002\n\n\n\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6807\u51c6\u7ebf\u7a0b\u6846\u67b6\u9488\u5927\u591a\u6570\u7684fork/join\u7a0b\u5e8f\u6765\u8bf4\u592a\u7b28\u91cd\u4e86\uff0c\u4f46\u662f\u7ebf\u7a0b\u505a\u4e3a\u5e76\u53d1\u548c\u5e76\u884c\u7f16\u7a0b\u98ce\u683c\u7684\u57fa\u7840\uff0c\u4e0d\u592a\u53ef\u80fd\uff08\u6216\u81f3\u5c11\u4e0d\u5207\u5b9e\u9645\uff09\u53bb\u79fb\u9664\u73b0\u6709\u5f00\u9500\u6216\u8c03\u6574\u7ebf\u7a0b\u81ea\u8eab\u7684\u8c03\u5ea6\u6765\u652f\u6301\u8fd9\u79cd(fork/join)\u98ce\u683c\u3002\u8fd9\u4e2a\u95ee\u9898\u6709\u4e00\u5b9a\u7684\u5386\u53f2\u4e86\uff0c\u4f46Cilk\u7b2c\u4e00\u6b21\u7684\u53d1\u5e03\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6846\u67b6\u3002Cilk\u548c\u5176\u5b83\u8f7b\u91cf\u7ea7\u8fd0\u884c\u6846\u67b6\u652f\u6301\u7528\u4e8e\u5728\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u7ebf\u7a0b\u6216\u6267\u884c\u673a\u5236\u4e4b\u4e0a\u7684fork/join\u3002\u8fd9\u4e2a\u7b56\u7565\u540c\u6837\u9002\u7528\u4e8ejava\u3002\u521b\u5efa\u8fd9\u6837\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Java\u6267\u884c\u6846\u67b6\u80fd\u4ee5\u66f4\u7b80\u4fbf\u7684\u65b9\u5f0f\u7f16\u5199fork/join\u7a0b\u5e8f\u5e76\u80fd\u5e7f\u6cdb\u8fd0\u884c\u5728\u652f\u6301JVM\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002\n\n\n\n\n\n\n\n\nFJTask\u6846\u67b6\u662f\u57fa\u4e8eCilk\u8bbe\u8ba1\u65b9\u6848\u7684\u4e00\u4e2a\u53d8\u4f53\u3002\u53e6\u5916\u7684\u53d8\u4f53\u89c1Hood, Filaments, stackthreads\u4ee5\u53ca\u76f8\u5173\u7684\u57fa\u4e8e\u8f7b\u91cf\u7ea7\u53ef\u6267\u884c\u4efb\u52a1\u3002\n\n\n\u5de5\u4f5c\u7a83\u53d6(Work-Stealing)\n\n\nfork/join\u7684\u6838\u5fc3\u5728\u4e8e\u5176\u81ea\u8eab\u7684\u8f7b\u91cf\u7ea7\u8c03\u5ea6\u673a\u5236\u3002FJTask\u91c7\u7528\u4e86Cilk\u63d0\u51fa\u7684\u6700\u57fa\u672c\u7b56\u7565\uff1a\u5de5\u4f5c\u7a83\u53d6\uff1a\n\n\n\n\n\u5404\u5de5\u4f5c\u7ebf\u7a0b\u7ef4\u62a4\u81ea\u8eab\u8c03\u5ea6\u961f\u5217\u4e2d\u53ef\u6267\u884c\u7684\u4efb\u52a1\u3002\n\n\n\u961f\u5217\u4ee5\u53cc\u7aef\u961f\u5217\u65b9\u5f0f\u8fdb\u884c\u7ef4\u62a4\uff0c\u652f\u6301LIFO\u7684push\u548cpop\u64cd\u4f5c\u4ee5\u53caFIFO\u7684take\u64cd\u4f5c\u3002\n\n\n\u5728\u7531\u7ed9\u7684\u7684\u5de5\u4f5c\u7ebf\u7a0b\u8fd0\u884c\u7684\u4efb\u52a1\u751f\u6210\u7684\u5b50\u4efb\u52a1push\u5230\u81ea\u8eab\u7684deque\u4e2d\u3002\n\n\n\u5de5\u4f5c\u7ebf\u7a0b\u4ee5LIFO\u7684\u987a\u5e8f\u5904\u7406\u81ea\u8eab\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002\n\n\n\u5f53\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u6ca1\u6709\u672c\u5730\u4efb\u52a1\u53ef\u4ee5\u8fd0\u884c\u65f6\uff0c\u5c1d\u8bd5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u5e76\u4ee5FIFO\u7684\u89c4\u5219\u7a83\u53d6\u5bf9\u5e94\u7ebf\u7a0b\u7684\u4efb\u52a1\u3002\n\n\n\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u9047\u5230join\u64cd\u4f5c\u65f6\uff0c\u5b83\u4f1a\u5904\u7406\u5176\u4ed6\u53ef\u7528\u4efb\u52a1\u76f4\u5230\u76ee\u6807\u4efb\u52a1\u5b8c\u6210\uff08\u901a\u8fc7isDone\u65b9\u6cd5\uff09\u3002\u6240\u6709\u4efb\u52a1\u4ee5\u975e\u963b\u585e\u65b9\u5f0f\u5b8c\u6210\u8fd0\u884c\u3002\n\n\n\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u65e0\u5de5\u4f5c\u4e14\u65e0\u6cd5\u4ece\u5176\u5b83\u5de5\u4f5c\u7ebf\u7a0b\u7a83\u53d6\u5230\u4efb\u52a1\u65f6\uff0c\u5c06\u4f1a\u8fd4\u56de\uff08\u901a\u8fc7yields, sleeps, \u6216\u8c03\u6574\u4f18\u5148\u7ea7\uff0c\u89c1\u7ae0\u82823\uff09\u7136\u540e\u518d\u6b21\u8fdb\u884c\u5c1d\u8bd5\uff0c\u76f4\u5230\u5176\u4ed6\u5de5\u4f5c\u7ebf\u7a0b\u90fd\u5904\u4e8e\u9650\u5236\u72b6\u6001\uff0c\u8fd9\u65f6\u6240\u6709\u7684\u5de5\u4f5c\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\u8d77\u6765\u76f4\u5230\u5176\u5b83\u4efb\u52a1\u4ecetop\u7aef\u88ab\u8c03\u7528\u3002\n\n\n\n\n\n\n\n\n\n\n[5]\u4e2d\u8ba8\u8bba\u4e86\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u5404\u7ebf\u7a0b\u4f7f\u7528LIFO\u89c4\u5219\u5904\u7406\u81ea\u8eab\u7684\u4efb\u52a1\uff0c\u4f46\u901a\u8fc7FIFO\u89c4\u5219\u53bb\u7a83\u53d6\u5176\u4ed6\u4efb\u52a1\u5bf9\u4e8e\u5e7f\u6cdb\u7684\u9012\u5f52fork/join\u8bbe\u8ba1\u662f\u6700\u7406\u60f3\u7684\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e24\u4e2a\u57fa\u672c\u7684\u4f18\u52bf\uff1a\n\n\n\u7a83\u53d6\u5de5\u4f5c\u7ebf\u7a0b\u5728\u53cc\u7aef\u961f\u5217\u7684\u53e6\u4e00\u7aef\u64cd\u4f5c\u80fd\u51cf\u5c11\u540c\u539f\u5de5\u4f5c\u7ebf\u7a0b\u7684\u7ade\u4e89\u3002\u540c\u65f6\uff0c\u5b83\u8fd8\u5229\u7528\u4e86\u5206\u800c\u6cbb\u4e4b\u7684\u9012\u5f52\u7b97\u6cd5\u4ea7\u751f\u65e9\u671f\u8f83\u5927\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u8001\u7684\u7a83\u53d6\u4efb\u52a1\u4f3c\u4e4e\u4e3a\u5de5\u4f5c\u7ebf\u7a0b\u83b7\u5230\u66f4\u5927\u7684\u4efb\u52a1\uff0c\u8fd9\u4f1a\u901a\u8fc7\u7a83\u53d6\u7ebf\u7a0b\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u9012\u5f52\u5212\u5206\u3002\n\n\n\u4f5c\u4e3a\u8fd9\u4e9b\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u91c7\u7528\u76f8\u5bf9\u66f4\u7ec6\u7c92\u5ea6\u7684\u4efb\u52a1\u6bd4\u4ec5\u91c7\u7528\u7c97\u7c92\u5ea6\u6216\u4e0d\u91c7\u7528\u9012\u5f52\u5206\u89e3\u7684\u65b9\u6cd5\u80fd\u591f\u8fd0\u884c\u66f4\u5feb\u3002\u867d\u7136fork/join\u4e2d\u5c11\u53ea\u6709\u91cf\u4efb\u52a1\u88ab\u7a83\u53d6\uff0c\u4f46\u521b\u5efa\u7ec6\u7c92\u5ea6\u7684\u4efb\u52a1\u610f\u5473\u7740\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u51c6\u5907\u8fd0\u884c\u5b83\u65f6\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u3002\n\n\n3. \u5b9e\u73b0\n\n\n\u6846\u67b6\u7528\u7ea6800\u884c\u7684\u7eafJava\u4ee3\u7801\u5b9e\u73b0\uff0c\u4e3b\u8981\u662fFJTaskRunner\u7c7b\uff0c\u662fjava.lang.Thread.FJTasks\u5b50\u7c7b\uff0c\u7ef4\u62a4\u5e03\u5c14\u7c7b\u578b\u7684\u5b8c\u6210\u72b6\u6001\u53d8\u91cf\u4ee5\u53ca\u5c06\u5176\u4ed6\u6240\u6709\u7684\u64cd\u4f5c\u4ea4\u4e88\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u5b8c\u6210\u3002FJTaskRunnerGroup\u7c7b\u7528\u6765\u6784\u9020\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u7ef4\u62a4\u4e00\u4e9b\u5171\u4eab\u72b6\u6001\uff08\u5982\u6240\u6709\u5de5\u4f5c\u7ebf\u7a0b\u7684\u8ba4\u8bc1\u3001\u7a83\u53d6\u64cd\u4f5c\uff09\u5e76\u534f\u540c\u5f00\u59cb\u548c\u505c\u6b62\u5de5\u4f5c\u3002\u66f4\u591a\u5b9e\u73b0\u7ec6\u8282\u6587\u6863\u53ef\u4ee5\u901a\u8fc7util.concurrent\u5305\u8fdb\u884c\u83b7\u53d6\uff0c\u672c\u7ae0\u8282\u4e3b\u8981\u8ba8\u8bba\u5728\u5b9e\u73b0\u6846\u67b6\u65f6\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff1a\u652f\u6301\u9ad8\u6548\u7684\u53cc\u7aef\u961f\u5217\u64cd\u4f5c\uff08push\u3001pop\u548ctake\u64cd\u4f5c\uff09\uff0c\u4ee5\u53ca\u7ba1\u7406\u7ebf\u7a0b\u83b7\u53d6\u65b0\u5de5\u4f5c\u7684\u7a83\u53d6\u534f\u8bae\u3002\n\n\n3.1 \u53cc\u7aef\u961f\u5217(Deques)\n\n\n\u4e3a\u4e86\u80fd\u591f\u9ad8\u6548\u4e14\u53ef\u4f38\u7f29\u7684\u6267\u884c\uff0c\u4efb\u52a1\u7ba1\u7406\u5fc5\u987b\u5c3d\u53ef\u80fd\u5feb\u5730\u5b8c\u6210\uff0ccreating\uff0cpushing\u4ee5\u53ca\u4e4b\u540e\u7684poping(\u6216\u8005\u4f4e\u9891\u5ea6\u7684taking)\u4efb\u52a1\u7c7b\u6bd4\u4e8e\u7a0b\u5e8f\u5728\u987a\u5e8f\u6267\u884c\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002\u8f83\u4f4e\u7684\u5f00\u9500\u4f7f\u7a0b\u5e8f\u5458\u80fd\u591f\u91c7\u7528\u66f4\u5c0f\u7684\u4efb\u52a1\u7c92\u5ea6\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5e76\u884c\u6027\u3002\u52a1\u662f\u4f9d\u9760JVM\u8fdb\u884c\u5206\u914d\uff0cJava\u7684\u5783\u573e\u56de\u6536\u4f7f\u5f97\u6211\u4eec\u4e0d\u5fc5\u6784\u9020\u4e00\u5757\u7279\u6b8a\u7528\u9014\u7684\u5185\u5b58\u5206\u914d\u5668\u6765\u7ef4\u62a4\u4efb\u52a1\u3002\u4e0e\u5176\u4ed6\u8bed\u8a00\u5b9e\u73b0\u7684\u7c7b\u4f3c\u6846\u67b6\u76f8\u6bd4\uff0c\u8fd9\u5927\u5927\u51cf\u5c11\u4e86\u5b9e\u73b0FJTasks\u7684\u590d\u6742\u5ea6\u548c\u4ee3\u7801\u91cf\u3002\n\n\n\u53cc\u7aef\u961f\u5217\u7684\u4e3b\u8981\u6311\u6218\u662f\u540c\u6b65\u548c\u7ade\u4e89\u3002\u5373\u4f7f\u5728\u4f7f\u7528\u4f18\u5316\u7684\u540c\u6b65\u5de5\u5177\u7684jvm\u4e0a\uff0c\u5bf9\u6bcf\u4e2apush\u548cpop\u64cd\u4f5c\u83b7\u53d6\u9501\u7684\u9700\u6c42\u4e5f\u6210\u4e3a\u4e86\u74f6\u9888\u3002\u7136\u800c\uff0cCilk\u91c7\u53d6\u4e86\u9002\u914d\u7b56\u7565\u4ee5\u63d0\u4f9b\u57fa\u4e8e\u5982\u4e0b\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a\n\n\n\n\npush\u548cpop\u64cd\u4f5c\u53ea\u80fd\u7531\u7ebf\u7a0b\u672c\u8eab\u8c03\u7528\u3002\n\n\n\u540c\u5bf9take\u64cd\u4f5c\u64cd\u4f5c\u4e00\u4e2a\u53ef\u91cd\u5165\u9501\u5bb9\u6613\u4f7f\u5f97take\u64cd\u4f5c\u4e0e\u7a83\u53d6\u7ebf\u7a0b\u51b2\u7a81\uff08\u53cc\u7aef\u961f\u5217\u9501\u5728\u5fc5\u8981\u7684\u65f6\u5019\u53ef\u4ee5\u7981\u7528take\u64cd\u4f5c\uff09\u3002\u56e0\u6b64\uff0c\u63a5\u53e3\u63a7\u5236\u51cf\u5c11\u4e86\u91cf\u90e8\u5206\u7684\u540c\u6b65\u95ee\u9898\u3002\n\n\npop\u548ctake\u53ea\u6709\u5728\u53cc\u7aef\u5bf9\u522b\u4e3a\u7a7a\u65f6\u624d\u4f1a\u4ea7\u751f\u5e72\u6270\uff0c\u5426\u5219\u5c31\u80fd\u591f\u4fdd\u8bc1\u8fd0\u884c\u5728\u5143\u7d20\u4e0d\u76f8\u4ea4\u7684\u6570\u7ec4\u4e2d\u3002\n\n\n\n\n\u5c06top\u548cbase\u6307\u9488\u5b9a\u4e49\u4e3avolaile\u4ee5\u4fdd\u8bc1pop\u548ctake\u64cd\u4f5c\u5728\u53cc\u7aef\u961f\u5217\u6709\u591a\u4e2a\u4e2a\u5143\u7d20\u65f6\u65e0\u9700\u9501\u5b9a\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u4e8eDekker\u7684\u7b97\u6cd5\u4e3atop\u6dfb\u52a0\u4e00\u4e2a\u524d\u51cf\u91cf\uff1a\n\n\nif \uff08--top >= base\uff09 ...\n\n\n\u4ee5\u53ca\u4e3abase\u6dfb\u52a0\u4e00\u4e2a\u524d\u589e\u91cf:\n\n\nif (++base < top) ...\n\n\n\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u5fc5\u987b\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a\u7d22\u5f15\u68c0\u6d4b\u662f\u5426\u4f1a\u5bfc\u81f4\u53cc\u7aef\u961f\u5217\u53d8\u4e3a\u7a7a\u3002\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4f4d\u6f5c\u5728\u51b2\u7a81\u7684\u975e\u5bf9\u79f0\u89c4\u5219\uff1apop\u64cd\u4f5c\u5c06\u4f1a\u5728\u83b7\u53d6\u5230\u53cc\u7aef\u961f\u5217\u9501\u4e4b\u540e\u7ee7\u7eed\u91cd\u65b0\u68c0\u6d4b\u72b6\u6001\u5e76\u5c1d\u8bd5\u7ee7\u7eed\uff08take\u64cd\u4f5c\u7c7b\u4f3c\uff09\uff0c\u5728\u53cc\u7aef\u961f\u5217\u4e3a\u7a7a\u65f6\u8fd4\u56de\u3002take\u64cd\u4f5c\u5c06\u4f1a\u7acb\u5373\u56de\u9000\uff0c\u5178\u578b\u7684\uff0c\u5c1d\u8bd5\u4ece\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u7a83\u53d6\u3002\u8fd9\u79cd\u975e\u5bf9\u79f0\u8868\u793a\u662fJ\u4e0eCilk\u8bed\u8a00THE\u534f\u8bae\u5b9e\u73b0\u7684\u91cd\u8981\u4e0d\u540c\u4e4b\u5904\u3002\n\n\n\u4f7f\u7528volatile\u7d22\u5f15\u8ba9push\u64cd\u4f5c\u4ec5\u5728\u961f\u5217\u6ea2\u51fa\u65f6\u9700\u8981\u540c\u6b65\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9996\u8981\u7684\u5c31\u662f\u83b7\u53d6\u53cc\u7aef\u961f\u5217\u9501\u5e76\u91cd\u65b0\u8bbe\u7f6e\u6570\u7ec4\u5927\u5c0f\u3002\u6b64\u5916\uff0c\u7b80\u5355\u5730\u4fdd\u8bc1\u4e86top\u5728\u53cc\u7aef\u961f\u5217\u6570\u7ec4\u88ab\u586b\u5145\u540e\u88ab\u4fee\u6539\u964d\u4f4etake\u64cd\u4f5c\u7684\u5e72\u6270\u3002\n\n\n\u968f\u540e\u7684\u521d\u6b65\u5b9e\u73b0\uff0c\u5bf9\u4e2aJVM\u548cJMM(Java\u5185\u5b58\u6a21\u578b)\u89c4\u5219\u5bf9volatile\u5b57\u6bb5\u8981\u6c42\u7684\u5148\u5199\u518d\u8bfb\u5177\u6709\u4e0d\u4e00\u81f4\u6027\u3002\u4f5c\u4e3a\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0cpop\u91cd\u65b0\u83b7\u53d6\u9501\u7684\u64cd\u4f5c\u88ab\u8c03\u6574\u4e3a\u5982\u679c\u6709\u4e24\u4e2a\u6216\u66f4\u5c11\u7684\u5143\u7d20\u65f6\u89e6\u53d1\uff0c\u5e76\u4e3atake\u64cd\u4f5c\u6dfb\u52a0\u53e6\u4e00\u628a\u9501\u4ee5\u4fdd\u8bc1\u5185\u5b58\u5c4f\u969c\u3002\u53ea\u8981\u5927\u591a\u6570\u7d22\u5f15\u66f4\u6539\u88ab\u6240\u6709\u8005\u7ebf\u7a0b\u5ffd\u7565\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86(\u5728\u9605\u8bfbvolatile\u5b57\u6bb5\u65f6\uff0c\u54ea\u4e9b\u5e73\u53f0\u53ef\u4ee5\u4fdd\u6301\u9002\u5f53\u7684\u5185\u5b58\u987a\u5e8f)\uff0c\u5728\u6027\u80fd\u4e0a\u4ec5\u6709\u4e00\u70b9\u70b9\u7684\u4e0b\u964d\u3002\n\n\n3.2 \u7a83\u53d6\u548c\u7a7a\u95f2\n\n\nwork-stealing\u6846\u67b6\u4e2d\u7684\u5de5\u4f5c\u7ebf\u7a0b\u5bf9\u5176\u8fd0\u884c\u7a0b\u5e8f\u7684\u540c\u6b65\u8981\u6c42\u4e00\u65e0\u6240\u77e5\u3002\u5b83\u4eec\u7b80\u5355\u7684generate, push, pop, take\uff0c\u7ba1\u7406\u72b6\u6001\u548c\u6267\u884c\u4efb\u52a1\u3002\u8fd9\u4e2a\u6a21\u5f0f\u7684\u7b80\u5355\u6027\u4f7f\u5f97\u5f53\u6240\u6709\u7ebf\u7a0b\u5373\u4f7f\u6709\u5927\u91cf\u7684\u5de5\u4f5c\u65f6\u4e5f\u80fd\u9ad8\u6548\u5730\u6267\u884c\u3002\u7136\u800c\uff0c\u5f53\u6ca1\u6709\u8db3\u591f\u5de5\u4f5c\u65f6\uff0c\u8fd9\u79cd\u6d41\u6c34\u7ebf\u5c31\u4f1a\u4ea7\u751f\u4ee5\u542f\u53d1\u5f0f\u4e3a\u4ee3\u4ef7\u3002\u5728\u542f\u52a8\u4e00\u4e2a\u4e3b\u4efb\u52a1\u671f\u95f4\uff0c\u5728\u5176\u5b8c\u6210\u4e4b\u540e\uff0c\u4ee5\u53ca\u5728\u4e00\u4e9bfork/join\u7b97\u6cd5\u4e2d\u4f7f\u7528\u7684\u5168\u5c40\u5b8c\u5168\u505c\u6b62\u540c\u6b65\u70b9\u3002\n\n\n\u8fd9\u513f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u5c31\u662f\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u65e0\u672c\u5730\u4efb\u52a1\u4e14\u4e0d\u80fd\u4ece\u5176\u4ed6\u7ebf\u7a0b\u5904\u7a83\u53d6\u4e00\u4e2a\u4efb\u52a1\u65f6\u4f1a\u505a\u4ec0\u4e48\u5904\u7406.\u5982\u679c\u6210\u884c\u8fd0\u884c\u5728\u4e13\u7528\u5904\u7406\u5668\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u5fd9\u5219\u7b49\u5f85\u7684\u65b9\u5f0f\u5faa\u73af\u5c1d\u8bd5\u7a83\u53d6\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u610f\u56fe\u7a83\u53d6\u4f1a\u589e\u52a0\u7ade\u4e89\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u8fd9\u4e9b\u7ebf\u7a0b\u964d\u4f4e\u901f\u5ea6\u751a\u81f3\u95f2\u7f6e\uff08\u56e0\u4e3a\u7ae0\u82823.1\u4e2d\u7684\u9501\u534f\u8bae\uff09\u3002\u6b64\u5916\uff0c\u5728\u8fd9\u4e2a\u6846\u67b6\u66f4\u5178\u578b\u7684\u5e94\u7528\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c1d\u8bd5\u8fd0\u884c\u5176\u4ed6\u4e0d\u76f8\u5e72\u7684\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u3002\n\n\n\u7528Java\u5b9e\u73b0\u8fd9\u4e2a\u6846\u67b6\u5de5\u5177\u5f88\u5f31\u4e14\u6ca1\u6709\u4fdd\u969c\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u662f\u53ef\u63a5\u53d7\u7684\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u4e0d\u80fd\u4ece\u4efb\u4f55\u5176\u4ed6\u7ebf\u7a0b\u83b7\u5f97\u5de5\u4f5c\uff0c\u5219\u5728\u5c1d\u8bd5\u53e6\u5916\u7684\u7a83\u53d6\u4e4b\u524d\u4f1a\u964d\u4f4e\u5b83\u7684\u4f18\u5148\u7ea7\uff0c\u8c03\u7528Thread.yield\u65b9\u6cd5\uff0c\u5e76\u5728TJTaskRunnerGroup\u4e2d\u5c06\u5176\u6ce8\u518c\u4e3a\u975e\u6d3b\u8dc3\u72b6\u6001\u3002\u5982\u679c\u6240\u6709\u7684\u5de5\u4f5c\u7ebf\u7a0b\u90fd\u53d8\u6210\u975e\u6d3b\u72b6\u6001\u65f6\u8dc3\uff0c\u5b83\u4eec\u5c06\u4f1a\u963b\u585e\u5e76\u7b49\u5f85\u4e3b\u4efb\u52a1\u7684\u540c\u6b65\u3002\u6b64\u5916\uff0c\u5728\u7ed9\u5b9a\u7684\u81ea\u8f6c\u6b21\u6570\u540e\u540e\uff0c\u518d\u6b21\u7a83\u53d6\u4efb\u52a1\u524d\u7ebf\u7a0b\u5c06\u8fdb\u5165\u7761\u7720\u9636\u6bb5(\u7ea6100ms)\u800c\u4e0d\u662f\u8c03\u7528yield\u65b9\u6cd5\uff0c\u5728\u7a0b\u5e8f\u4e2d\u4eba\u4e3a\u5f3a\u52a0\u7684\u4f11\u7720\u5c06\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u5207\u5206\u4efb\u52a1\u3002\u4f46\u8fd9\u4f3c\u4e4e\u662f\u89e3\u51b3\u901a\u7528\u95ee\u9898\u7684\u6700\u4f73\u529e\u6cd5\u3002\u6846\u67b6\u4ee5\u540e\u7684\u7248\u672c\u53ef\u80fd\u652f\u6301\u989d\u5916\u7684\u63a7\u5236\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u7f16\u7a0b\u4eba\u5458\u5728\u9047\u5230\u5f71\u54cd\u6027\u80fd\u65f6\u80fd\u91cd\u8f7d\u9ed8\u8ba4\u65b9\u6cd5\u3002",
            "title": "fork-join\u6846\u67b6\u7ffb\u8bd1"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#java-forkjoin",
            "text": "\u65f6\u95f4\uff1a 2018-03-14   \u9879\u76ee\u4e2d\u7528\u5230\u7684CompletableFuture\u5f02\u6b65\u7f16\u7a0b\u8f83\u591a\uff0c\u6b32\u7814\u7a76\u4e00\u4e0b\u5176\u4e2d\u7684\u539f\u7406\uff0c\u4e86\u89e3\u5230\u5176\u5e95\u5c42\u4f7f\u7528\u7684\u662fjava7\u4e2d\u7684fork/join\u6846\u67b6\uff0c\u5de7\u53c8\u89c5\u5f97\u5927\u5e08(Doug Lea)\u7684\u6587\u7ae0[ A Java Fork/Join Framework ]\uff0c\u7ffb\u8bd1\u4e00\u4e0b\u524d\u9762\u90e8\u5206\u5185\u5bb9\u3002",
            "title": "java fork/join\u6846\u67b6\uff08\u8bd1\uff09"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#_1",
            "text": "\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86\u4e00\u79cd\u652f\u6301\u5e76\u884c\u7f16\u7a0b\u98ce\u683c\u7684java\u6846\u67b6\u7684\u8bbe\u8ba1\u3001\u5b9e\u73b0\u548c\u6027\u80fd\uff0c\u901a\u8fc7\u9012\u5f52\u5c06\u5176\u5212\u5206\u4e3a\u80fd\u591f\u5e76\u884c\u5904\u7406\u7684\u5b50\u4efb\u52a1\uff0c\u7b49\u5f85\u8ba1\u7b97\u5e76\u7ec4\u88c5\u7ed3\u679c\uff0c\u8fd9\u79cd\u6846\u67b6\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8eCilk work-stealing\u6846\u67b6\u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u4e3b\u8981\u7684\u5b9e\u73b0\u6280\u672f\u662f\u56f4\u7ed5\u7740\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b\u6784\u5efa\u6548\u7387\u548c\u7ba1\u7406\u5c55\u5f00\u7684\u3002\u6027\u80fd\u6d4b\u8bc4\u7ed3\u679c\u5c55\u793a\uff1a\u76f8\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u7a0b\u5e8f\u6709\u8f83\u597d\u7684\u5e76\u884c\u901f\u5ea6,\u4f46\u4e5f\u6709\u4e00\u4e9b\u53ef\u80fd\u9700\u8981\u6539\u8fdb\u3002",
            "title": "\u6458\u8981"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#1",
            "text": "fork/Join\u5e76\u884c\u6027\u5173\u6ce8\u6700\u7b80\u5355\u3001\u6700\u6709\u6548\u7684\u8bbe\u8ba1\u6280\u672f\u4ee5\u83b7\u53d6\u826f\u597d\u7684\u5e76\u884c\u6027\u80fd\uff0cfork/Join\u7b97\u6cd5\u662f\u719f\u77e5\u7684\u5206\u6cbb\u7b97\u6cd5\u7684\u5e76\u884c\u7248\u672c\uff0c\u5176\u5178\u578b\u5f62\u5f0f:  Result solve (Problem problem) {\n    if (problem is small) \n       directly solve problem\n    else {\n        split problem into independent parts\n        fork new subtasks to solve each part \n        join all subtasks\n        compose result from subresults\n    }  fork\u64cd\u4f5c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5e76\u884cfork/join\u5b50\u4efb\u52a1\uff0cjoin\u4efb\u52a1\u4f7f\u5f97\u5f53\u524d\u4efb\u52a1\u5728\u88abfork\u7684\u5b50\u4efb\u52a1\u8ba1\u7b97\u5b8c\u6210\u540e\u65b9\u80fd\u7ee7\u7eed\u3002\u548cfork/join\u7b97\u6cd5\u5176\u5b83\u7684\u5206\u6cbb\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u4e5f\u51e0\u4e4e\u91c7\u7528\u9012\u5f52\uff0c\u91cd\u590d\u5212\u5206\u5b50\u4efb\u52a1\u5c0f\u5230\u80fd\u591f\u4f7f\u7528\u7b80\u5355\u76f4\u63a5\u7684\u4e32\u884c\u65b9\u6cd5\u6765\u5904\u7406\u5b83\u4eec\u3002  \u300aConcurrent Programming in Java\u300b\u7b2c\u4e8c\u7248\u4e00\u4e9b\u76f8\u5173\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f\u548c\u793a\u4f8b\u5c06\u5728\u7b2c4.4\u5c0f\u7ed3\u8fdb\u884c\u8ba8\u8bba\u3002\u7b2c2\u30013\u30014\u8282\u5206\u522b\u8ba8\u8bbaFJTask\u7684\u8bbe\u8ba1\u3001\u5b9e\u73b0\u4ee5\u53ca\u6027\u80fd\uff0c\u8fd9\u662f\u4e00\u4e2a\u652f\u6301java\u6846\u67b6\u5e76\u884c\u98ce\u683c\u7684\u6846\u67b6\u3002FJTask\u53ef\u4ee5\u901a\u8fc7[ \u7f51\u5740 http://gee.cs.oswego.edu ] \u4e0b\u7684util.concurrent\u5305\u83b7\u53d6\u5230\u3002",
            "title": "1. \u4ecb\u7ecd"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#2",
            "text": "fork/join\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u652f\u6301\u5e76\u884c\u6784\u9020\u5b50\u4efb\u52a1\u4ee5\u53ca\u6709\u7b49\u5f85\u5b8c\u6210\u7684\u673a\u5236\u7684\u4efb\u610f\u6846\u67b6\u6765\u8fd0\u884c\u3002\u7136\u800c\uff0cjava.lang.Thread\u7c7b(\u548cPOSIX\u7684pthreads\u7ebf\u7a0b\u4e00\u6837\uff0cJava\u7ebf\u7a0b\u5e38\u57fa\u4e8e\u5b83)\u5e76\u975e\u662f\u652f\u6301fork/join\u7f16\u7a0b\u7684\u6700\u4f18\u7684\u5de5\u5177\uff1a   fork/join\u4efb\u52a1\u6709\u7b80\u5355\u3001\u5e38\u89c4\u7684\u540c\u6b65\u548c\u7ba1\u7406\u8981\u6c42\u3002\u8ba1\u7b97\u56fe\u8868\u8868\u660e\uff0cfork/join\u4efb\u52a1\u8fd0\u884c\u7684\u8c03\u5ea6\u7b56\u7565\u76f8\u6bd4\u4e8e\u901a\u7528\u7ebf\u7a0b\u66f4\u9ad8\u6548\u3002\u6bd4\u5982\uff0cfork/join\u4efb\u52a1\u9664\u975e\u662f\u5728\u7b49\u5f85\u5b50\u4efb\u52a1\uff0c\u5426\u5219\u6c38\u8fdc\u4e0d\u4f1a\u963b\u585e\u3002\u56e0\u6b64\uff0c\u666e\u901a\u7ebf\u7a0b\u5728\u8ffd\u8e2a\u963b\u585e\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u548c\u8bb0\u5f55\u662f\u4e00\u79cd\u6d6a\u8d39\u3002  \u5408\u7406\u7684\u57fa\u672c\u4efb\u52a1\u7c92\u5ea6\uff0c\u6784\u9020\u548c\u7ba1\u7406\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5f00\u9500\u53ef\u80fd\u6bd4\u4efb\u52a1\u672c\u8eab\u7684\u8ba1\u7b97\u65f6\u95f4\u66f4\u4e45\uff0c\u5c3d\u7ba1\u7c92\u5ea6\u4f60\u80fd\u591f\u4e5f\u5e94\u8be5\u968f\u7740\u8fd0\u884c\u7684\u7279\u6b8a\u5e73\u53f0\u8fdb\u884c\u8c03\u6574\uff0c\u7c97\u7c92\u5ea6\u52a0\u91cd\u4e86\u7ebf\u7a0b\u7684\u5f00\u9500\uff0c\u5c06\u9650\u5236\u91c7\u7528\u5e76\u884c\u5904\u7406\u7684\u53ef\u80fd\u673a\u4f1a\u3002   \u7b80\u800c\u8a00\u4e4b\uff0c\u6807\u51c6\u7ebf\u7a0b\u6846\u67b6\u9488\u5927\u591a\u6570\u7684fork/join\u7a0b\u5e8f\u6765\u8bf4\u592a\u7b28\u91cd\u4e86\uff0c\u4f46\u662f\u7ebf\u7a0b\u505a\u4e3a\u5e76\u53d1\u548c\u5e76\u884c\u7f16\u7a0b\u98ce\u683c\u7684\u57fa\u7840\uff0c\u4e0d\u592a\u53ef\u80fd\uff08\u6216\u81f3\u5c11\u4e0d\u5207\u5b9e\u9645\uff09\u53bb\u79fb\u9664\u73b0\u6709\u5f00\u9500\u6216\u8c03\u6574\u7ebf\u7a0b\u81ea\u8eab\u7684\u8c03\u5ea6\u6765\u652f\u6301\u8fd9\u79cd(fork/join)\u98ce\u683c\u3002\u8fd9\u4e2a\u95ee\u9898\u6709\u4e00\u5b9a\u7684\u5386\u53f2\u4e86\uff0c\u4f46Cilk\u7b2c\u4e00\u6b21\u7684\u53d1\u5e03\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u7edf\u6027\u7684\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6846\u67b6\u3002Cilk\u548c\u5176\u5b83\u8f7b\u91cf\u7ea7\u8fd0\u884c\u6846\u67b6\u652f\u6301\u7528\u4e8e\u5728\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u7ebf\u7a0b\u6216\u6267\u884c\u673a\u5236\u4e4b\u4e0a\u7684fork/join\u3002\u8fd9\u4e2a\u7b56\u7565\u540c\u6837\u9002\u7528\u4e8ejava\u3002\u521b\u5efa\u8fd9\u6837\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Java\u6267\u884c\u6846\u67b6\u80fd\u4ee5\u66f4\u7b80\u4fbf\u7684\u65b9\u5f0f\u7f16\u5199fork/join\u7a0b\u5e8f\u5e76\u80fd\u5e7f\u6cdb\u8fd0\u884c\u5728\u652f\u6301JVM\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002     FJTask\u6846\u67b6\u662f\u57fa\u4e8eCilk\u8bbe\u8ba1\u65b9\u6848\u7684\u4e00\u4e2a\u53d8\u4f53\u3002\u53e6\u5916\u7684\u53d8\u4f53\u89c1Hood, Filaments, stackthreads\u4ee5\u53ca\u76f8\u5173\u7684\u57fa\u4e8e\u8f7b\u91cf\u7ea7\u53ef\u6267\u884c\u4efb\u52a1\u3002",
            "title": "2. \u8bbe\u8ba1"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#work-stealing",
            "text": "fork/join\u7684\u6838\u5fc3\u5728\u4e8e\u5176\u81ea\u8eab\u7684\u8f7b\u91cf\u7ea7\u8c03\u5ea6\u673a\u5236\u3002FJTask\u91c7\u7528\u4e86Cilk\u63d0\u51fa\u7684\u6700\u57fa\u672c\u7b56\u7565\uff1a\u5de5\u4f5c\u7a83\u53d6\uff1a   \u5404\u5de5\u4f5c\u7ebf\u7a0b\u7ef4\u62a4\u81ea\u8eab\u8c03\u5ea6\u961f\u5217\u4e2d\u53ef\u6267\u884c\u7684\u4efb\u52a1\u3002  \u961f\u5217\u4ee5\u53cc\u7aef\u961f\u5217\u65b9\u5f0f\u8fdb\u884c\u7ef4\u62a4\uff0c\u652f\u6301LIFO\u7684push\u548cpop\u64cd\u4f5c\u4ee5\u53caFIFO\u7684take\u64cd\u4f5c\u3002  \u5728\u7531\u7ed9\u7684\u7684\u5de5\u4f5c\u7ebf\u7a0b\u8fd0\u884c\u7684\u4efb\u52a1\u751f\u6210\u7684\u5b50\u4efb\u52a1push\u5230\u81ea\u8eab\u7684deque\u4e2d\u3002  \u5de5\u4f5c\u7ebf\u7a0b\u4ee5LIFO\u7684\u987a\u5e8f\u5904\u7406\u81ea\u8eab\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002  \u5f53\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u6ca1\u6709\u672c\u5730\u4efb\u52a1\u53ef\u4ee5\u8fd0\u884c\u65f6\uff0c\u5c1d\u8bd5\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u5e76\u4ee5FIFO\u7684\u89c4\u5219\u7a83\u53d6\u5bf9\u5e94\u7ebf\u7a0b\u7684\u4efb\u52a1\u3002  \u5f53\u5de5\u4f5c\u7ebf\u7a0b\u9047\u5230join\u64cd\u4f5c\u65f6\uff0c\u5b83\u4f1a\u5904\u7406\u5176\u4ed6\u53ef\u7528\u4efb\u52a1\u76f4\u5230\u76ee\u6807\u4efb\u52a1\u5b8c\u6210\uff08\u901a\u8fc7isDone\u65b9\u6cd5\uff09\u3002\u6240\u6709\u4efb\u52a1\u4ee5\u975e\u963b\u585e\u65b9\u5f0f\u5b8c\u6210\u8fd0\u884c\u3002  \u5f53\u5de5\u4f5c\u7ebf\u7a0b\u65e0\u5de5\u4f5c\u4e14\u65e0\u6cd5\u4ece\u5176\u5b83\u5de5\u4f5c\u7ebf\u7a0b\u7a83\u53d6\u5230\u4efb\u52a1\u65f6\uff0c\u5c06\u4f1a\u8fd4\u56de\uff08\u901a\u8fc7yields, sleeps, \u6216\u8c03\u6574\u4f18\u5148\u7ea7\uff0c\u89c1\u7ae0\u82823\uff09\u7136\u540e\u518d\u6b21\u8fdb\u884c\u5c1d\u8bd5\uff0c\u76f4\u5230\u5176\u4ed6\u5de5\u4f5c\u7ebf\u7a0b\u90fd\u5904\u4e8e\u9650\u5236\u72b6\u6001\uff0c\u8fd9\u65f6\u6240\u6709\u7684\u5de5\u4f5c\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\u8d77\u6765\u76f4\u5230\u5176\u5b83\u4efb\u52a1\u4ecetop\u7aef\u88ab\u8c03\u7528\u3002      [5]\u4e2d\u8ba8\u8bba\u4e86\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u5404\u7ebf\u7a0b\u4f7f\u7528LIFO\u89c4\u5219\u5904\u7406\u81ea\u8eab\u7684\u4efb\u52a1\uff0c\u4f46\u901a\u8fc7FIFO\u89c4\u5219\u53bb\u7a83\u53d6\u5176\u4ed6\u4efb\u52a1\u5bf9\u4e8e\u5e7f\u6cdb\u7684\u9012\u5f52fork/join\u8bbe\u8ba1\u662f\u6700\u7406\u60f3\u7684\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u8fd9\u79cd\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e24\u4e2a\u57fa\u672c\u7684\u4f18\u52bf\uff1a  \u7a83\u53d6\u5de5\u4f5c\u7ebf\u7a0b\u5728\u53cc\u7aef\u961f\u5217\u7684\u53e6\u4e00\u7aef\u64cd\u4f5c\u80fd\u51cf\u5c11\u540c\u539f\u5de5\u4f5c\u7ebf\u7a0b\u7684\u7ade\u4e89\u3002\u540c\u65f6\uff0c\u5b83\u8fd8\u5229\u7528\u4e86\u5206\u800c\u6cbb\u4e4b\u7684\u9012\u5f52\u7b97\u6cd5\u4ea7\u751f\u65e9\u671f\u8f83\u5927\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u8001\u7684\u7a83\u53d6\u4efb\u52a1\u4f3c\u4e4e\u4e3a\u5de5\u4f5c\u7ebf\u7a0b\u83b7\u5230\u66f4\u5927\u7684\u4efb\u52a1\uff0c\u8fd9\u4f1a\u901a\u8fc7\u7a83\u53d6\u7ebf\u7a0b\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u9012\u5f52\u5212\u5206\u3002  \u4f5c\u4e3a\u8fd9\u4e9b\u89c4\u5219\u7684\u7ed3\u679c\uff0c\u91c7\u7528\u76f8\u5bf9\u66f4\u7ec6\u7c92\u5ea6\u7684\u4efb\u52a1\u6bd4\u4ec5\u91c7\u7528\u7c97\u7c92\u5ea6\u6216\u4e0d\u91c7\u7528\u9012\u5f52\u5206\u89e3\u7684\u65b9\u6cd5\u80fd\u591f\u8fd0\u884c\u66f4\u5feb\u3002\u867d\u7136fork/join\u4e2d\u5c11\u53ea\u6709\u91cf\u4efb\u52a1\u88ab\u7a83\u53d6\uff0c\u4f46\u521b\u5efa\u7ec6\u7c92\u5ea6\u7684\u4efb\u52a1\u610f\u5473\u7740\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u51c6\u5907\u8fd0\u884c\u5b83\u65f6\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\u3002",
            "title": "\u5de5\u4f5c\u7a83\u53d6(Work-Stealing)"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#3",
            "text": "\u6846\u67b6\u7528\u7ea6800\u884c\u7684\u7eafJava\u4ee3\u7801\u5b9e\u73b0\uff0c\u4e3b\u8981\u662fFJTaskRunner\u7c7b\uff0c\u662fjava.lang.Thread.FJTasks\u5b50\u7c7b\uff0c\u7ef4\u62a4\u5e03\u5c14\u7c7b\u578b\u7684\u5b8c\u6210\u72b6\u6001\u53d8\u91cf\u4ee5\u53ca\u5c06\u5176\u4ed6\u6240\u6709\u7684\u64cd\u4f5c\u4ea4\u4e88\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u5b8c\u6210\u3002FJTaskRunnerGroup\u7c7b\u7528\u6765\u6784\u9020\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u7ef4\u62a4\u4e00\u4e9b\u5171\u4eab\u72b6\u6001\uff08\u5982\u6240\u6709\u5de5\u4f5c\u7ebf\u7a0b\u7684\u8ba4\u8bc1\u3001\u7a83\u53d6\u64cd\u4f5c\uff09\u5e76\u534f\u540c\u5f00\u59cb\u548c\u505c\u6b62\u5de5\u4f5c\u3002\u66f4\u591a\u5b9e\u73b0\u7ec6\u8282\u6587\u6863\u53ef\u4ee5\u901a\u8fc7util.concurrent\u5305\u8fdb\u884c\u83b7\u53d6\uff0c\u672c\u7ae0\u8282\u4e3b\u8981\u8ba8\u8bba\u5728\u5b9e\u73b0\u6846\u67b6\u65f6\u9047\u5230\u7684\u4e24\u4e2a\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\uff1a\u652f\u6301\u9ad8\u6548\u7684\u53cc\u7aef\u961f\u5217\u64cd\u4f5c\uff08push\u3001pop\u548ctake\u64cd\u4f5c\uff09\uff0c\u4ee5\u53ca\u7ba1\u7406\u7ebf\u7a0b\u83b7\u53d6\u65b0\u5de5\u4f5c\u7684\u7a83\u53d6\u534f\u8bae\u3002",
            "title": "3. \u5b9e\u73b0"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#31-deques",
            "text": "\u4e3a\u4e86\u80fd\u591f\u9ad8\u6548\u4e14\u53ef\u4f38\u7f29\u7684\u6267\u884c\uff0c\u4efb\u52a1\u7ba1\u7406\u5fc5\u987b\u5c3d\u53ef\u80fd\u5feb\u5730\u5b8c\u6210\uff0ccreating\uff0cpushing\u4ee5\u53ca\u4e4b\u540e\u7684poping(\u6216\u8005\u4f4e\u9891\u5ea6\u7684taking)\u4efb\u52a1\u7c7b\u6bd4\u4e8e\u7a0b\u5e8f\u5728\u987a\u5e8f\u6267\u884c\u6240\u4ea7\u751f\u7684\u5f00\u9500\u3002\u8f83\u4f4e\u7684\u5f00\u9500\u4f7f\u7a0b\u5e8f\u5458\u80fd\u591f\u91c7\u7528\u66f4\u5c0f\u7684\u4efb\u52a1\u7c92\u5ea6\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5229\u7528\u5e76\u884c\u6027\u3002\u52a1\u662f\u4f9d\u9760JVM\u8fdb\u884c\u5206\u914d\uff0cJava\u7684\u5783\u573e\u56de\u6536\u4f7f\u5f97\u6211\u4eec\u4e0d\u5fc5\u6784\u9020\u4e00\u5757\u7279\u6b8a\u7528\u9014\u7684\u5185\u5b58\u5206\u914d\u5668\u6765\u7ef4\u62a4\u4efb\u52a1\u3002\u4e0e\u5176\u4ed6\u8bed\u8a00\u5b9e\u73b0\u7684\u7c7b\u4f3c\u6846\u67b6\u76f8\u6bd4\uff0c\u8fd9\u5927\u5927\u51cf\u5c11\u4e86\u5b9e\u73b0FJTasks\u7684\u590d\u6742\u5ea6\u548c\u4ee3\u7801\u91cf\u3002  \u53cc\u7aef\u961f\u5217\u7684\u4e3b\u8981\u6311\u6218\u662f\u540c\u6b65\u548c\u7ade\u4e89\u3002\u5373\u4f7f\u5728\u4f7f\u7528\u4f18\u5316\u7684\u540c\u6b65\u5de5\u5177\u7684jvm\u4e0a\uff0c\u5bf9\u6bcf\u4e2apush\u548cpop\u64cd\u4f5c\u83b7\u53d6\u9501\u7684\u9700\u6c42\u4e5f\u6210\u4e3a\u4e86\u74f6\u9888\u3002\u7136\u800c\uff0cCilk\u91c7\u53d6\u4e86\u9002\u914d\u7b56\u7565\u4ee5\u63d0\u4f9b\u57fa\u4e8e\u5982\u4e0b\u7684\u89e3\u51b3\u65b9\u6cd5\uff1a   push\u548cpop\u64cd\u4f5c\u53ea\u80fd\u7531\u7ebf\u7a0b\u672c\u8eab\u8c03\u7528\u3002  \u540c\u5bf9take\u64cd\u4f5c\u64cd\u4f5c\u4e00\u4e2a\u53ef\u91cd\u5165\u9501\u5bb9\u6613\u4f7f\u5f97take\u64cd\u4f5c\u4e0e\u7a83\u53d6\u7ebf\u7a0b\u51b2\u7a81\uff08\u53cc\u7aef\u961f\u5217\u9501\u5728\u5fc5\u8981\u7684\u65f6\u5019\u53ef\u4ee5\u7981\u7528take\u64cd\u4f5c\uff09\u3002\u56e0\u6b64\uff0c\u63a5\u53e3\u63a7\u5236\u51cf\u5c11\u4e86\u91cf\u90e8\u5206\u7684\u540c\u6b65\u95ee\u9898\u3002  pop\u548ctake\u53ea\u6709\u5728\u53cc\u7aef\u5bf9\u522b\u4e3a\u7a7a\u65f6\u624d\u4f1a\u4ea7\u751f\u5e72\u6270\uff0c\u5426\u5219\u5c31\u80fd\u591f\u4fdd\u8bc1\u8fd0\u884c\u5728\u5143\u7d20\u4e0d\u76f8\u4ea4\u7684\u6570\u7ec4\u4e2d\u3002   \u5c06top\u548cbase\u6307\u9488\u5b9a\u4e49\u4e3avolaile\u4ee5\u4fdd\u8bc1pop\u548ctake\u64cd\u4f5c\u5728\u53cc\u7aef\u961f\u5217\u6709\u591a\u4e2a\u4e2a\u5143\u7d20\u65f6\u65e0\u9700\u9501\u5b9a\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u4e8eDekker\u7684\u7b97\u6cd5\u4e3atop\u6dfb\u52a0\u4e00\u4e2a\u524d\u51cf\u91cf\uff1a  if \uff08--top >= base\uff09 ...  \u4ee5\u53ca\u4e3abase\u6dfb\u52a0\u4e00\u4e2a\u524d\u589e\u91cf:  if (++base < top) ...  \u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u5fc5\u987b\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a\u7d22\u5f15\u68c0\u6d4b\u662f\u5426\u4f1a\u5bfc\u81f4\u53cc\u7aef\u961f\u5217\u53d8\u4e3a\u7a7a\u3002\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4f4d\u6f5c\u5728\u51b2\u7a81\u7684\u975e\u5bf9\u79f0\u89c4\u5219\uff1apop\u64cd\u4f5c\u5c06\u4f1a\u5728\u83b7\u53d6\u5230\u53cc\u7aef\u961f\u5217\u9501\u4e4b\u540e\u7ee7\u7eed\u91cd\u65b0\u68c0\u6d4b\u72b6\u6001\u5e76\u5c1d\u8bd5\u7ee7\u7eed\uff08take\u64cd\u4f5c\u7c7b\u4f3c\uff09\uff0c\u5728\u53cc\u7aef\u961f\u5217\u4e3a\u7a7a\u65f6\u8fd4\u56de\u3002take\u64cd\u4f5c\u5c06\u4f1a\u7acb\u5373\u56de\u9000\uff0c\u5178\u578b\u7684\uff0c\u5c1d\u8bd5\u4ece\u5176\u4ed6\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u7a83\u53d6\u3002\u8fd9\u79cd\u975e\u5bf9\u79f0\u8868\u793a\u662fJ\u4e0eCilk\u8bed\u8a00THE\u534f\u8bae\u5b9e\u73b0\u7684\u91cd\u8981\u4e0d\u540c\u4e4b\u5904\u3002  \u4f7f\u7528volatile\u7d22\u5f15\u8ba9push\u64cd\u4f5c\u4ec5\u5728\u961f\u5217\u6ea2\u51fa\u65f6\u9700\u8981\u540c\u6b65\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9996\u8981\u7684\u5c31\u662f\u83b7\u53d6\u53cc\u7aef\u961f\u5217\u9501\u5e76\u91cd\u65b0\u8bbe\u7f6e\u6570\u7ec4\u5927\u5c0f\u3002\u6b64\u5916\uff0c\u7b80\u5355\u5730\u4fdd\u8bc1\u4e86top\u5728\u53cc\u7aef\u961f\u5217\u6570\u7ec4\u88ab\u586b\u5145\u540e\u88ab\u4fee\u6539\u964d\u4f4etake\u64cd\u4f5c\u7684\u5e72\u6270\u3002  \u968f\u540e\u7684\u521d\u6b65\u5b9e\u73b0\uff0c\u5bf9\u4e2aJVM\u548cJMM(Java\u5185\u5b58\u6a21\u578b)\u89c4\u5219\u5bf9volatile\u5b57\u6bb5\u8981\u6c42\u7684\u5148\u5199\u518d\u8bfb\u5177\u6709\u4e0d\u4e00\u81f4\u6027\u3002\u4f5c\u4e3a\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0cpop\u91cd\u65b0\u83b7\u53d6\u9501\u7684\u64cd\u4f5c\u88ab\u8c03\u6574\u4e3a\u5982\u679c\u6709\u4e24\u4e2a\u6216\u66f4\u5c11\u7684\u5143\u7d20\u65f6\u89e6\u53d1\uff0c\u5e76\u4e3atake\u64cd\u4f5c\u6dfb\u52a0\u53e6\u4e00\u628a\u9501\u4ee5\u4fdd\u8bc1\u5185\u5b58\u5c4f\u969c\u3002\u53ea\u8981\u5927\u591a\u6570\u7d22\u5f15\u66f4\u6539\u88ab\u6240\u6709\u8005\u7ebf\u7a0b\u5ffd\u7565\uff0c\u8fd9\u5c31\u8db3\u591f\u4e86(\u5728\u9605\u8bfbvolatile\u5b57\u6bb5\u65f6\uff0c\u54ea\u4e9b\u5e73\u53f0\u53ef\u4ee5\u4fdd\u6301\u9002\u5f53\u7684\u5185\u5b58\u987a\u5e8f)\uff0c\u5728\u6027\u80fd\u4e0a\u4ec5\u6709\u4e00\u70b9\u70b9\u7684\u4e0b\u964d\u3002",
            "title": "3.1 \u53cc\u7aef\u961f\u5217(Deques)"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-18/fork-join\u6846\u67b6\u7ffb\u8bd1/#32",
            "text": "work-stealing\u6846\u67b6\u4e2d\u7684\u5de5\u4f5c\u7ebf\u7a0b\u5bf9\u5176\u8fd0\u884c\u7a0b\u5e8f\u7684\u540c\u6b65\u8981\u6c42\u4e00\u65e0\u6240\u77e5\u3002\u5b83\u4eec\u7b80\u5355\u7684generate, push, pop, take\uff0c\u7ba1\u7406\u72b6\u6001\u548c\u6267\u884c\u4efb\u52a1\u3002\u8fd9\u4e2a\u6a21\u5f0f\u7684\u7b80\u5355\u6027\u4f7f\u5f97\u5f53\u6240\u6709\u7ebf\u7a0b\u5373\u4f7f\u6709\u5927\u91cf\u7684\u5de5\u4f5c\u65f6\u4e5f\u80fd\u9ad8\u6548\u5730\u6267\u884c\u3002\u7136\u800c\uff0c\u5f53\u6ca1\u6709\u8db3\u591f\u5de5\u4f5c\u65f6\uff0c\u8fd9\u79cd\u6d41\u6c34\u7ebf\u5c31\u4f1a\u4ea7\u751f\u4ee5\u542f\u53d1\u5f0f\u4e3a\u4ee3\u4ef7\u3002\u5728\u542f\u52a8\u4e00\u4e2a\u4e3b\u4efb\u52a1\u671f\u95f4\uff0c\u5728\u5176\u5b8c\u6210\u4e4b\u540e\uff0c\u4ee5\u53ca\u5728\u4e00\u4e9bfork/join\u7b97\u6cd5\u4e2d\u4f7f\u7528\u7684\u5168\u5c40\u5b8c\u5168\u505c\u6b62\u540c\u6b65\u70b9\u3002  \u8fd9\u513f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u5c31\u662f\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u65e0\u672c\u5730\u4efb\u52a1\u4e14\u4e0d\u80fd\u4ece\u5176\u4ed6\u7ebf\u7a0b\u5904\u7a83\u53d6\u4e00\u4e2a\u4efb\u52a1\u65f6\u4f1a\u505a\u4ec0\u4e48\u5904\u7406.\u5982\u679c\u6210\u884c\u8fd0\u884c\u5728\u4e13\u7528\u5904\u7406\u5668\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u5fd9\u5219\u7b49\u5f85\u7684\u65b9\u5f0f\u5faa\u73af\u5c1d\u8bd5\u7a83\u53d6\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u610f\u56fe\u7a83\u53d6\u4f1a\u589e\u52a0\u7ade\u4e89\uff0c\u8fd9\u4f1a\u4f7f\u5f97\u8fd9\u4e9b\u7ebf\u7a0b\u964d\u4f4e\u901f\u5ea6\u751a\u81f3\u95f2\u7f6e\uff08\u56e0\u4e3a\u7ae0\u82823.1\u4e2d\u7684\u9501\u534f\u8bae\uff09\u3002\u6b64\u5916\uff0c\u5728\u8fd9\u4e2a\u6846\u67b6\u66f4\u5178\u578b\u7684\u5e94\u7528\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c1d\u8bd5\u8fd0\u884c\u5176\u4ed6\u4e0d\u76f8\u5e72\u7684\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u3002  \u7528Java\u5b9e\u73b0\u8fd9\u4e2a\u6846\u67b6\u5de5\u5177\u5f88\u5f31\u4e14\u6ca1\u6709\u4fdd\u969c\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u662f\u53ef\u63a5\u53d7\u7684\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5982\u679c\u4e0d\u80fd\u4ece\u4efb\u4f55\u5176\u4ed6\u7ebf\u7a0b\u83b7\u5f97\u5de5\u4f5c\uff0c\u5219\u5728\u5c1d\u8bd5\u53e6\u5916\u7684\u7a83\u53d6\u4e4b\u524d\u4f1a\u964d\u4f4e\u5b83\u7684\u4f18\u5148\u7ea7\uff0c\u8c03\u7528Thread.yield\u65b9\u6cd5\uff0c\u5e76\u5728TJTaskRunnerGroup\u4e2d\u5c06\u5176\u6ce8\u518c\u4e3a\u975e\u6d3b\u8dc3\u72b6\u6001\u3002\u5982\u679c\u6240\u6709\u7684\u5de5\u4f5c\u7ebf\u7a0b\u90fd\u53d8\u6210\u975e\u6d3b\u72b6\u6001\u65f6\u8dc3\uff0c\u5b83\u4eec\u5c06\u4f1a\u963b\u585e\u5e76\u7b49\u5f85\u4e3b\u4efb\u52a1\u7684\u540c\u6b65\u3002\u6b64\u5916\uff0c\u5728\u7ed9\u5b9a\u7684\u81ea\u8f6c\u6b21\u6570\u540e\u540e\uff0c\u518d\u6b21\u7a83\u53d6\u4efb\u52a1\u524d\u7ebf\u7a0b\u5c06\u8fdb\u5165\u7761\u7720\u9636\u6bb5(\u7ea6100ms)\u800c\u4e0d\u662f\u8c03\u7528yield\u65b9\u6cd5\uff0c\u5728\u7a0b\u5e8f\u4e2d\u4eba\u4e3a\u5f3a\u52a0\u7684\u4f11\u7720\u5c06\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u5207\u5206\u4efb\u52a1\u3002\u4f46\u8fd9\u4f3c\u4e4e\u662f\u89e3\u51b3\u901a\u7528\u95ee\u9898\u7684\u6700\u4f73\u529e\u6cd5\u3002\u6846\u67b6\u4ee5\u540e\u7684\u7248\u672c\u53ef\u80fd\u652f\u6301\u989d\u5916\u7684\u63a7\u5236\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u7f16\u7a0b\u4eba\u5458\u5728\u9047\u5230\u5f71\u54cd\u6027\u80fd\u65f6\u80fd\u91cd\u8f7d\u9ed8\u8ba4\u65b9\u6cd5\u3002",
            "title": "3.2 \u7a83\u53d6\u548c\u7a7a\u95f2"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-21/fork-join\u793a\u4f8b\u7bc7/",
            "text": "fork/join\u793a\u4f8b\u7bc7\n\n\n\u65f6\u95f4: 2018\u5e743\u670821\u65e5\n\n\n\u6839\u636efork/join\u601d\u60f3\u6784\u9020\u4e00\u4e2a\u5e76\u884c\u9012\u5f52\u6279\u6539\u8bd5\u5377\u7684\u793a\u4f8b\uff08\u793a\u4f8b\u7a0b\u5e8f\u4e2d\u75281s\u4ee3\u66ff1\u5c0f\u65f6\u4f11\u7720\uff08\u62fc\u547d\u6279\u6539\uff09\u8fdb\u884c\u8ba1\u7b97\uff09\uff1a\n\n\npackage forkjoin;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ForkJoinPool;\nimport java.util.concurrent.ForkJoinTask;\nimport java.util.concurrent.RecursiveTask;\n\nimport static java.util.stream.Collectors.toList;\n\n/**\n * fork-join\u7684\u7b80\u5355\u6613\u7528\n * \n * 2018/3/20\n *\n * @author boyka\n */\n\n/**\n * \u4efb\u52a1\u7c7b:\u6279\u6539\u7684\u4e00\u5957\u8bd5\u5377\u6216\u8bd5\u5377\u7684\u4e00\u90e8\u5206\n */\n\nclass Task {\n    private String name;  //\u4efb\u52a1\u540d\n    private String level; //\u56f0\u96be\u7b49\u7ea7\n    private Long useTime; //\u9884\u8ba1\u82b1\u8d39\u65f6\u95f4\n    private List<Task> subTaskList; //\u5b50\u4efb\u52a1\u5217\u8868\n\n    public Task(String name, String level, Long useTime, List<Task> subTaskList) {\n        this.name = name;\n        this.level = level;\n        this.useTime = useTime;\n        this.subTaskList = subTaskList;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getLevel() {\n        return level;\n    }\n\n    public void setLevel(String level) {\n        this.level = level;\n    }\n\n    public Long getUseTime() {\n        return useTime;\n    }\n\n    public void setUseTime(Long useTime) {\n        this.useTime = useTime;\n    }\n\n    public List<Task> getSubTaskList() {\n        return subTaskList;\n    }\n\n    public void setSubTaskList(List<Task> subTaskList) {\n        this.subTaskList = subTaskList;\n    }\n}\n\n/**\n * \u4efb\u52a1\u64cd\u4f5c\u7c7b:\u8fdb\u884c\u8bd5\u5377\u6279\u6539\u64cd\u4f5c\n */\npublic class ForkJoinTest extends RecursiveTask<Long> {\n    private final static String EASY = \"easy\";\n    private final static String DIFFICULT = \"difficult\";\n    private Task task;\n\n    private ForkJoinTest(Task task) {\n        this.task = task;\n    }\n\n    @Override\n    protected Long compute() {\n        Long useTimes = 0L;\n        //\u5bb9\u6613\uff0c\u4e00\u4e2a\u540c\u5b66\u80fd\u591f\u6539\u5f97\u5b8c\u4e86\n        if (EASY.equals(task.getLevel())) {\n            useTimes = task.getUseTime();\n            try {\n                Thread.sleep(task.getUseTime() * 1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        } else {\n            //\u4efb\u52a1\u91cf\u5927\uff0c\u5c06\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6309\u4efb\u52a1\u91cf\u7ec6\u5206\u540e\u8ba9\u591a\u4e2a\u7ae5\u978b\u53bb(\u5de5\u4f5c\u7ebf\u7a0b)\u5b8c\u6210\n            if (null != task && null != task.getSubTaskList()) {\n                useTimes = task.getSubTaskList()\n                        .stream()\n                        .map(t -> new ForkJoinTest(t).fork())\n                        .collect(toList())\n                        .stream()\n                        .mapToLong(t -> t.join())\n                        .sum();\n            }\n        }\n        return useTimes;\n    }\n\n    // \u6d4b\u8bd5\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long startTime = System.currentTimeMillis();\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        ForkJoinTest mainForkJoin = new ForkJoinTest(ForkJoinTest.initTasks());\n        ForkJoinTask<Long> result = forkJoinPool.submit(mainForkJoin);\n        System.out.println(\"BOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a\" + result.get() + \" H\");\n        System.out.println(\"\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a \" + (System.currentTimeMillis() - startTime) / 1000 + \" H\");\n    }\n\n    //\u6784\u9020\u7b80\u6613\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6811\n    private static Task initTasks() {\n        //\u5fae\u673a\n        Task wjTask1 = new Task(\"\u5fae\u673a\u9009\u62e9+\u586b\u7a7a\u9898\", EASY, 4L, new ArrayList<>());\n        Task wjTask2 = new Task(\"\u5fae\u673a\u5927\u9898\", EASY, 3L, null);\n        Task wjTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask1, wjTask2));\n        //\u7f51\u7edc\n        Task wlTask = new Task(\"\u7f51\u7edc\", EASY, 6L, null);\n\n        //\u7b97\u6cd5\n        Task sfTask1 = new Task(\"\u7b97\u6cd5\u524d3\u9053\", EASY, 4L, null);\n        Task sfTask2 = new Task(\"\u7b97\u6cd5\u540e2\u9053\", EASY, 4L, null);\n        Task sfTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(sfTask1, sfTask2));\n\n        return new Task(\"\u6240\u6709\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask, wlTask, sfTask));\n    }\n}\n\n\n\n\n\u6d4b\u8bd5\u7ed3\u679c\uff1a\n\n\nBOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a21 H\n\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a 6 H\n\n\n\n\n\u9614\u4ee5\u770b\u51fa\uff0c\u6548\u679c\u5f88\u660e\u663e\uff0c\u7ae5\u978b\u4eec\u5e2eBOSS\u5927\u5fd9\u5566\uff0cBOSS\u8bf7\u5ba2\u5403\u996d\uff0c\u7686\u5927\u6b22\u559c\u3002\n\n\n\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4f53\u73b0\u51fafork/join\u6846\u67b6\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u5927\u4efb\u52a1\u62c6\u5206\u6210\u591a\u4e2a\u5c0f\u4efb\u52a1\u5e76\u884c\u6267\u884c\uff0c\u770b\u4e0a\u9762\u7684\u4efb\u52a1\u5206\u914d\uff1a\u6709\u4e00\u4e2a\u7ae5\u978b3\u4e2a\u5c0f\u65f6\uff08\u5fae\u673a\u5927\u9898\uff09\u5c31\u5b8c\u6210\u5c31\u80fd\u591f\u4fee\u6539\u5206\u914d\u7ed9\u81ea\u5df1\u8981\u4fee\u6539\u7684\u8bd5\u5377\u5566\uff0c\u7136\u800c\u5982\u679c\u4ed6\u80fd\u5e2e\u52a9\u90a3\u4e2a\u9700\u8981\u82b1\u8d396\u4e2a\u5c0f\u65f6(\u8ba1\u7b97\u673a\u7f51\u7edc)\u7684\u7ae5\u978b\u4fee\u6539\u4e00\u90e8\u5206\u8fd8\u6ca1\u6709\u6539\u5b8c\u7684\u8bd5\u5377\uff0c\u90a3\u662f\u4e0d\u662f\u5927\u5bb6\u90fd\u53ef\u4ee5\u63d0\u524d\u6539\u5b8c\uff0c\u63d0\u524d\u53bb\u5403\u5927\u9910\u5566\uff0c\u547c\u547c\uff0c\u8fd9\u5c31\u53ef\u4ee5\u770b\u6210fork/join\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027-\u5de5\u4f5c\u7a83\u53d6\uff08work-stealing\uff09\u3002\n\n\nok, \u770b\u4e86\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6548\u679c\u771f\u662f\u68d2\uff0c\u4f46\u4f60\u662f\u5426\u8fd8\u6709\u4ee5\u4e0b\u7591\u95ee\uff1a\n\n\n\n\nForkJoinPool\u3001ForkJoinTask\u3001RecursiveTask\uff08\u8fd8\u6709\u4e00\u4e2aForkJoinWorkerThread\u5de5\u4f5c\u7ebf\u7a0b\u6ca1\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u51fa\u6765\uff09\u7684\u5173\u7cfb\uff1f\n\n\nForkJoinTest\u4e3a\u4ec0\u4e48\u8981\u7ee7\u627fRecursiveTask\uff1f\n\n\nfork() \u548cjoin() \u9636\u6bb5\u5e72\u4e86\u4e9b\u4ec0\u4e48\u4e8b\u60c5\uff1f\n\n\n\u5de5\u4f5c\u7a83\u53d6\u8fc7\u7a0b\u5982\u4f55\u5b8c\u6210\u7684\uff1f\n\n\n\n\n\u6709\u7591\u95ee\uff0c\u7ee7\u7eed\u770b\u770b\u9119\u4eba\u964b\u4f5cfork/join\u539f\u7406\u6d45\u6790\u7bc7\u671b\u80fd\u591f\u89e3\u60d1\nfork/join\u6e90\u4ee3\u7801\u6d45\u6790\u7bc7",
            "title": "fork-join\u793a\u4f8b\u7bc7"
        },
        {
            "location": "/it/java/java7/asynchronous_programming/18-03-21/fork-join\u793a\u4f8b\u7bc7/#forkjoin",
            "text": "\u65f6\u95f4: 2018\u5e743\u670821\u65e5  \u6839\u636efork/join\u601d\u60f3\u6784\u9020\u4e00\u4e2a\u5e76\u884c\u9012\u5f52\u6279\u6539\u8bd5\u5377\u7684\u793a\u4f8b\uff08\u793a\u4f8b\u7a0b\u5e8f\u4e2d\u75281s\u4ee3\u66ff1\u5c0f\u65f6\u4f11\u7720\uff08\u62fc\u547d\u6279\u6539\uff09\u8fdb\u884c\u8ba1\u7b97\uff09\uff1a  package forkjoin;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ForkJoinPool;\nimport java.util.concurrent.ForkJoinTask;\nimport java.util.concurrent.RecursiveTask;\n\nimport static java.util.stream.Collectors.toList;\n\n/**\n * fork-join\u7684\u7b80\u5355\u6613\u7528\n * \n * 2018/3/20\n *\n * @author boyka\n */\n\n/**\n * \u4efb\u52a1\u7c7b:\u6279\u6539\u7684\u4e00\u5957\u8bd5\u5377\u6216\u8bd5\u5377\u7684\u4e00\u90e8\u5206\n */\n\nclass Task {\n    private String name;  //\u4efb\u52a1\u540d\n    private String level; //\u56f0\u96be\u7b49\u7ea7\n    private Long useTime; //\u9884\u8ba1\u82b1\u8d39\u65f6\u95f4\n    private List<Task> subTaskList; //\u5b50\u4efb\u52a1\u5217\u8868\n\n    public Task(String name, String level, Long useTime, List<Task> subTaskList) {\n        this.name = name;\n        this.level = level;\n        this.useTime = useTime;\n        this.subTaskList = subTaskList;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getLevel() {\n        return level;\n    }\n\n    public void setLevel(String level) {\n        this.level = level;\n    }\n\n    public Long getUseTime() {\n        return useTime;\n    }\n\n    public void setUseTime(Long useTime) {\n        this.useTime = useTime;\n    }\n\n    public List<Task> getSubTaskList() {\n        return subTaskList;\n    }\n\n    public void setSubTaskList(List<Task> subTaskList) {\n        this.subTaskList = subTaskList;\n    }\n}\n\n/**\n * \u4efb\u52a1\u64cd\u4f5c\u7c7b:\u8fdb\u884c\u8bd5\u5377\u6279\u6539\u64cd\u4f5c\n */\npublic class ForkJoinTest extends RecursiveTask<Long> {\n    private final static String EASY = \"easy\";\n    private final static String DIFFICULT = \"difficult\";\n    private Task task;\n\n    private ForkJoinTest(Task task) {\n        this.task = task;\n    }\n\n    @Override\n    protected Long compute() {\n        Long useTimes = 0L;\n        //\u5bb9\u6613\uff0c\u4e00\u4e2a\u540c\u5b66\u80fd\u591f\u6539\u5f97\u5b8c\u4e86\n        if (EASY.equals(task.getLevel())) {\n            useTimes = task.getUseTime();\n            try {\n                Thread.sleep(task.getUseTime() * 1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        } else {\n            //\u4efb\u52a1\u91cf\u5927\uff0c\u5c06\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6309\u4efb\u52a1\u91cf\u7ec6\u5206\u540e\u8ba9\u591a\u4e2a\u7ae5\u978b\u53bb(\u5de5\u4f5c\u7ebf\u7a0b)\u5b8c\u6210\n            if (null != task && null != task.getSubTaskList()) {\n                useTimes = task.getSubTaskList()\n                        .stream()\n                        .map(t -> new ForkJoinTest(t).fork())\n                        .collect(toList())\n                        .stream()\n                        .mapToLong(t -> t.join())\n                        .sum();\n            }\n        }\n        return useTimes;\n    }\n\n    // \u6d4b\u8bd5\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long startTime = System.currentTimeMillis();\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        ForkJoinTest mainForkJoin = new ForkJoinTest(ForkJoinTest.initTasks());\n        ForkJoinTask<Long> result = forkJoinPool.submit(mainForkJoin);\n        System.out.println(\"BOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a\" + result.get() + \" H\");\n        System.out.println(\"\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a \" + (System.currentTimeMillis() - startTime) / 1000 + \" H\");\n    }\n\n    //\u6784\u9020\u7b80\u6613\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6811\n    private static Task initTasks() {\n        //\u5fae\u673a\n        Task wjTask1 = new Task(\"\u5fae\u673a\u9009\u62e9+\u586b\u7a7a\u9898\", EASY, 4L, new ArrayList<>());\n        Task wjTask2 = new Task(\"\u5fae\u673a\u5927\u9898\", EASY, 3L, null);\n        Task wjTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask1, wjTask2));\n        //\u7f51\u7edc\n        Task wlTask = new Task(\"\u7f51\u7edc\", EASY, 6L, null);\n\n        //\u7b97\u6cd5\n        Task sfTask1 = new Task(\"\u7b97\u6cd5\u524d3\u9053\", EASY, 4L, null);\n        Task sfTask2 = new Task(\"\u7b97\u6cd5\u540e2\u9053\", EASY, 4L, null);\n        Task sfTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(sfTask1, sfTask2));\n\n        return new Task(\"\u6240\u6709\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask, wlTask, sfTask));\n    }\n}  \u6d4b\u8bd5\u7ed3\u679c\uff1a  BOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a21 H\n\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a 6 H  \u9614\u4ee5\u770b\u51fa\uff0c\u6548\u679c\u5f88\u660e\u663e\uff0c\u7ae5\u978b\u4eec\u5e2eBOSS\u5927\u5fd9\u5566\uff0cBOSS\u8bf7\u5ba2\u5403\u996d\uff0c\u7686\u5927\u6b22\u559c\u3002  \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4f53\u73b0\u51fafork/join\u6846\u67b6\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u5927\u4efb\u52a1\u62c6\u5206\u6210\u591a\u4e2a\u5c0f\u4efb\u52a1\u5e76\u884c\u6267\u884c\uff0c\u770b\u4e0a\u9762\u7684\u4efb\u52a1\u5206\u914d\uff1a\u6709\u4e00\u4e2a\u7ae5\u978b3\u4e2a\u5c0f\u65f6\uff08\u5fae\u673a\u5927\u9898\uff09\u5c31\u5b8c\u6210\u5c31\u80fd\u591f\u4fee\u6539\u5206\u914d\u7ed9\u81ea\u5df1\u8981\u4fee\u6539\u7684\u8bd5\u5377\u5566\uff0c\u7136\u800c\u5982\u679c\u4ed6\u80fd\u5e2e\u52a9\u90a3\u4e2a\u9700\u8981\u82b1\u8d396\u4e2a\u5c0f\u65f6(\u8ba1\u7b97\u673a\u7f51\u7edc)\u7684\u7ae5\u978b\u4fee\u6539\u4e00\u90e8\u5206\u8fd8\u6ca1\u6709\u6539\u5b8c\u7684\u8bd5\u5377\uff0c\u90a3\u662f\u4e0d\u662f\u5927\u5bb6\u90fd\u53ef\u4ee5\u63d0\u524d\u6539\u5b8c\uff0c\u63d0\u524d\u53bb\u5403\u5927\u9910\u5566\uff0c\u547c\u547c\uff0c\u8fd9\u5c31\u53ef\u4ee5\u770b\u6210fork/join\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027-\u5de5\u4f5c\u7a83\u53d6\uff08work-stealing\uff09\u3002  ok, \u770b\u4e86\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6548\u679c\u771f\u662f\u68d2\uff0c\u4f46\u4f60\u662f\u5426\u8fd8\u6709\u4ee5\u4e0b\u7591\u95ee\uff1a   ForkJoinPool\u3001ForkJoinTask\u3001RecursiveTask\uff08\u8fd8\u6709\u4e00\u4e2aForkJoinWorkerThread\u5de5\u4f5c\u7ebf\u7a0b\u6ca1\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\u51fa\u6765\uff09\u7684\u5173\u7cfb\uff1f  ForkJoinTest\u4e3a\u4ec0\u4e48\u8981\u7ee7\u627fRecursiveTask\uff1f  fork() \u548cjoin() \u9636\u6bb5\u5e72\u4e86\u4e9b\u4ec0\u4e48\u4e8b\u60c5\uff1f  \u5de5\u4f5c\u7a83\u53d6\u8fc7\u7a0b\u5982\u4f55\u5b8c\u6210\u7684\uff1f   \u6709\u7591\u95ee\uff0c\u7ee7\u7eed\u770b\u770b\u9119\u4eba\u964b\u4f5cfork/join\u539f\u7406\u6d45\u6790\u7bc7\u671b\u80fd\u591f\u89e3\u60d1 fork/join\u6e90\u4ee3\u7801\u6d45\u6790\u7bc7",
            "title": "fork/join\u793a\u4f8b\u7bc7"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/",
            "text": "lambda\u521d\u8bc6\n\n\n\u65f6\u95f4: 2018\u5e7402\u670827\u65e5\n\n\n\n\njava\u7e41\u7410\u7684\u8bed\u6cd5\u4e5f\u88ab\u6452\u57a2\u5df2\u4e45\uff0c\u5728java8\u4e2d\u5f15\u5165\u7684lambda\u8fd9\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\u3002\u8fd9\u6807\u5fd7\u7740Java\u5f80\u51fd\u6570\u5f0f\u7f16\u7a0b\u8fc8\u8fdb\u4e86\u4e00\u5c0f\u6b65\uff0cjava\u7a0b\u5e8f\u733f\u4e5f\u53ef\u4ee5\u5199\u51fa\u7b80\u5355\u4f18\u96c5\u7684\u4ee3\u7801\u4e86\u3002\n\n\n\n\n1. \u51fd\u6570\u4e00\u7b49\u516c\u6c11\u7b49\u7ea7\u7531\u6765\n\n\n\n\n\u6216\u8bb8\u53ef\u4ee5\u8bf4\u8fd9\u4e48\u8bf4\uff0c\u5982\u679c\u6ca1\u6709\u5c06\u51fd\u6570\u8fdb\u884c\u4e00\u7b49\u516c\u6c11\uff0cjava8\u4e2dstream\u3001lambda\u8fd9\u4e9b\u65b0\u7684\u7279\u6027\u6839\u672c\u65e0\u4ece\u8c08\u8d77\uff0c\u51fd\u6570\u4e00\u7b49\u529f\u6c11\u5316\u5e76\u975e\u7531java8\u72ec\u5bb6\u9996\u521b\uff0c\u65e9\u5728python\u3001javascript\u3001scala\u7b49\u8bed\u8a00\u4e2d\u8fd0\u7528\u5f97\u8f7b\u8f66\u719f\u8def\u3002\u5728\u4f20\u7edf\u7684\u4e00\u4e9b\u8bed\u8a00\uff0c\u6bd4\u5982c/c++/c#\u4ee5\u53cajava8\u4e4b\u524d\u7684\u8bed\u8a00\u4e2d\uff0c\u6574\u4e2a\u7f16\u7a0b\u8bed\u8a00\u7684\u6838\u5fc3\u5c31\u5728\u4e8e\u64cd\u4f5c\u503c\uff0cso\uff0c\u503c\u88ab\u5f53\u4f5c\u4e00\u7b49\u516c\u6c11\uff0c\u62e5\u6709\u80fd\u591f\u8fdb\u884c\u8d4b\u503c\u3001\u4f20\u53c2\u3001\u8fd4\u56de\u7b49\u64cd\u4f5c\uff0c\u4e0e\u6b64\u76f8\u5bf9\uff0c\u65b9\u6cd5\u548c\u7c7b\u7b49\u6982\u5ff5\u5c31\u88ab\u51a0\u4ee5\u4e8c\u7b49\u529f\u540d\u7684\u5934\u8854\uff0c\u6240\u8c13\u4e8c\u7b49\uff0c\u5fc5\u7136\u5c31\u4e3b\u8d77\u8f85\u52a9\u4f5c\u7528\u3002\n\n\n\n\n2. \u533f\u540d\u5185\u90e8\u7c7b\u548clambda\n\n\n\n\n\u51fd\u6570\u4f5c\u4e3a\u5b9e\u53c2\u8fdb\u884c\u4f20\u9012\u5728c/c++\u4e2d\u975e\u5e38\u5e38\u89c1(\u8868\u73b0\u4e3a\u6307\u9488\u5f62\u5f0f)\uff0c\u5728java\u4e2d\u5219\u9700\u8981\u5229\u7528\u533f\u540d\u5185\u90e8\u7c7b\uff0c\u5148\u770b\u4e00\u7ec4\u7b80\u5355\u7684\u7ebf\u7a0b\u5b9e\u73b0\u4ee3\u7801\u5bf9\u6bd4\uff1a\n\n\n\n\n new Thread(new Runnable() {\n    @Override\n    public void run() {\n        System.out.println(\"\u533f\u540d\u5185\u90e8\u7c7b\u5f0f\u521b\u5efa\u7ebf\u7a0b!\");\n    }\n}).start();\n\nnew Thread(() -> System.out.println(\"lambda\u5f0f\u521b\u5efa\u7ebf\u7a0b !\")).start();\n\n\n\n\n\n\n\u8f93\u51fa\u7ed3\u679c:\n\n\n\n\n\u533f\u540d\u5185\u90e8\u7c7b\u5f0f\u521b\u5efa\u7ebf\u7a0b!\nlambda\u5f0f\u521b\u5efa\u7ebf\u7a0b !\n\n\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0clambda\u5f0f\u5c06\u64cd\u4f5c\u884c\u4e3a\u53c2\u6570\u5316\uff0c\u5b9e\u73b0\u73b0\u6210\u7684\u65b9\u5f0f\u8f83\u533f\u540d\u5185\u90e8\u7c7b\u7740\u5b9e\u7b80\u5355\u592a\u591a\u4e86\uff0c\u800c\u4e14\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e5f\u597d\u4e0d\u5c11\u3002\n\n\n\n\n3. lambda\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\n\n\n\n\n\n\n\u5982\u4e0a\u9762\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0cRunnable\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff0c\u4ec5\u5305\u542b\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u4f46\u5fc5\u987b\u8981\u5199\u4e00\u5927\u5806\u5570\u91cc\u5570\u55e6\u7684\u4ee3\u7801\uff0c\u5728JDK\u4e2d\uff0c\u8fd8\u6709\u5f88\u591a\u6bd4\u5982Callable\u3001ActionListener\u7b49\uff0cjava8\u4e2d\u5c06\u8fd9\u6837\u7684\u63a5\u53e3\u8fdb\u884c\u7b80\u5316\uff0c\u5373\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u8868\u8fbe\u5f62\u5f0f\uff1a ()-> {}\u3002\n\n\n\n\n\n\n(), \u8868\u793a\u53c2\u6570\u5217\u8868\uff1b\n\n\n\n\n{}\uff0clambda\u4e3b\u4f53\uff0c\u5373\u8981\u5b9e\u73b0\u7684\u4ee3\u7801\u903b\u8f91\uff1b\n\n\n\n\n->, \u5c06\u53c2\u6570\u548clambda\u4e3b\u4f53\u5206\u5f00\u3002\n\n\n\n\n\n\n\u6bd4\u5982\uff1a\n\n\n\n\n\n\n//Callable\n//\u65e7api      \nCallable<String> c1 = new Callable<String>() {\n    @Override\n    public String call() throws Exception {\n        return \"done\";\n    }\n};\n//java8\n Callable<String> c2 = () -> \"done\";\n\n//comparator\u6bd4\u8f83\u5668\n//\u65e7api      \nComparator<String> c3 = new Comparator<String>() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};\n//java8 \nComparator<String> c2 = (s1, s2) -> s1.compareToIgnoreCase(s2);\n\n\n\n\n4. lambda\u5728\u96c6\u5408\u4e2d\u7684\u4e00\u4e9b\u5e94\u7528\n\n\n\n\n\u518d\u770b\u4e00\u9053\u4f8b\u5b50\uff1a\n\n\n\n\n// code:\nList<Integer> list = Arrays.asList(1, 4, 5, 6, 2, 3);\nfor(Integer i: list) {\n    System.out.print(i + \"  \");\n}\n// result:\n1\n4\n5\n6\n2\n3 \n\n\n\n\n\n\n\n\n\u4e0a\u9762\u8fd9\u9053\u4f8b\u5b50\u4f7f\u7528\u4e86\u5916\u90e8\u8fed\u4ee3\u65b9\u6cd5\u904d\u5386\u5e76\u6253\u5370\u5217\u8868\u539f\u59cb\uff0c\u5916\u90e8\u8fed\u4ee3\u5728\u53ef\u4ee5\u8bf4\u662f\u4e4b\u524d\u5bf9\u6570\u636e\u5217\u8868\u6700\u5e38\u8fdb\u884c\u7684\u64cd\u4f5c\u4e4b\u4e00\uff0c\u4f46\u5916\u90e8\u8fed\u4ee3\u6709\u5982\u4e0b\u4e0d\u8db3\u4e4b\u5904\uff1a\n\n\n\n\n\n\n\u53ea\u80fd\u987a\u5e8f\u5904\u7406\u6570\u636e\uff1b\n\n\n\n\n\u4e0d\u80fd\u5145\u5206\u5229\u7528CPU\u591a\u6838\u4f18\u52bf\uff1b\n\n\n\n\n\u4e0d\u5229\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u5de5\u4f5c\u3002\n\n\n\n\n\n\n\u5728java8\u4e2d\uff0c\u5c06\u5916\u90e8\u8fed\u4ee3\u8f6c\u6362\u4e3a\u5185\u90e8\u8fed\u4ee3,\u540c\u6837\u80fd\u591f\u8f93\u5165\u76f8\u540c\u7684\u7ed3\u679c:\n\n\n\n\n\n\n//\u53ef\u4ee5\u5199\u6210\uff1a\nlist.forEach(i -> System.out::println(i));\n//\u751a\u81f3\u53ef\u4ee5\u5199\u6210 \nlist.forEach(System.out::println);\n\n\n\n\n\n\n\u6b64\u5916\uff0cjava8\u4e2d\u5bf9\u96c6\u5408\u7684\u64cd\u4f5c\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u4e30\u5bcc\uff0c\u5728Collection\u96c6\u5408\u7c7b\u4e2d\u6dfb\u52a0\u4e86stream\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5c06Collection\u7684\u5b9e\u4f8b\u8f6c\u6362\u4e3a\u6570\u636e\u6d41(\u5173\u4e8e\u6d41\u5c06\u4f1a\u5728\u540e\u9762\u8fdb\u4e00\u6b65\u5c55\u5f00\u5b66\u4e60)\uff0c\u5c06lambda\u548cstream\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u5728\u8fdb\u884c\u6570\u636e\u7684\u6d41\u6c34\u7ebf\u5316\u5904\u7406\u65f6\u4f18\u52bf\u6781\u4e3a\u660e\u663e\u3002\n\n\n\u53c8\u6765\u4f8b\u5b50\uff1a\u83b7\u53d6\u5217\u8868\u4e2d\u524d50\u4e2a\u5927\u4e8e20\u7684\u6570\u636e\u7684\u5217\u8868\uff1a\n\n\n\n\n//\u65e7\u65b9\u6cd5\nList<Integer> resList1 = new ArrayList<>();\nint num = 0;\nfor(Integer i: list) {\n   if(num > 50) {\n       break;\n   } else if(i > 20) {\n       resList1.add(i);\n       num++;\n   }\n}\n//lambda\nList<Integer> resList2 = list.stream().filter(i -> i > 20).limit(50).collect(Collectors.toList());\n    //\u65e7\u65b9\u6cd5\nList<Integer> resList1 = new ArrayList<>();\nint num = 0;\nfor(Integer i: list) {\n   if(num > 50) {\n       break;\n   } else if(i > 20) {\n       resList1.add(i);\n       num++;\n   }\n}\n//lambda\nList<Integer> resList2 = list.stream().filter(i -> i > 20).limit(50).collect(Collectors.toList());\n\n\n\n\n\n\n\u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u6d41\u80fd\u591f\u66f4\u597d\u5730\u5229\u7528\u591a\u6838\u7684\u4f18\u52bf\uff0c\u76f4\u63a5\u5c06stream\u7528parallelStream\u66ff\u4ee3\u5373\u53ef\u3002\n\n\nstream\u4e2d\u7684\u8fd8\u6709\u5f88\u591a\u7684\u65b9\u6cd5\u6bd4\u5982map\u3001reduce\u3001distinct\u3001skep\u3001findAny\u7b49\u5f88\u591a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u8fdb\u884c\u6d41\u6c34\u7ebf\u5f0f\u62fc\u63a5\u7ec4\u5408\u4ee5\u6ee1\u8db3\u81ea\u8eab\u7684\u4e1a\u52a1\u903b\u8f91\u9700\u6c42\uff0c\u5728\u8fd9\u4e0d\u5199\u592a\u591a\u4f8b\u5b50\u4e86\uff0c\u81ea\u5df1\u52a8\u624b\u5b9e\u8df5\u5427\u3002",
            "title": "lambda\u521d\u8bc6"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/#lambda",
            "text": "\u65f6\u95f4: 2018\u5e7402\u670827\u65e5   java\u7e41\u7410\u7684\u8bed\u6cd5\u4e5f\u88ab\u6452\u57a2\u5df2\u4e45\uff0c\u5728java8\u4e2d\u5f15\u5165\u7684lambda\u8fd9\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\u3002\u8fd9\u6807\u5fd7\u7740Java\u5f80\u51fd\u6570\u5f0f\u7f16\u7a0b\u8fc8\u8fdb\u4e86\u4e00\u5c0f\u6b65\uff0cjava\u7a0b\u5e8f\u733f\u4e5f\u53ef\u4ee5\u5199\u51fa\u7b80\u5355\u4f18\u96c5\u7684\u4ee3\u7801\u4e86\u3002",
            "title": "lambda\u521d\u8bc6"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/#1",
            "text": "\u6216\u8bb8\u53ef\u4ee5\u8bf4\u8fd9\u4e48\u8bf4\uff0c\u5982\u679c\u6ca1\u6709\u5c06\u51fd\u6570\u8fdb\u884c\u4e00\u7b49\u516c\u6c11\uff0cjava8\u4e2dstream\u3001lambda\u8fd9\u4e9b\u65b0\u7684\u7279\u6027\u6839\u672c\u65e0\u4ece\u8c08\u8d77\uff0c\u51fd\u6570\u4e00\u7b49\u529f\u6c11\u5316\u5e76\u975e\u7531java8\u72ec\u5bb6\u9996\u521b\uff0c\u65e9\u5728python\u3001javascript\u3001scala\u7b49\u8bed\u8a00\u4e2d\u8fd0\u7528\u5f97\u8f7b\u8f66\u719f\u8def\u3002\u5728\u4f20\u7edf\u7684\u4e00\u4e9b\u8bed\u8a00\uff0c\u6bd4\u5982c/c++/c#\u4ee5\u53cajava8\u4e4b\u524d\u7684\u8bed\u8a00\u4e2d\uff0c\u6574\u4e2a\u7f16\u7a0b\u8bed\u8a00\u7684\u6838\u5fc3\u5c31\u5728\u4e8e\u64cd\u4f5c\u503c\uff0cso\uff0c\u503c\u88ab\u5f53\u4f5c\u4e00\u7b49\u516c\u6c11\uff0c\u62e5\u6709\u80fd\u591f\u8fdb\u884c\u8d4b\u503c\u3001\u4f20\u53c2\u3001\u8fd4\u56de\u7b49\u64cd\u4f5c\uff0c\u4e0e\u6b64\u76f8\u5bf9\uff0c\u65b9\u6cd5\u548c\u7c7b\u7b49\u6982\u5ff5\u5c31\u88ab\u51a0\u4ee5\u4e8c\u7b49\u529f\u540d\u7684\u5934\u8854\uff0c\u6240\u8c13\u4e8c\u7b49\uff0c\u5fc5\u7136\u5c31\u4e3b\u8d77\u8f85\u52a9\u4f5c\u7528\u3002",
            "title": "1. \u51fd\u6570\u4e00\u7b49\u516c\u6c11\u7b49\u7ea7\u7531\u6765"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/#2-lambda",
            "text": "\u51fd\u6570\u4f5c\u4e3a\u5b9e\u53c2\u8fdb\u884c\u4f20\u9012\u5728c/c++\u4e2d\u975e\u5e38\u5e38\u89c1(\u8868\u73b0\u4e3a\u6307\u9488\u5f62\u5f0f)\uff0c\u5728java\u4e2d\u5219\u9700\u8981\u5229\u7528\u533f\u540d\u5185\u90e8\u7c7b\uff0c\u5148\u770b\u4e00\u7ec4\u7b80\u5355\u7684\u7ebf\u7a0b\u5b9e\u73b0\u4ee3\u7801\u5bf9\u6bd4\uff1a    new Thread(new Runnable() {\n    @Override\n    public void run() {\n        System.out.println(\"\u533f\u540d\u5185\u90e8\u7c7b\u5f0f\u521b\u5efa\u7ebf\u7a0b!\");\n    }\n}).start();\n\nnew Thread(() -> System.out.println(\"lambda\u5f0f\u521b\u5efa\u7ebf\u7a0b !\")).start();   \u8f93\u51fa\u7ed3\u679c:   \u533f\u540d\u5185\u90e8\u7c7b\u5f0f\u521b\u5efa\u7ebf\u7a0b!\nlambda\u5f0f\u521b\u5efa\u7ebf\u7a0b !   \u53ef\u4ee5\u770b\u51fa\uff0clambda\u5f0f\u5c06\u64cd\u4f5c\u884c\u4e3a\u53c2\u6570\u5316\uff0c\u5b9e\u73b0\u73b0\u6210\u7684\u65b9\u5f0f\u8f83\u533f\u540d\u5185\u90e8\u7c7b\u7740\u5b9e\u7b80\u5355\u592a\u591a\u4e86\uff0c\u800c\u4e14\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e5f\u597d\u4e0d\u5c11\u3002",
            "title": "2. \u533f\u540d\u5185\u90e8\u7c7b\u548clambda"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/#3-lambda",
            "text": "\u5982\u4e0a\u9762\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0cRunnable\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff0c\u4ec5\u5305\u542b\u4e00\u4e2arun\u65b9\u6cd5\uff0c\u4f46\u5fc5\u987b\u8981\u5199\u4e00\u5927\u5806\u5570\u91cc\u5570\u55e6\u7684\u4ee3\u7801\uff0c\u5728JDK\u4e2d\uff0c\u8fd8\u6709\u5f88\u591a\u6bd4\u5982Callable\u3001ActionListener\u7b49\uff0cjava8\u4e2d\u5c06\u8fd9\u6837\u7684\u63a5\u53e3\u8fdb\u884c\u7b80\u5316\uff0c\u5373\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u8868\u8fbe\u5f62\u5f0f\uff1a ()-> {}\u3002    (), \u8868\u793a\u53c2\u6570\u5217\u8868\uff1b   {}\uff0clambda\u4e3b\u4f53\uff0c\u5373\u8981\u5b9e\u73b0\u7684\u4ee3\u7801\u903b\u8f91\uff1b   ->, \u5c06\u53c2\u6570\u548clambda\u4e3b\u4f53\u5206\u5f00\u3002    \u6bd4\u5982\uff1a    //Callable\n//\u65e7api      \nCallable<String> c1 = new Callable<String>() {\n    @Override\n    public String call() throws Exception {\n        return \"done\";\n    }\n};\n//java8\n Callable<String> c2 = () -> \"done\";\n\n//comparator\u6bd4\u8f83\u5668\n//\u65e7api      \nComparator<String> c3 = new Comparator<String>() {\n    @Override\n    public int compare(String s1, String s2) {\n        return s1.compareToIgnoreCase(s2);\n    }\n};\n//java8 \nComparator<String> c2 = (s1, s2) -> s1.compareToIgnoreCase(s2);",
            "title": "3. lambda\u548c\u51fd\u6570\u5f0f\u63a5\u53e3"
        },
        {
            "location": "/it/java/java8/lambda/18-02-27/lambda\u521d\u8bc6/#4-lambda",
            "text": "\u518d\u770b\u4e00\u9053\u4f8b\u5b50\uff1a   // code:\nList<Integer> list = Arrays.asList(1, 4, 5, 6, 2, 3);\nfor(Integer i: list) {\n    System.out.print(i + \"  \");\n}\n// result:\n1\n4\n5\n6\n2\n3     \u4e0a\u9762\u8fd9\u9053\u4f8b\u5b50\u4f7f\u7528\u4e86\u5916\u90e8\u8fed\u4ee3\u65b9\u6cd5\u904d\u5386\u5e76\u6253\u5370\u5217\u8868\u539f\u59cb\uff0c\u5916\u90e8\u8fed\u4ee3\u5728\u53ef\u4ee5\u8bf4\u662f\u4e4b\u524d\u5bf9\u6570\u636e\u5217\u8868\u6700\u5e38\u8fdb\u884c\u7684\u64cd\u4f5c\u4e4b\u4e00\uff0c\u4f46\u5916\u90e8\u8fed\u4ee3\u6709\u5982\u4e0b\u4e0d\u8db3\u4e4b\u5904\uff1a    \u53ea\u80fd\u987a\u5e8f\u5904\u7406\u6570\u636e\uff1b   \u4e0d\u80fd\u5145\u5206\u5229\u7528CPU\u591a\u6838\u4f18\u52bf\uff1b   \u4e0d\u5229\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u5de5\u4f5c\u3002    \u5728java8\u4e2d\uff0c\u5c06\u5916\u90e8\u8fed\u4ee3\u8f6c\u6362\u4e3a\u5185\u90e8\u8fed\u4ee3,\u540c\u6837\u80fd\u591f\u8f93\u5165\u76f8\u540c\u7684\u7ed3\u679c:    //\u53ef\u4ee5\u5199\u6210\uff1a\nlist.forEach(i -> System.out::println(i));\n//\u751a\u81f3\u53ef\u4ee5\u5199\u6210 \nlist.forEach(System.out::println);   \u6b64\u5916\uff0cjava8\u4e2d\u5bf9\u96c6\u5408\u7684\u64cd\u4f5c\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u7684\u4e30\u5bcc\uff0c\u5728Collection\u96c6\u5408\u7c7b\u4e2d\u6dfb\u52a0\u4e86stream\u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5c06Collection\u7684\u5b9e\u4f8b\u8f6c\u6362\u4e3a\u6570\u636e\u6d41(\u5173\u4e8e\u6d41\u5c06\u4f1a\u5728\u540e\u9762\u8fdb\u4e00\u6b65\u5c55\u5f00\u5b66\u4e60)\uff0c\u5c06lambda\u548cstream\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u5728\u8fdb\u884c\u6570\u636e\u7684\u6d41\u6c34\u7ebf\u5316\u5904\u7406\u65f6\u4f18\u52bf\u6781\u4e3a\u660e\u663e\u3002  \u53c8\u6765\u4f8b\u5b50\uff1a\u83b7\u53d6\u5217\u8868\u4e2d\u524d50\u4e2a\u5927\u4e8e20\u7684\u6570\u636e\u7684\u5217\u8868\uff1a   //\u65e7\u65b9\u6cd5\nList<Integer> resList1 = new ArrayList<>();\nint num = 0;\nfor(Integer i: list) {\n   if(num > 50) {\n       break;\n   } else if(i > 20) {\n       resList1.add(i);\n       num++;\n   }\n}\n//lambda\nList<Integer> resList2 = list.stream().filter(i -> i > 20).limit(50).collect(Collectors.toList());\n    //\u65e7\u65b9\u6cd5\nList<Integer> resList1 = new ArrayList<>();\nint num = 0;\nfor(Integer i: list) {\n   if(num > 50) {\n       break;\n   } else if(i > 20) {\n       resList1.add(i);\n       num++;\n   }\n}\n//lambda\nList<Integer> resList2 = list.stream().filter(i -> i > 20).limit(50).collect(Collectors.toList());   \u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u6d41\u80fd\u591f\u66f4\u597d\u5730\u5229\u7528\u591a\u6838\u7684\u4f18\u52bf\uff0c\u76f4\u63a5\u5c06stream\u7528parallelStream\u66ff\u4ee3\u5373\u53ef\u3002  stream\u4e2d\u7684\u8fd8\u6709\u5f88\u591a\u7684\u65b9\u6cd5\u6bd4\u5982map\u3001reduce\u3001distinct\u3001skep\u3001findAny\u7b49\u5f88\u591a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u8fdb\u884c\u6d41\u6c34\u7ebf\u5f0f\u62fc\u63a5\u7ec4\u5408\u4ee5\u6ee1\u8db3\u81ea\u8eab\u7684\u4e1a\u52a1\u903b\u8f91\u9700\u6c42\uff0c\u5728\u8fd9\u4e0d\u5199\u592a\u591a\u4f8b\u5b50\u4e86\uff0c\u81ea\u5df1\u52a8\u624b\u5b9e\u8df5\u5427\u3002",
            "title": "4. lambda\u5728\u96c6\u5408\u4e2d\u7684\u4e00\u4e9b\u5e94\u7528"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/",
            "text": "lambda\u8868\u8fbe\u5f0f\u539f\u7406\u7bc7(\u8bd1)\n\n\n\u65f6\u95f4: 2018\u5e743\u67087\u65e5\n\n\n\n\n\u65e0\u5b83\uff0c\u8bd1\u4e4b\u5907\u5b66\u3002 \n\u8bd1\u6e90\u4f20\u9001\u95e8\n\n\n\n\n1. \u5173\u4e8e\n\n\n\u672c\u6587\u6982\u8ff0\u4e86\u5c06lambda\u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528\u4eceJava\u6e90\u4ee3\u7801\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u7684\u7b56\u7565\u3002lambda\u8868\u8fbe\u5f0f\u5728 \nJSR 335\n \u8fdb\u884c\u4e86\u8be6\u7ec6\u8bf4\u660e\u5e76\u4e14\u5728Lambda\u7684 \nOpenJDK\n\u4e2d\u5f97\u4ee5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728 \u300a\nState of the Lambda\n\u300b \u4e00\u6587\u4e2d\u5bf9\u8be5\u8bed\u8a00\u7279\u6027\u6709\u4e00\u4e2a\u6574\u4f53\u8ba4\u8bc6\u3002\u672c\u6587\u5c06\u4e3b\u8981\u5206\u6790\u7f16\u8bd1\u5668\u5728\u9047\u5230lambda\u8868\u8fbe\u5f0f\u65f6\u8981\u5982\u4f55\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u4ee5\u53cajava\u8fd0\u884c\u65f6\u5982\u4f55\u53c2\u4e0e\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\uff0c\u6587\u4e2d\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4f1a\u6d89\u53ca\u5230\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8f6c\u6362\u673a\u5236\u3002\n\n\n\u51fd\u6570\u5f0f\u63a5\u53e3\u662fjava\u7684lambda\u8868\u8fbe\u5f0f\u7684\u91cd\u8981\u9879\uff0c\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u5305\u542b\u4e00\u4e2anon-Object(\u975e\u5bf9\u8c61)\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1aRunnable\u3001Comparator\u7b49(java\u5e93\u5e38\u7528\u8fd9\u4e9b\u63a5\u53e3\u8fdb\u884c\u56de\u8c03\u64cd\u4f5c)\u3002\n\n\nlambda\u8868\u8fbe\u5f0f\u53ea\u80fd\u51fa\u73b0\u5728\u5b83\u4eec\u5c06\u88ab\u5206\u914d\u7ed9\u7c7b\u578b\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u53d8\u91cf\u7684\u5730\u65b9\uff0c\u5982\uff1a\n\n\nRunnable r = () -> { System.out.println(\"hello\"); };\n\n\n\n\n\u6216\u8005\n\n\nCollections.sort(strings, (String a, String b) -> -(a.compareTo(b)));\n\n\n\n\n\u7f16\u8bd1\u5668\u751f\u6210\u7528\u4e8e\u6355\u83b7\u8fd9\u4e9blambda\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u662f\u4f9d\u8d56\u8868\u8fbe\u5f0f\u672c\u8eab\uff0c\u4ee5\u53ca\u4e3a\u5176\u5206\u914d\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u7c7b\u578b\n\n\n1.1. \u4f9d\u8d56\u548c\u7b26\u53f7\n\n\n\u8f6c\u5316\u6a21\u5f0f\u4f9d\u8d56\u4e8e\nJSR-292\n]\u4e2d\u6240\u5b9a\u4e49\u7684\u51e0\u4e2a\u7279\u6027\uff0c\u5305\u62ecinvokedynamic\uff0c\u65b9\u6cd5\u53e5\u67c4\u4ee5\u53caLDC\u5b57\u8282\u7801\u7684\u589e\u5f3a\u5f62\u6001\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u6027\u5728java\u4e2d\u662f\u4e0d\u53ef\u63cf\u8ff0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u4f2a\u4ee3\u7801\u6765\u8fdb\u884c\u8bf4\u660e\uff1a\n\n\n\n\n\u65b9\u6cd5\u53e5\u67c4\u5e38\u91cf\uff1a MH([refKind] class-name.method-name)\n\n\n\u65b9\u6cd5\u7c7b\u578b\u5e38\u91cf\uff1a MT(method-signature)\n\n\ninvokedynamic\uff1aINDY((bootstrap, static args...)(dynamic args...))\n\n\n\n\n\u8bfb\u8005\u4eec\u5e94\u8be5\u5bf9\nJSR-292\n\u7684\u7279\u6027\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\uff0c\u8f6c\u6362\u6a21\u5f0f\u8fd8\u5047\u8bbe\u4e86\u4e00\u4e2a\u65b0\u7279\u6027\uff0c\u5b83\u6b63\u5728\u7531 JSR-292 \u4e13\u5bb6\u7ec4\u4e3aJava SE8\u6307\u5b9a:\u4e00\u4e2a\u7528\u4e8e\u5bf9\u5e38\u91cf\u65b9\u6cd5\u5904\u7406\u7684\u53cd\u5c04\u7684API\u3002\n\n\n2. \u8f6c\u5316\u7b56\u7565\n\n\n\u80fd\u591f\u5c06lambda\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u5b57\u8282\u6d41\u7684\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u7c7b\u4f3c\u4e8e\u5185\u90e8\u7c7b\u3001\u65b9\u6cd5\u53e5\u67c4\u3001\u52a8\u6001\u4ee3\u7406\u7b49\u3002\u5f53\u7136\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u6709\u5229\u6709\u5f0a\uff0c\u5728\u9009\u62e9\u7b56\u7565\u65f6\uff0c\u6709\u4e24\u4e2a\u76f8\u4e92\u5236\u7ea6\u7684\u76ee\u6807:\u901a\u8fc7\u4e0d\u63d0\u4ea4\u7279\u5b9a\u7b56\u7565\u3001\u5728\u7c7b\u6587\u4ef6\u8868\u793a\u4e2d\u63d0\u4f9b\u7a33\u5b9a\u6027\u6765\u6700\u5927\u5316\u4ee5\u540e\u4f18\u5316\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\nJSR-292\n\u7684invokedynamic\u7279\u6027\u6765\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u76ee\u6807\uff0c\u4ece\u800c\u5c06\u5b57\u8282\u7801\u4e2dlambda\u521b\u5efa\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0e\u5728\u8fd0\u884c\u65f6\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\u7684\u673a\u5236\u5206\u79bb\u5f00\u6765\u3002\u6211\u4eec\u4e0d\u662f\u751f\u6210\u5b57\u8282\u7801\u6765\u521b\u5efa\u5b9e\u73b0lambda\u8868\u8fbe\u5f0f\u7684\u5bf9\u8c61(\u6bd4\u5982\u8c03\u7528\u5185\u90e8\u7c7b\u7684\u6784\u9020\u5668)\uff0c\u800c\u662f\u63cf\u8ff0\u6784\u9020lambda\u7684\u65b9\u6cd5\uff0c\u5e76\u5c06\u5b9e\u9645\u7684\u6784\u5efa\u59d4\u6258\u7ed9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6765\u5b8c\u6210\u3002\u8be5\u65b9\u6cd5\u5728invokedynamic\u6307\u4ee4\u7684\u9759\u6001\u548c\u52a8\u6001\u53c2\u6570\u5217\u8868\u4e2d\u8fdb\u884c\u7f16\u7801\u3002\n\n\n\u4f7f\u7528invokedynamic\u53ef\u4ee5\u63a8\u8fdf\u8f6c\u5316\u7b56\u7565\u7684\u9009\u62e9\u81f3\u8fd0\u884c\u65f6\uff0c\u8fd0\u884c\u65f6\u5b9e\u73b0\u53ef\u4ee5\u81ea\u7531\u5730\u9009\u62e9\u7b56\u7565\u6765\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\u3002\u8fd0\u884c\u65f6\u5b9e\u73b0\u9009\u62e9\u9690\u85cf\u5728\u6807\u51c6\u5316(\u5373\u5e73\u53f0\u89c4\u8303\u7684\u4e00\u90e8\u5206)\u7528\u4e8elambda\u7ed3\u6784\u7684API\uff0c\u8fd9\u6837\u9759\u6001\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u53d1\u51fa\u5bf9\u8fd9\u4e2aAPI\u7684\u8c03\u7528\uff0cJRE\u7684\u5b9e\u73b0\u53ef\u4ee5\u9009\u62e9\u5b83\u4eec\u7684\u9996\u9009\u7b56\u7565\u3002invokedynamic\u673a\u5236\u5141\u8bb8\u5728\u6ca1\u6709\u8fd9\u79cd\u5ef6\u8fdf\u7ed1\u5b9a\u65b9\u6cd5\u4e14\u53ef\u80fd\u589e\u52a0\u6027\u80fd\u6210\u672c\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\n\n\u5f53\u7f16\u8bd1\u5668\u9047\u5230lambda\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5148\u5c06\u8be5\u8868\u8fbe\u5f0f\u7684body\u4f53\u5f31\u5316(\u63d0\u53d6)\u4e3a\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b\u540clambda\u8868\u8fbe\u5f0f\u7684\u76f8\u5339\u914d\uff0c\u53ef\u80fd\u4f1a\u9644\u5e26\u4e00\u4e9b\u53c2\u6570(\u7528\u4e8e\u4ece\u8bcd\u6cd5\u4f5c\u7528\u57df\u5185\u6355\u83b7\u503c)\uff0c\u5f53lambda\u8868\u8fbe\u5f0f\u88ab\u6355\u83b7\u65f6\uff0c\u5c06\u4ea7\u751f\u4e00\u4e2ainvokedynamic\u8c03\u7528\u7ad9\u70b9\uff0c\u5f53\u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7531lambda\u8f6c\u6362\u6210\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8c03\u7528\u7ad9\u70b9\u79f0\u4e3alambda\u5de5\u5382\u3002lambda\u5de5\u5382\u7684\u52a8\u6001\u53c2\u6570\u662f\u4ece\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u83b7\u6355\u83b7\u5230\u7684\u503c\uff0clambda\u5de5\u5382\u7684\u542f\u52a8\u65b9\u6cd5\u662fjava\u8fd0\u884c\u65f6\u5e93\u4e2d\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u53eb\u505alambda metafactory(lambda\u5143\u5de5\u5382)\uff0c\u9759\u6001\u5f15\u5bfc\u53c2\u6570\u5728\u7f16\u8bd1\u65f6\u6355\u83b7\u5173\u4e8elambda\u7684\u4fe1\u606f(\u5b83\u5c06\u88ab\u8f6c\u6362\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5bf9desugared lambda\u4f53\u7684\u65b9\u6cd5\u53e5\u67c4\uff0c\u4ee5\u53ca\u5173\u4e8eSAM\u7c7b\u578b\u662f\u5426\u53ef\u5e8f\u5217\u5316\u7b49\u4fe1\u606f)\u3002\n\n\n\u65b9\u6cd5\u5f15\u7528\u4e0elambda\u8868\u8fbe\u5f0f\u7684\u5904\u7406\u65b9\u5f0f\u76f8\u540c\uff0c\u4f46\u5927\u591a\u6570\u65b9\u6cd5\u5f15\u7528\u4e0d\u9700\u8981\u88ab\u5230\u4e00\u4e2a\u65b0\u65b9\u6cd5\u91cc;\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4e3a\u5f15\u7528\u7684\u65b9\u6cd5\u52a0\u8f7d\u4e00\u4e2a\u5e38\u91cf\u65b9\u6cd5\u53e5\u67c4\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9metafactory\u3002\n\n\n3. \u63d0\u53d6 lambda body\n\n\n\u5c06lambdas\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5c06lambda\u4f53\u63d0\u53d6\u4e3a\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5173\u4e8e\u63d0\u53d6\u6709\u5982\u4e0b\u51e0\u70b9\u9009\u62e9:\n\n\n\n\n\u63d0\u53d6\u6210\u9759\u6001\u65b9\u6cd5\u6216\u662f\u5b9e\u4f8b\u65b9\u6cd5?\n\n\n\u5e94\u8be5\u63d0\u53d6\u90a3\u513f\u7c7b?\n\n\n\u63d0\u53d6\u65b9\u6cd5\u7684\u53ef\u8bbf\u95ee\u6027\u5982\u4f55?\n\n\n\u63d0\u53d6\u65b9\u6cd5\u5e94\u5982\u4f55\u547d\u540d?\n\n\n\u5982\u679c\u9700\u8981\u9002\u914dlambda body\u7b7e\u540d\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d\u4e4b\u95f4\u7684\u5dee\u5f02(\u6bd4\u5982\u88c5\u7bb1\u3001\u5f00\u7bb1\u3001\u539f\u59cb\u6269\u5c55\u6216\u6536\u7f29\u8f6c\u6362\u3001\u53d8\u91cf\u8f6c\u6362\u7b49)\uff0c\u90a3\u4e48\u63d0\u53d6\u65b9\u6cd5\u5e94\u8be5\u9075\u5faalambda body\u4f53\u7684\u7b7e\u540d\u3001\u51fd\u6570\u5f0f\u63a5\u53e3\u7b7e\u540d\u6291\u6216\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4?\u7531\u8c01\u8d1f\u8d23\u8be5\u9002\u914d\u6027\u5de5\u4f5c?\n\n\n\u5982\u679clambda\u6355\u83b7\u4e86\u95ed\u5305\u4f5c\u7528\u57df\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u5728\u63d0\u53d6\u65b9\u6cd5\u7b7e\u540d\u4e2d\u5e94\u8be5\u5982\u4f55\u8868\u793a?(\u5b83\u4eec\u53ef\u4ee5\u662f\u6dfb\u52a0\u5230\u53c2\u6570\u5217\u8868\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u7684\u5355\u72ec\u7684\u53c2\u6570\uff0c\u6216\u8005\u7f16\u8bd1\u5668\u53ef\u4ee5\u5c06\u5b83\u4eec\u6536\u96c6\u5230\u4e00\u4e2a\u201c\u6846\u67b6\u201d\u53c2\u6570\u4e2d\u3002)\n\n\n\n\n\u4e0e\u63d0\u53d6lambda\u4f53\u7684\u95ee\u9898\u76f8\u5173\u7684\u662f\uff0c\u65b9\u6cd5\u5f15\u7528\u662f\u5426\u9700\u8981\u9002\u914d\u5668\u6216\u6865\u63a5\u5668\u65b9\u6cd5\u7684\u751f\u6210\u3002\n\n\n\u7f16\u8bd1\u5668\u80fd\u591f\u4e3alambda\u8868\u8fbe\u5f0f\u63a8\u5bfc\u65b9\u6cd5\u7b7e\u540d\uff0c\u5305\u62ec\u53c2\u6570\u7c7b\u578b\u3001\u8fd4\u56de\u7c7b\u578b\u4ee5\u53ca\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u79f0\u4e3a\u81ea\u7136\u7b7e\u540d(natural signature)\uff0cLambda\u8868\u8fbe\u5f0f\u6709\u4e00\u4e2a\u76ee\u6807\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3;\u6211\u4eec\u5c06\u4e3a\u64e6\u9664\u4e86\u76ee\u6807\u7c7b\u578b\u7684\u63cf\u8ff0\u7b26\u8c03\u7528lambda\u63cf\u8ff0\u7b26\u7684\u65b9\u6cd5\u7b7e\u540d\u3002lambda\u5de5\u5382\u8fd4\u56de\u7684\u503c\u88ab\u79f0\u4e3alambda\u5bf9\u8c61\uff0c\u5b83\u5b9e\u73b0\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u5e76\u6355\u83b7\u4e86lambda\u884c\u4e3a\u3002\n\n\n\u5728\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u79c1\u6709\u65b9\u6cd5\u662f\u4f18\u4e8e\u975e\u79c1\u6709\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u4f18\u4e8e\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u5982\u679clambda body\u4f53\u63d0\u53d6\u5230\u5185\u90e8\u7c7b\uff0c\u65b9\u6cd5\u7b7e\u540d\u5e94\u5f53\u5339\u914dlambda body\u7684\u7b7e\u540d\uff0c\u989d\u5916\u7684\u53c2\u6570\u5e94\u7f6e\u4e8e\u53c2\u6570\u5217\u8868\u4e2d\u88ab\u6355\u83b7\u7684\u503c\u524d\u9762\uff0c\u65e0\u9700\u63d0\u53d6\u65b9\u6cd5\u5f15\u7528\u3002\u7136\u800c\uff0c\u4e5f\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u504f\u79bb\u8fd9\u4e2a\u57fa\u7ebf\u7b56\u7565\u3002\n\n\n3.1. \u63d0\u53d6\u793a\u4f8b--\u201c\u65e0\u72b6\u6001\u201d lambda\n\n\nlambda\u8868\u8fbe\u5f0f\u7684\u6700\u7b80\u5355\u5f62\u5f0f\u662f\u4ece\u5b83\u7684\u5c01\u95ed\u4f5c\u7528\u57df(\u65e0\u72b6\u6001\u7684lambda)\u4e2d\u6355\u83b7\u4efb\u4f55\u72b6\u6001:\n\n\nclass A {\n    public void foo() {\n        List<String> list = ...\n        list.forEach( s -> { System.out.println(s); } );\n    }\n}\n\n\n\n\nlambda\u81ea\u7136\u7b7e\u540d(String)V,forEach\u65b9\u6cd5\u4f7f\u7528\u4e00\u4e2aBlock\n,\u5176lambda\u63cf\u8ff0\u7b26\u4e3a(Object)V,\u7f16\u8bd1\u5668\u5c06lambda\u4f53\u63d0\u53d6\u4e3a\u81ea\u7136\u7b7e\u540d\u7684\u9759\u6001\u65b9\u6cd5\u5e76\u4e3a\u62bd\u53d6body\u4f53\u751f\u6210\u65b9\u6cd5\u540d\u3002\n\n\nclass A {\n    public void foo() {\n        List<String> list = ...\n        list.forEach( [lambda for lambda$1 as Block] );\n    }\n\n    static void lambda$1(String s) {\n        System.out.println(s);\n    }\n}\n\n\n\n\n3.2. \u63d0\u53d6\u5b9e\u4f8b\u2014\u2014lambdas\u6355\u83b7\u4e0d\u53ef\u53d8\u7684\u503c\n\n\nlambda\u8868\u8fbe\u5f0f\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u662f\u6355\u83b7\u5305\u542bfinal\u7c7b\u578b\u7684(\u6216\u6709\u6548\u7684\u6700\u7ec8)\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u53ca\u6765\u81ea\u5c01\u95ed\u5b9e\u4f8b\u7684\u5b57\u6bb5(\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5bf9this\u7684\u6355\u83b7)\u3002\n\n\nclass B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf( p -> (p.size >= bottom && p.size <= top) );\n    }\n}\n\n\n\n\nlambda\u4ece\u5c01\u95ed\u4f5c\u7528\u57df\u5185\u6355\u83b7final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cfbottom\u548ctop\u3002\n\n\n\u63d0\u53d6\u65b9\u6cd5\u7684\u7b7e\u540d\u5c06\u662f\u81ea\u7136\u7b7e\u540d(Person)Z\uff0c\u5176\u989d\u5916\u53c2\u6570\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u524d\u9762\u3002\u7f16\u8bd1\u5668\u4f1a\u8003\u8651\u5c06\u8fd9\u4e9b\u989d\u5916\u7684\u53c2\u6570\u8fdb\u884c\u4f55\u79cd\u5448\u73b0;\u5b83\u4eec\u53ef\u4ee5\u5355\u72ec\u9884\u7f6e\uff0c\u88c5\u5165\u6846\u67b6\u7c7b\uff0c\u6216\u88c5\u5165\u4e00\u4e2a\u6570\u7ec4\u7b49\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5206\u522b\u5bf9\u5b83\u4eec\u8fdb\u884c\u9884\u5904\u7406:\n\n\nclass B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf( [ lambda for lambda$1 as Predicate capturing (bottom, top) ]);\n    }\n\n    static boolean lambda$1(int bottom, int top, Person p) {\n        return (p.size >= bottom && p.size <= top;\n    }\n}\n\n\n\n\n\u76f8\u53cd\uff0c\u6355\u83b7\u7684\u503c(bottom\u548ctop)\u53ef\u4ee5\u88ab\u88c5\u5165\u6846\u67b6\u6216\u6570\u7ec4\u4e2d;\u5173\u952e\u662f\u9700\u8981\u4fdd\u6301\u6240\u63d0\u53d6\u7684lambda\u65b9\u6cd5\u7b7e\u540d\u4e2d\u51fa\u73b0\u7684\u989d\u5916\u53c2\u6570\u7684\u7c7b\u578b\u548c\u5b83\u4eec\u4f5c\u4e3a(\u52a8\u6001\u7684)\u53c2\u6570\u663e\u793a\u7ed9lambda\u5de5\u5382\u7684\u7c7b\u578b\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002\u7531\u4e8e\u7f16\u8bd1\u5668\u63a7\u5236\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u4eec\u540c\u65f6\u751f\u6210\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5728\u5982\u4f55\u6253\u5305\u6355\u83b7\u53c2\u6570\u65b9\u9762\u5177\u6709\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u3002\n\n\n4. lambda \u5143\u5de5\u5382(Metafactory)\n\n\nlambda\u7684\u6355\u83b7\u7531invokedynamic\u8c03\u7528\u7ad9\u70b9\u5b9e\u73b0\uff0c\u5176\u9759\u6001\u53c2\u6570\u63cf\u8ff0\u4e86lambda body\u4f53\u4ee5\u53ca\u88ab\u6355\u83b7\u5230\u7684\u52a8\u6001\u53c2\u6570\u503c\u7684\u7279\u5f81\uff0c\u5f53\u88ab\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2a\u8c03\u7528\u7ad9\u70b9\u5c06\u8fd4\u56de\u4e00\u4e2alambda\u5bf9\u8c61\uff0c\u4ee5\u5bf9\u5e94lambda\u7684body\u4f53\u3001\u63cf\u8ff0\u7b26\u548c\u7ed1\u5b9a\u6355\u83b7\u7684\u503c\uff0c\u8c03\u7528\u7ad9\u70b9\u542f\u52a8\u65b9\u6cd5\u79f0\u4e4b\u4e3a\u5143\u5de5\u5382\uff08\u53ef\u4ee5\u6709\u4e00\u4e2a\u9002\u5e94\u4e8e\u6574\u4e2alambda\u5f62\u6001\u7684\u5355\u72ec\u7684metafactory\uff0c\u6216\u8005\u5bf9\u5e38\u89c1\u7684\u60c5\u51b5\u6709\u4e13\u95e8\u7684\u7248\u672c\uff09\uff0cVM\u9488\u5bf9\u7f8e\u56fd\u8c03\u7528\u70b9\u4ec5\u8c03\u7528\u4e00\u6b21metafactory\uff0c\u7136\u540e\u4f1a\u8fde\u63a5\u8be5\u8c03\u7528\u70b9\u5e76\u79bb\u5f00\uff0c\u8c03\u7528\u70b9\u90fd\u662f\u5ef6\u8fdf\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u8c03\u7528\u7684\u8bdd\u5c31\u4e0d\u4f1a\u8fde\u63a5\uff0cmetafactory\u7684\u9759\u6001\u53c2\u6570\u5217\u8868\u5982\u4e0b\uff1a\n\n\nmetaFactory(MethodHandles.Lookup caller, // provided by VM\n            String invokedName,          // provided by VM\n            MethodType invokedType,      // provided by VM\n            MethodHandle descriptor,     // lambda descriptor\n            MethodHandle impl)           // lambda body\n\n\n\n\n\u524d\u4e09\u4e2a\u53c2\u6570\uff08caller, invokeName, invokeType\uff09\u5728callsite\u94fe\u63a5\u4e2d\u88abVM\u81ea\u52a8\u5806\u53e0\uff1bdescriptor\u5b9a\u4e49\u4e86\u88ab\u8f6c\u6362lambda\u5bf9\u5e94\u7684\u51fd\u6570\u5f0f\u63a5\u53e3(\u901a\u8fc7\u65b9\u6cd5\u53e5\u67c4\u7684\u53cd\u5c04API\uff0cmetafactory\u80fd\u591f\u83b7\u53d6\u5230\u51fd\u6570\u5f0f\u63a5\u53e3\u7684class\u7c7b\u3001\u540d\u5b57\u4ee5\u53ca\u4e3b\u8981\u65b9\u6cd5\u7684\u7b7e\u540d)\uff1bimpl\u6807\u8bc6lambda\u65b9\u6cd5\uff0c\u53ef\u80fd\u662flambda body\u4f53\u65b9\u6cd5\u6216\u662f\u88ab\u547d\u540d\u7684\u65b9\u6cd5\u5f15\u7528\u3002\n\n\n\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u548c\u5b9e\u73b0\u65b9\u6cd5\u4e4b\u95f4\u5177\u6709\u5dee\u5f02\u6027\uff0c\u5b9e\u73b0\u65b9\u6cd5\u6709\u4e00\u4e9b\u5f53\u524d\u88ab\u6355\u83b7\u5230\u503c\u7684\u989d\u5916\u53c2\u6570\uff0c\u5176\u4f59\u7684\u53c2\u6570\u4e5f\u53ef\u80fd\u4e0d\u5b8c\u5168\u5339\u914d\uff1b\u4e00\u4e9b\u4f8b\u5982(\u5b50\u7c7b\u578b\uff0c\u88c5\u7bb1)\u5728\u9002\u5e94\u4e2d\u662f\u5141\u8bb8\u7684\u3002\n\n\n4.1. \u6355\u83b7 lambda\n\n\n\u63a5\u4e0b\u6765\u4ecb\u7ecdlambda\u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528\u5411\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8f6c\u5316\uff0c\u8f6c\u5316\u793a\u4f8bclass A\u5982\uff1a\n\n\nclass A {\n    public void foo() {\n            List<String> list = ...\n            list.forEach(indy((MH(metaFactory), MH(invokeVirtual Block.apply),\n                               MH(invokeStatic A.lambda$1)( )));\n        }\n\n    private static void lambda$1(String s) {\n        System.out.println(s);\n    }\n}\n\n\n\n\n\u56e0\u4e3alambda\u5728A\u4e2d\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5lambda\u5de5\u5382\u7ad9\u70b9\u7684\u52a8\u6001\u53c2\u6570\u5217\u8868\u662f\u7a7a\u7684\uff0c\u5982\u793a\u4f8b B\uff0c\u52a8\u6001\u53c2\u6570\u5217\u8868\u4e0d\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a\u5fc5\u987b\u4e3alambda\u5de5\u5382\u63d0\u4f9b\u53c2\u6570bottom\u548ctop\u7684\u503c\uff1a\n\n\nclass B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf(indy((MH(metaFactory), MH(invokeVirtual Predicate.apply),\n                            MH(invokeStatic B.lambda$1))( bottom, top ))));\n    }\n\n    private static boolean lambda$1(int bottom, int top, Person p) {\n        return (p.size >= bottom && p.size <= top;\n    }\n}\n\n\n\n\n4.2. \u9759\u6001\u65b9\u6cd5 VS \u5b9e\u4f8b\u65b9\u6cd5\n\n\n\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0\u7684lambda\u80fd\u591f\u8f6c\u6362\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u5c01\u88c5\u5bf9\u8c61\u5b9e\u4f8b(this\u3001super\u6216\u5c01\u95ed\u5b9e\u4f8b\u7684\u6210\u5458)\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u5f15\u7528\u4f7f\u7528this\u3001super\u6216\u6355\u83b7\u5c01\u95ed\u5b9e\u4f8b\u6210\u5458\u7684lambdas\u4f5c\u4e3a\u5b9e\u4f8b\u6355\u83b7(instance-capturing) lambdas\u3002\u975e\u5b9e\u4f8b\u6355\u83b7(non-instance-capturing)\u7684lambdas\u88ab\u8f6c\u6362\u4e3a\u9759\u6001\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u6355\u83b7\u7684lambda\u5c06\u88ab\u8f6c\u6362\u4e3a\u79c1\u6709\u65b9\u6cd5\uff0c\u8fd9\u7b80\u5316\u53efinstance-capturing lambdas\u7684\u63d0\u53d6\uff0c\u56e0\u4e3alambda body\u4f53\u4e2d\u7684\u540d\u5b57\u548cdesugared\u65b9\u6cd5\u7684\u540d\u79f0\u76f8\u540c\uff0c\u5e76\u4e14\u4e0e\u53ef\u7528\u7684\u5b9e\u73b0\u6280\u672f(\u7ed1\u5b9a\u65b9\u6cd5\u53e5\u67c4)\u5f88\u597d\u5730\u543b\u5408\u3002\u5f53\u6355\u83b7\u4e00\u4e2a\u5b9e\u4f8b\u6355\u83b7lambda\u65f6\uff0c\u63a5\u6536\u8005(this)\u88ab\u6307\u5b9a\u4e3a\u7b2c\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u3002\u4ee5\u6355\u83b7lambda\u7684minSize\u5b57\u6bb5\u4e3a\u4f8b\uff1a\n\n\nlist.filter(e -> e.getSize() < minSize)\n\n\n\n\n\u5c06\u5176\u63d0\u53d6\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u5e76\u5c06\u63a5\u6536\u8005\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\n\n\nlist.forEach(INDY((MH(metaFactory), MH(invokeVirtual Predicate.apply),\n                   MH(invokeVirtual B.lambda$1))( this ))));\n\nprivate boolean lambda$1(Element e) {\n    return e.getSize() < minSize;\n}\n\n\n\n\n\u56e0\u4e3alambda\u7684body\u4f53\u4f1a\u8f6c\u6362\u6210\u79c1\u6709\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4f20\u9012\u884c\u4e3a\u65b9\u6cd5\u53e5\u67c4\u7ed9metafactory\u662f\uff0c\u6355\u83b7\u70b9\u9700\u8981\u52a0\u8f7d\u4e00\u4e2a\u5e38\u91cf\u65b9\u6cd5\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u7684\u5f15\u7528\u7c7b\u578b\u662f\u7528\u4e8e\u5b9e\u4f8b\u65b9\u6cd5\u7684REF_invokeSpecial\u548c\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u7684REF_invokeStatic\u3002\u4e4b\u6240\u4ee5\u80fd\u591f\u63d0\u53d6\u79c1\u6709\u65b9\u6cd5\uff0c\u662f\u56e0\u4e3a\u79c1\u6709\u65b9\u6cd5\u53ef\u4ee5\u88ab\u6355\u83b7\u7c7b\u8bbf\u95ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3ametafactory\u6240\u8c03\u7528\u7684\u79c1\u6709\u65b9\u6cd5\u83b7\u53d6\u4e00\u4e2a\u65b9\u6cd5\u53e5\u67c4(\u5982\u679cmetafactory\u751f\u6210\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u76ee\u6807\u51fd\u6570\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8c03\u7528\u65b9\u6cd5\u53e5\u67c4\uff0c\u5b83\u5c06\u901a\u8fc7Unsafe.defineClass\u6765\u52a0\u8f7d\u8fd9\u4e9b\u7c7b\uff0c\u65e0\u9700\u8fdb\u884c\u53ef\u8fbe\u6027\u68c0\u6d4b\uff09\u3002\n\n\n4.3. \u65b9\u6cd5\u5f15\u7528\u6355\u83b7\n\n\n\u65b9\u6cd5\u5f15\u7528\u6709\u591a\u79cd\u5f62\u5f0f\u5982lambda\uff0c\u53ef\u4ee5\u5212\u5206\u4e3ainstance-capturing \u548c non-instance-capturing\uff0cnon-instance-capturing\u7684\u65b9\u6cd5\u5f15\u7528\u5305\u542b\u9759\u6001\u65b9\u6cd5\u5f15\u7528 (Integer::parseInt, \u7528\u5f15\u7528\u7c7binvokeStatic\u6355\u83b7)\uff0c\u672a\u7ed1\u5b9a\u5b9e\u4f8b\u7684\u65b9\u6cd5\u5f15\u7528(String::length,\u7528\u5f15\u7528invokeVirtual\u6355\u83b7)\u4ee5\u53ca\u9876\u7ea7\u6784\u9020\u65b9\u6cd5\u5f15\u7528(Foo::new,\u7528invoke_newSpecial\u5f15\u7528\u8fdb\u884c\u6355\u83b7)\uff0c\u5f53\u6355\u83b7\u4e00\u4e2anon-instance-capturing\u7684\u65b9\u6cd5\u5f15\u7528\u65f6\uff0c\u88ab\u6355\u83b7\u7684\u53c2\u6570\u5217\u8868\u662f\u7a7a\u7684\uff1a\n\n\nlist.filter(String::isEmpty)\n\n\n\n\n\u88ab\u8f6c\u6362\u6210\uff1a\n\n\nlist.filter(indy(MH(metaFactory), MH(invokeVirtual Predicate.apply), MH(invokeVirtual String.isEmpty))()))\n\n\n\n\ninstance-capturing \u65b9\u6cd5\u5f15\u7528\u5f62\u6001\u5305\u62ec\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528(s::length, \u901a\u8fc7\u5f15\u7528invokeVirtual\u6355\u83b7)\uff0csuper\u65b9\u6cd5\u5f15\u7528(super::foo, \u901a\u8fc7\u5f15\u7528invokeSpecial\u6355\u83b7)\u4ee5\u53ca\u5185\u90e8\u7c7b\u6784\u9020\u5f15\u7528(Inner::new, \u901a\u8fc7\u5f15\u7528invokeNewSpecial\u6355\u83b7)\uff0c\u5f53\u6355\u83b7\u4e00\u4e2a instance-capturing\u65b9\u6cd5\u5f15\u7528\uff0c\u88ab\u6355\u83b7\u7684\u53c2\u6570\u5217\u8868\u603b\u662f\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u53c2\u6570\uff0c\u662fsuper\u91cc\u7684this\u6216\u5185\u90e8\u7c7b\u653e\u5165\u6784\u9020\u51fd\u6570\u65b9\u6cd5\u5f15\u7528\uff0c\u4ea6\u6216\u662f\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528\u6240\u6307\u5b9a\u63a5\u6536\u8005\u3002\n\n\n4.4. \u53ef\u53d8\u53c2\u6570 (Varargs)\n\n\n\u5982\u679c\u5bf9varargs\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528\u88ab\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u800c\u975evarargs\u65b9\u6cd5\uff0c\u7f16\u8bd1\u5668\u5fc5\u987b\u751f\u6210\u4e00\u4e2a\u6865\u63a5\u65b9\u6cd5\u5e76\u6355\u83b7\u6865\u63a5\u7684\u65b9\u6cd5\u53e5\u67c4\u4ee5\u66ff\u4ee3\u6355\u83b7\u76ee\u6807\u65b9\u6cd5\u672c\u8eab\u3002\u6865\u63a5\u5fc5\u987b\u5904\u7406\u4efb\u4f55\u9700\u8981\u7684\u53c2\u6570\u7c7b\u578b\u7684\u4fee\u6539\u4ee5\u53ca\u4ecevarargs\u5230\u975evarargs\u7684\u4fee\u6539\uff0c\u5982\uff1a\n\n\ninterface IIS {\n    void foo(Integer a1, Integer a2, String a3);\n}\n\nclass Foo {\n    static void m(Number a1, Object... rest) { ... }\n}\n\nclass Bar {\n    void bar() {\n        SIS x = Foo::m;\n    }\n}\n\n\n\n\n\u5728\u6b64\uff0c\u7f16\u8bd1\u5668\u9700\u8981\u751f\u6210\u4e00\u4e2a\u6865\u63a5\u6765\u6267\u884c\u4eceNumber\u5230Integer\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u7684\u9002\u914d\uff0c\u4ee5\u53ca\u5c06\u5269\u4f59\u7684\u53c2\u6570\u6536\u96c6\u5230\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u4e2d:\n\n\nclass Bar {\n    void bar() {\n        SIS x = indy((MH(metafactory), MH(invokeVirtual IIS.foo),\n                      MH(invokeStatic m$bridge))( ))\n    }\n\n    static private void m$bridge(Integer a1, Integer a2, String a3) {\n        Foo.m(a1, a2, a3);\n    }\n}\n\n\n\n\n4.5. \u9002\u5e94\u6027\n\n\n\u63d0\u53d6lambda\u65b9\u6cd5\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b(A1..An) -> Ra (\u5982\u679c\u63a5\u6536\u65b9\u6cd5\u662f\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u90a3\u4e48\u63a5\u6536\u8005\u88ab\u8ba4\u4e3a\u662f\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570)\uff0c\u7c7b\u4f3c\u5730\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3\u540c\u6837\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b\uff1a(F1..Fm) -> Rf\uff08\u65e0\u63a5\u6536\u8005\u53c2\u6570\uff09\uff0c\u5de5\u5382\u7ad9\u70b9\u7684\u52a8\u6001\u53c2\u6570\u5217\u8868\u6709\u53c2\u6570\u7c7b\u578b(D1..Dk)\u3002\u5982\u679clambda\u662f\u5b9e\u4f8b\u6355\u83b7\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u5fc5\u987b\u662f\u63a5\u6536\u8005\u3002\n\n\n\u5b83\u4eec\u7684\u957f\u5ea6\u5fc5\u987b\u52a0\u8d77\u6765\u5982\u4e0b:k+m == n\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0clambda\u4f53\u53c2\u6570\u5217\u8868\u957f\u5ea6\u5e94\u8be5\u7b49\u4e8e\u52a8\u6001\u53c2\u6570\u5217\u8868\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u65b9\u6cd5\u53c2\u6570\u5217\u8868\u957f\u5ea6\u4e4b\u548c\u3002\n\u5c06lambda body\u53c2\u6570\u5217\u8868A1..An\u5212\u5206\u4e3a(D1 . .Dk H1..Hm\uff0cD\u53c2\u6570\u5bf9\u5e94\u4e8e\u201c\u989d\u5916\u201d(\u52a8\u6001)\u53c2\u6570\uff0cH\u53c2\u6570\u5bf9\u5e94\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u53c2\u6570\u3002\n\u6211\u4eec\u8981\u6c42Hi\u57281\u5230m\u8303\u56f4\u5185\u80fd\u9002\u5e94Fi\u3002\u540c\u6837\u5730\uff0c\u6211\u4eec\u8981\u6c42Ra\u53ef\u4ee5\u9002\u5e94Rf,\u7c7b\u578bT\u9002\u7528\u4e8e\u7c7b\u578bU:\n\n\n\n\nT == U\n\n\nT\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0cU\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u901a\u8fc7\u88c5\u7bb1\u64cd\u4f5c\u8f6c\u6362\u4e3aU\n\n\nT\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cU\u4e3a\u57fa\u672c\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u901a\u8fc7\u62c6\u7bb1\u64cd\u4f5c\u8f6c\u6362\u4e3aU\n\n\nT\u548cU\u90fd\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4e14T\u80fd\u591f\u901a\u8fc7\u6269\u5c55\u8f6c\u6362\u4e3aU\n\n\nT\u548cU\u90fd\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u8f6c\u6362\u4e3aU\n\n\n\n\n\u9002\u5e94\u6027\u7531metafactory\u5728\u94fe\u63a5\u65f6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5e76\u5728\u6267\u884c\u65f6\u8fdb\u884c\u6355\u83b7\u3002\n\n\n4.6. metafactory \u53d8\u4f53\n\n\n\u5bf9\u6240\u6709\u7684lambda\u5f62\u6001\u90fd\u7528\u4e00\u4e2a\u5143\u6570\u636e\u662f\u662f\u53ef\u884c\u7684\u3002\u7136\u800c\uff0c\u6700\u597d\u8fd8\u662f\u5c06 metafactory \u5212\u5206\u4e3a\u591a\u4e2a\u7248\u672c:\n\n\n\n\n\u4e00\u4e2a\u201c\u5feb\u901f\u8def\u5f84(fast path)\u201d\u7248\u672c\uff0c\u5b83\u652f\u6301\u4e0d\u53ef\u5e8f\u5217\u5316\u7684 lambda \u548c\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u9759\u6001\u6216\u672a\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528;\n\n\n\u4e00\u4e2a\u53ef\u5e8f\u5217\u5316\u7684\u7248\u672c\uff0c\u652f\u6301\u53ef\u5e8f\u5217\u5316\u7684 lambda \u548c\u5404\u79cd\u65b9\u6cd5\u5f15\u7528;\n\n\n\u5982\u679c\u6709\u5fc5\u8981\uff0c\u4e00\u4e2a\u201ckitchen sink\u201d\u7248\u672c\uff0c\u5b83\u652f\u6301\u4efb\u610f\u7ec4\u5408\u7684\u8f6c\u6362\u7279\u6027\u3002\n\n\n\n\nkitchen sink\u7248\u672c\u5c06\u4f1a\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684flag\u6807\u5fd7\u53c2\u6570\u6765\u9009\u62e9\u9009\u9879\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7279\u5b9a\u9009\u9879\u7684\u53c2\u6570\u3002serializable\u7248\u672c\u53ef\u80fd\u4f1a\u63a5\u53d7\u4e0e\u5e8f\u5217\u5316\u6709\u5173\u7684\u9644\u52a0\u53c2\u6570\u3002\n\n\n\u7531\u4e8emetafactories\u4e0d\u662f\u7531\u7528\u6237\u76f4\u63a5\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u6765\u505a\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u6df7\u6dc6\u3002\u901a\u8fc7\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u53c2\u6570\uff0c\u7c7b\u6587\u4ef6\u53d8\u5f97\u66f4\u5c0f\u3002\u5feb\u901f\u8def\u5f84\u9009\u9879\u964d\u4f4e\u4e86VM\u5bf9lambda\u8f6c\u5316\u64cd\u4f5c\u7684\u5185\u90e8\u9650\u5236\uff0c\u4f7f\u5b83\u53ef\u4ee5\u88ab\u5f53\u4f5c\u4e00\u4e2a\u201c\u88c5\u7bb1\u201d\u64cd\u4f5c\uff0c\u5e76\u4fc3\u8fdb\u4e86\u62c6\u7bb1\u4f18\u5316\u3002\n\n\n5. \u5e8f\u5217\u5316\n\n\n\u6211\u4eec\u7684\u52a8\u6001\u8f6c\u5316\u7b56\u7565\u8981\u6c42\u4e00\u4e2a\u52a8\u6001\u7684\u5e8f\u5217\u5316\u7b56\u7565\u3002\u5982\u679c\u5e0c\u671b\u80fd\u591f\u4ece\u5185\u90e8\u7c7b\u8f6c\u5230\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\uff0c\u6216\u8005\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5fc5\u987b\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u53d8\u6210\u52a8\u6001\u4ee3\u7406\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e3alambda\u8868\u8fbe\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u7acb\u7684\u5e8f\u5217\u5316\u5f62\u5f0f\uff0c\u5e76\u4f7f\u7528readResolve\u548cwriteReplace\u5728lambda\u5bf9\u8c61\u548c\u5e8f\u5217\u5316\u5f62\u6001\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u5e8f\u5217\u5316\u5f62\u6001\u5fc5\u987b\u5305\u542b\u901a\u8fc7metafactory\u91cd\u65b0\u521b\u5efa\u5bf9\u8c61\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002\n\n\npublic interface SerializedLambda extends Serializable {\n    // capture context\n    String getCapturingClass();\n\n    // SAM descriptor\n    String getDescriptorClass();\n    String getDescriptorName();\n    String getDescriptorMethodType();\n\n    // implementation\n    int getImplReferenceKind();\n    String getImplClass();\n    String getImplName();\n    String getImplMethodType();\n\n    // dynamic args -- these will individually need to be Serializable too\n    Object[] getCapturedArgs();\n}\n\n\n\n\n\u8fd9\u91cc\uff0cSerializedLambda\u63a5\u53e3\u63d0\u4f9b\u4e86\u539f\u59cblambda\u6355\u83b7\u7ad9\u70b9\u4e0a\u7684\u6240\u6709\u4fe1\u606f\u3002\u5728\u6355\u83b7\u53ef\u5e8f\u5217\u5316\u7684lambda\u65f6\uff0cmetafactory\u5c06\u4e0d\u5f97\u4e0d\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0writeReplace\u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2aSerializedLambda\u5b9e\u73b0\uff0c\u8be5\u5b9e\u73b0\u5177\u6709\u4e00\u4e2areadResolve\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8d1f\u8d23\u91cd\u65b0\u521b\u5efalambda\u5bf9\u8c61\u3002\n\n\n5.1. \u53ef\u8fbe\u6027\n\n\n\u53cd\u5e8f\u5217\u5316\u4ee3\u7801\u9700\u8981\u4e3a\u5b9e\u73b0\u65b9\u6cd5\u6784\u9020\u4e00\u4e2a\u65b9\u6cd5\u53e5\u67c4\u3002\u867d\u7136\u5e8f\u5217\u5316\u5f62\u5f0f\u63d0\u4f9b\u4e86\u6240\u6709\u4fe1\u606f\u2014\u2014\u79cd\u7c7b\u3001\u7c7b\u3001\u540d\u79f0\u548c\u7c7b\u578b\u2014\u2014\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u66b4\u9732\u5728MethodHandles.Lookup\u4e0a\u7684findXxx\u65b9\u6cd5\u6765\u8fdb\u884c\u6784\u9020\u3002\u88ab\u5f15\u7528\u7684lambda\u65b9\u6cd5\u6216\u65b9\u6cd5\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95eeSerializedLambda\u5b9e\u73b0(\u53ef\u80fd\u662f\u65b9\u6cd5\u4e0d\u53ef\u8bbf\u95ee\u7684\uff0c\u6216\u8005\u662f\u5c01\u95ed\u7c7b\u4e0d\u53ef\u8bbf\u95ee)\u3002\u8fd9\u5bf9\u4e8elambda\u5de5\u5382\u7ad9\u70b9\u6765\u8bf4\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5b9e\u73b0\u7684\u65b9\u6cd5\u53e5\u67c4\u662f\u4f7f\u7528\u8be5\u7c7b\u7684\u53ef\u8bbf\u95ee\u7279\u6743\u6743\u9650\u52a0\u8f7d\u7684\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u907f\u514d\u5f15\u5165\u5b89\u5168\u98ce\u9669\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5c3d\u91cf\u5c11\u4f7f\u7528\u4efb\u4f55\u9ad8\u7ea7\u7279\u6743\uff0c\u5f53\u7136\u4e5f\u4e0d\u8981\u4fee\u6539JVM\u7684\u53ef\u8bbf\u95ee\u6027\u89c4\u5219\u3002\n\n\n\u4e00\u79cd\u786e\u4fdd\u5e8f\u5217\u5316lambda\u6216\u65b9\u6cd5\u5f15\u7528\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u516c\u5171\u7c7b\u7684\u516c\u5171\u65b9\u6cd5\u3002\u8fd9\u53ef\u80fd\u5df2\u7ecf\u662f\u6b63\u786e\u7684(\u65b9\u6cd5\u5f15\u7528String::length)\uff0c\u6216\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6210\u4e3atrue(\u5bf9\u4e8e\u516c\u5171\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6lambda\u5230public\u65b9\u6cd5)\u3002\u4f46\u662f\u8fd9\u4e5f\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u5b83\u4ee5\u516c\u5171\u65b9\u6cd5\u516c\u5f00\u4e86\u5185\u90e8\u4fe1\u606f\uff0c\u5e76\u4e14\u4e0e\u6211\u4eec\u5bf9\u4e0d\u53ef\u5e8f\u5217\u5316\u7684lambda\u7684\u8f6c\u5316\u4e0d\u4e00\u81f4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fd8\u9700\u8981\u4e00\u4e9b\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u975e\u516c\u5f00\u7c7b\u4e0a\u521b\u5efa\u4e00\u4e2a\u516c\u5171\u7684\u201csidecar\u201d\u7c7b\u3002(\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u201c\u516c\u5f00\u201d\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u5e8f\u5217\u5316\u6240\u505a\u7684\u4e8b\u60c5\u2014\u2014\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5916\u90e8\u7684\u516c\u5171\u5b9e\u9645\u6784\u9020\u51fd\u6570\u3002\u4f46\u6211\u4eec\u5e0c\u671b\u5c3d\u91cf\u51cf\u5c11\u8fd9\u79cd\u64cd\u4f5c\u3002\n\n\n\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u53cd\u5e8f\u5217\u5316\u8fd4\u56de\u7ed9\u6267\u884clambda\u6355\u83b7\u7684\u7c7b\u3002\u4e00\u4e2a\u5173\u952e\u7684\u5b89\u5168\u95ee\u9898\u662f\uff0c\u4e0d\u80fd\u8ba9\u53cd\u5e8f\u5217\u5316\u673a\u5236\u5141\u8bb8\u653b\u51fb\u8005\u6784\u9020\u4e00\u4e2alambda\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u88ab\u4fee\u6539\u7684\u5b57\u8282\u6d41\u6765\u8c03\u7528\u4efb\u610f\u7684\u79c1\u6709\u65b9\u6cd5\u3002\u5e8f\u5217\u5316\u81ea\u7136\u5730\u66b4\u9732\u4e86\u201c\u6784\u9020\u51fd\u6570\u201d(\u51fd\u6570\u63a5\u53e3\u3001\u884c\u4e3a\u65b9\u6cd5\u3001\u6355\u83b7\u7684arg\u7c7b\u578b)\u7684\u7279\u5b9a\u7ec4\u5408;\u901a\u8fc7\u5c06\u5176\u59d4\u6d3e\u56de\u6355\u83b7\u7c7b\uff0c\u5b83\u53ef\u4ee5\u9a8c\u8bc1\u5b57\u8282\u6d41\u5728\u7ee7\u7eed\u4e4b\u524d\u662f\u5426\u4e3a\u4e00\u4e2a\u6709\u6548\u7684\u7ec4\u5408\u3002\u4e00\u65e6\u9a8c\u8bc1\u6210\u529f\uff0c\u5b83\u5c31\u53ef\u4ee5\u901a\u8fc7metafactory\u8c03\u7528\u6784\u9020lambda\uff0c\u5e76\u4f7f\u7528\u5b83\u81ea\u5df1\u7684\u53ef\u8bbf\u95ee\u6027\u6743\u9650\u6765\u52a0\u8f7d\u65b9\u6cd5\u53e5\u67c4\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6355\u83b7\u7c7b\u5e94\u8be5\u6709\u4e00\u4e2a\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u5c42\u8c03\u7528\u7684\u5e2e\u52a9\u65b9\u6cd5\uff0c\u6bd4\u5982\u6709readObject\u3001writeObject\u3001readResolve\u548cwriteReplace\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a$deserialize$(SerializedLambda)\u3002\u5e8f\u5217\u5316\u5c42\u9700\u8981\u7684\u552f\u4e00\u7279\u6743\u64cd\u4f5c\u662f\u8c03\u7528\u8fd9\u4e2a(\u53ef\u80fd\u662f\u79c1\u6709\u7684)\u65b9\u6cd5\u3002\n\u5f53\u7f16\u8bd1\u4e00\u4e2a\u6355\u83b7serializable lambdas\u7684\u7c7b\u65f6\uff0c\u7f16\u8bd1\u5668\u77e5\u9053(\u51fd\u6570\u63a5\u53e3\u3001\u884c\u4e3a\u65b9\u6cd5\u3001\u6355\u83b7\u7684\u53c2\u6570\u7c7b\u578b)\u7684\u7ec4\u5408\u88ab\u6355\u83b7\u4e3a\u53ef\u5e8f\u5217\u5316\u7684lambda\u3002$deserialize$\u65b9\u6cd5\u5e94\u8be5\u53ea\u652f\u6301\u8fd9\u4e9b\u7ec4\u5408\u7684\u53cd\u5e8f\u5217\u5316\u3002\n\u4ee5\u6355\u83b7\u4e24\u4e2a\u53ef\u5e8f\u5217\u5316\u7684lambda\u4e3a\u4f8b:\n\n\nclass Foo {\n    void moo() {\n        SerializableComparator<String> byLength = (a,b) -> a.length() - b.length();\n        SerializablePredicate<String> isEmpty = String::isEmpty;\n        ...\n    }\n}\n\n\n\n\n\u53ef\u4ee5\u8f6c\u6362\u6210\u5982\u4e0b\u5f62\u5f0f\n\n\nclass Foo {\n    void moo() {\n        SerializableComparator<String> byLength\n            = indy(MH(serializableMetafactory), MH(invokeVirtual SerializableComparator.compare),\n                   MH(invokeStatic lambda$1))());\n        SerializablePredicate<String> isEmpty\n            = indy(MH(serializableMetafactory), MH(invokeVirtual SerializablePredicate.apply),\n                   MH(invokeVirtual String.isEmpty)());\n        ...\n    }\n\n    private static int lambda$1(String a, String b) { return a.length() - b.length(); }\n\n    private static $deserialize$(SerializableLambda lambda) {\n        switch(lambda.getImplName()) {\n        case \"lambda$1\":\n            if (lambda.getSamClass().equals(\"com/foo/SerializableComparator\")\n                 && lambda.getSamMethodName().equals(\"compare\")\n                 && lambda.getSamMethodDesc().equals(\"...\")\n                 && lambda.getImpleReferenceKind() == REF_invokeStatic\n                 && lambda.getImplClass().equals(\"com/foo/Foo\")\n                 && lambda.getImplDesc().equals(...)\n                 && lambda.getInvocationDesc().equals(...))\n                     return indy(MH(serializableMetafactory),\n                                 MH(invokeVirtual SerializableComparator.compare),\n                                 MH(invokeStatic lambda$1))(lambda.getCapturedArgs()));\n            break;\n\n        case \"isEmpty\":\n            if (lambda.getSamClass().equals(\"com/foo/SerializablePredicate\"))\n                 && lambda.getSamMethodName().equals(\"apply\")\n                 && lambda.getSamMethodDesc().equals(\"...\")\n                 && lambda.getImpleReferenceKind() == REF_invokeVirtual\n                 && lambda.getImplClass().equals(\"java/lang/String\")\n                 && lambda.getImplDesc().equals(...)\n                 && lambda.getInvocationDesc().equals(...))\n                     return indy(MH(serializableMetafactory),\n                                 MH(invokeVirtual SerializablePredicate.apply),\n                                 MH(invokeVirtual String.isEmpty)(lambda.getCapturedArgs));\n\n            break;\n        }\n        throw new ...;\n    }\n}\n\n\n\n\n$deserialize$\u65b9\u6cd5\u77e5\u9053\u8be5\u7c7b\u6355\u83b7\u4e86\u54ea\u4e9blambda\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u5217\u8868\u4e2d\u68c0\u67e5\u63d0\u4f9b\u7684\u5e8f\u5217\u5316\u5f62\u6001\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u76f8\u540c\u7684\u8c03\u7528\u7ad9\u70b9\u91cd\u6784lambda\uff0c\u5b83\u53ef\u4ee5\u4e0e\u6355\u83b7\u7ad9\u70b9\u5171\u4eab\u76f8\u540c\u7684bootstrap\u7d22\u5f15\u3002(\u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u5b9e\u9645\u6355\u83b7\u7ad9\u70b9\uff0c\u56e0\u6b64\uff0c\u901a\u8fc7\u5c06\u6355\u83b7\u5206\u89e3\u4e3a\u79c1\u6709\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u94fe\u63a5\u72b6\u6001\uff0c\u8fd9\u53ef\u4ee5\u7b80\u5316\u4e0b\u9762\u7684\u7c7b\u7f13\u5b58\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u5982\u679c\u4e00\u4e2a\u8c03\u7528\u8005\u6b3a\u9a97\u6211\u4eec\u53bb\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u6076\u610f\u7684\u5b57\u8282\u6d41\uff0c\u90a3\u4e48\u5b83\u53ea\u4f1a\u4e3a\u90a3\u4e9b\u5b9e\u9645\u4e0a\u662f\u8be5\u7f16\u8bd1\u5355\u5143\u4e2dlambda\u8f6c\u6362\u7684\u76ee\u6807\u7684\u65b9\u6cd5\u5de5\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u5e8f\u5217\u5316\u7684\u5185\u90e8\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u66b4\u9732\u51fa\u6765\u3002\u56e0\u4e3a\u5b83\u4e0e\u63d0\u53d6\u65b9\u6cd5\u5728\u540c\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d\uff0c\u5728\u91cd\u65b0\u7f16\u8bd1\u65f6\u4e0d\u5f15\u5165\u989d\u5916\u7684\u540d\u79f0\u3002\n\u8fd9\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u9002\u7528\u4e8e\u6240\u6709lambda\u4e3b\u4f53\u7684\u63d0\u53d6\u7b56\u7565\u2014\u2014\u5bf9\u53ef\u5e8f\u5217\u5316\u548c\u4e0d\u53ef\u5e8f\u5217\u5316\u7684lambda\u4f7f\u7528\u76f8\u540c\u7684\u7b56\u7565\u3002\u5b83\u80fd\u8ba9\u6240\u6709\u63d0\u53d6lambda body\u4f53\u7684\u79c1\u6709\u5316\uff0c\u6d88\u9664\u4e86\u5bf9sidecar\u7c7b\u6216\u6613\u8bbf\u95ee\u6027\u6865\u63a5\u65b9\u6cd5\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u552f\u4e00\u7684\u7279\u6743\u64cd\u4f5c\u662f$deserialize$\u3002\n\u51cf\u5c11\u66b4\u9732\u5728\u7c7b\u52a0\u8f7d\u7684\u653b\u51fb(\u653b\u51fb\u8005\u521b\u5efa\u4e00\u4e2a\u5e8f\u5217\u5316lambda\u63cf\u8ff0\u7684\u610f\u56fe\u8feb\u4f7f\u7c7b\u52a0\u8f7d\u9759\u6001\u521d\u59cb\u5316\u5668)\uff0c\u6700\u597d\u662f\u7531SerializedLambda\u63a5\u53e3\u5904\u7406\u6240\u6709\u7684\u6807\u8bc6\u7b26\u7684\u7c7b\u540d,\u800c\u975e\u7c7b\u5bf9\u8c61\u3002\n\n\n5.2/ \u7c7b\u7f13\u5b58(Class caching)\n\n\n\u5728\u4e00\u4e9b\u8f6c\u5316\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u751f\u6210\u65b0\u7c7b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u4e3a\u6bcf\u4e00\u4e2alambda\u751f\u6210\u4e00\u4e2a\u7c7b(\u5728\u8fd0\u884c\u65f6\u800c\u4e0d\u662f\u7f16\u8bd1\u65f6\u7684\u5185\u90e8\u7c7b)\uff0c\u6211\u4eec\u5c06\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u7ed9\u5b9a\u7684lambda\u5de5\u5382\u7ad9\u70b9\u65f6\u751f\u6210\u8be5\u7c7b\uff0c\u6b64\u540e\u5bf9\u8be5lambda\u5de5\u5382\u7ad9\u70b9\u7684\u8c03\u7528\u5c06\u91cd\u7528\u7b2c\u4e00\u6b21\u8c03\u7528\u751f\u6210\u7684\u7c7b\u3002\n\u5bf9\u4e8e\u53ef\u5e8f\u5217\u5316\u7684lambda\uff0c\u53ef\u4ee5\u89e6\u53d1\u7c7b\u751f\u6210\u7684\u4e24\u4e2a\u70b9:\u6355\u83b7\u7ad9\u70b9\uff0c\u4ee5\u53ca\u5728$deserialize$\u4ee3\u7801\u4e2d\u5bf9\u5e94\u7684\u5de5\u5382\u7ad9\u70b9\u3002\u65e0\u8bba\u54ea\u6761\u79cd\u88ab\u89e6\u53d1\uff0c\u90fd\u662f\u53ef\u53d6\u7684(\u5c3d\u7ba1\u4e0d\u662f\u5fc5\u9700\u7684)\uff0c\u901a\u8fc7\u4efb\u4e00\u8def\u5f84\u751f\u6210\u7684\u5bf9\u8c61\u90fd\u5177\u6709\u76f8\u540c\u7684\u7c7b\uff0c\u8fd9\u9700\u8981\u6bcf\u4e2alambda\u6355\u83b7\u7684\u552f\u4e00\u5bc6\u94a5\uff0c\u4ee5\u53ca\u5728\u4e24\u4e2a\u6355\u83b7\u7ad9\u70b9\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u7ed9\u5b9aserializable lambda\u7684\u7f13\u5b58\u3002\n\n\nclass SerializationExperiment {\n    interface Foo extends Serializable { int m(); }\n\n    public static void main(String[] args) {\n        Foo f1, f2;\n        if (args[0].equals(\"r\")) {\n            // read file 'foo.ser' and deserialize into f1\n        }\n\n        f2 = () -> 3;\n\n        if (args[0].equals(\"w\")) {\n            // serialize f2 and write into file 'foo.ser'\n            // read file 'foo.ser' and deserialize into f1\n        }\n\n        assert f1.getClass() == f2.getClass();\n    }\n}\n\n\n\n\n\u5982\u679c\u5c06\u4e0a\u9762\u8fd9\u6bb5\u7a0b\u5e8f\u8fd0\u884c\u4e24\u6b21\uff1a\n\n\njava -ea SerializationExperiment w\njava -ea SerializationExperiment r\n\n\n\n\n\u5982\u679c\u8fd0\u884c\u662f\u6210\u529f\u7684\uff0c\u65e0\u8bba\u662f\u7b2c\u4e00\u6b21\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u8fd8\u662f\u7b2c\u4e00\u6b21\u8c03\u7528metafactory\uff0c\u90fd\u662f\u53ef\u53d6\u7684.\n\n\n5.3. \u6027\u80fd\u5f71\u54cd(Performance impact)\n\n\nSerializability\u5728lambdas\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u5f00\u9500\uff0c\u56e0\u4e3alambda\u5bf9\u8c61\u9700\u8981\u643a\u5e26\u8db3\u591f\u7684\u72b6\u6001\u6765\u6709\u6548\u5730\u91cd\u65b0\u521b\u5efametafactory\u7684\u9759\u6001\u548c\u52a8\u6001\u53c2\u6570\u5217\u8868\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5b9e\u73b0\u7c7b\u4e2d\u7684\u989d\u5916\u5b57\u6bb5\u3001\u989d\u5916\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5de5\u4f5c\u4ee5\u53ca\u5bf9\u8f6c\u5316\u7b56\u7565\u7684\u7ea6\u675f(\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u65b9\u6cd5\u5904\u7406\u4ee3\u7406\uff0c\u56e0\u4e3a\u7ed3\u679c\u5bf9\u8c61\u4e0d\u4f1a\u5b9e\u73b0\u6240\u9700\u7684writeReplace\u65b9\u6cd5)\u3002\u56e0\u6b64\uff0c\u6700\u597d\u5355\u72ec\u5bf9\u5f85\u5e8f\u5217\u5316lambda\uff0c\u800c\u4e0d\u662f\u8ba9\u6240\u6709\u7684lambdas\u5e8f\u5217\u5316\u4ee5\u53ca\u5c06\u8fd9\u4e9b\u5f00\u9500\u5f3a\u52a0\u4e8e\u6240\u6709\u7684lambda\u8868\u8fbe\u5f0f\u3002\n\n\n6. \u5176\u4ed6(Miscellaneous)\n\n\n6.1. \u6865\u63a5\u65b9\u6cd5\n\n\n\u51fd\u6570\u5f0f\u63a5\u53e3\u5b9e\u9645\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u975e\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u6709\u6865\u63a5\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u529f\u80fd\u63a5\u53e3B\u4e2d:\n\n\ninterface A<T> { void m(T t); }\ninterface B extends A<String> { void m(String s); }\n\n\n\n\nB\u7684\u4e3b\u8981\u65b9\u6cd5\u662fm(String)\uff0c\u4f46\u662fB\u4e5f\u6709\u4e00\u4e2a\u65b9\u6cd5m(Object)\uff0c\u5b83\u662fm(String)\u7684\u6865\u63a5\u65b9\u6cd5\u3002(\u5982\u679c\u5c06B\u8f6c\u6362\u4e3aA\uff0c\u5e76\u5728\u7ed3\u679c\u4e0a\u8c03\u7528m\uff0c\u5219\u8c03\u7528\u5c06\u5931\u8d25\u3002)\n\u5f53\u6211\u4eec\u5c06lambda\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3(\u5982 B)\u7684\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u6240\u6709\u7684\u6865\u63a5\u65b9\u6cd5\u90fd\u6b63\u786e\u5730\u8fde\u63a5\u5230\u4e3b\u65b9\u6cd5\uff0c\u5e76\u4f7f\u7528\u9002\u5f53\u7684\u53c2\u6570\u6216\u8fd4\u56de\u7c7b\u578b\u9002\u5e94(casting)\u3002\u901a\u8fc7\u6076\u610f\u7684\u5b57\u8282\u7801\u751f\u6210\u6216\u5355\u72ec\u7684\u7f16\u8bd1\u5de5\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u5728\u7f16\u8bd1\u65f6\u4e0d\u5b58\u5728\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u989d\u5916\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528MethodHandleProxy\u6240\u91c7\u53d6\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u6267\u884c\u5b8c\u6574\u7684JLS\u6865\u63a5\u8ba1\u7b97\u7b97\u6cd5\u548c\u6865\u63a5\u7a0b\u5e8f\uff0c\u5b83\u5c06\u4ee5\u76f8\u540c\u7684\u540d\u79f0\u548c\u65b9\u5f0f\u5c06\u6240\u6709\u65b9\u6cd5\u4e0e\u4e3b\u65b9\u6cd5\u8fde\u63a5\u8d77\u6765\u3002(\u5982\u679c\u53d1\u73b0\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u90fd\u4e0e\u4e3b\u65b9\u6cd5\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u65f6\u5c06\u51fa\u73b0ClassCastException\uff0c\u8fd9\u53ea\u6bd4\u5c06\u4f1a\u629b\u51fa\u7684\u94fe\u63a5\u9519\u8bef\u4fe1\u606f\u7a0d\u5fae\u5c11\u4e00\u4e9b\u3002)\u6211\u4eec\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u5728metafactory\u4e2d\u5305\u542b\u4e00\u4e2a\u5df2\u77e5\u7684\u6709\u6548\u7684\u7f16\u8bd1\u65f6\u6865\u63a5\u7b7e\u540d\u7684\u5217\u8868\uff0c\u4f46\u662f\u8fd9\u4f1a\u589e\u52a0\u7c7b\u6587\u4ef6\u7684\u5927\u5c0f\u3002\n\n\n6.2. toString\n\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9lambda\u5bf9\u8c61\u7684toString\u65b9\u6cd5\u662f\u4eceObject\u7ee7\u627f\u800c\u6765\u7684\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u516c\u5171\u975e\u5408\u6210\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528\uff0c\u53ef\u80fd\u5e0c\u671b\u7528\u5b9e\u73b0\u65b9\u6cd5\u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u540d\u79f0\u6765\u5b9e\u73b0toString\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eString::size\u8f6c\u6362\u4e3aIntFn\uff0c\u6211\u8ba9toString\u8fd4\u56deString::size()\uff0c java.lang.String::size()\uff0c String::size()\u4e3aIntFn\uff0c\u7b49\u7b49\u3002\nTODO:\u5982\u679c\u6211\u4eec\u652f\u6301lambda\u7684\u7406\u5ff5\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5c06toString\u7ed3\u679c\u4ece\u540d\u79f0\u4e2d\u6d3e\u751f\u51fa\u6765\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u540d\u79f0\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f20\u5165metafactory\u3002",
            "title": "lambda\u539f\u7406\u7bc7(\u8bd1)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#lambda",
            "text": "\u65f6\u95f4: 2018\u5e743\u67087\u65e5   \u65e0\u5b83\uff0c\u8bd1\u4e4b\u5907\u5b66\u3002  \u8bd1\u6e90\u4f20\u9001\u95e8",
            "title": "lambda\u8868\u8fbe\u5f0f\u539f\u7406\u7bc7(\u8bd1)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#1",
            "text": "\u672c\u6587\u6982\u8ff0\u4e86\u5c06lambda\u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528\u4eceJava\u6e90\u4ee3\u7801\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u7684\u7b56\u7565\u3002lambda\u8868\u8fbe\u5f0f\u5728  JSR 335  \u8fdb\u884c\u4e86\u8be6\u7ec6\u8bf4\u660e\u5e76\u4e14\u5728Lambda\u7684  OpenJDK \u4e2d\u5f97\u4ee5\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728 \u300a State of the Lambda \u300b \u4e00\u6587\u4e2d\u5bf9\u8be5\u8bed\u8a00\u7279\u6027\u6709\u4e00\u4e2a\u6574\u4f53\u8ba4\u8bc6\u3002\u672c\u6587\u5c06\u4e3b\u8981\u5206\u6790\u7f16\u8bd1\u5668\u5728\u9047\u5230lambda\u8868\u8fbe\u5f0f\u65f6\u8981\u5982\u4f55\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u4ee5\u53cajava\u8fd0\u884c\u65f6\u5982\u4f55\u53c2\u4e0e\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\uff0c\u6587\u4e2d\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4f1a\u6d89\u53ca\u5230\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8f6c\u6362\u673a\u5236\u3002  \u51fd\u6570\u5f0f\u63a5\u53e3\u662fjava\u7684lambda\u8868\u8fbe\u5f0f\u7684\u91cd\u8981\u9879\uff0c\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u5305\u542b\u4e00\u4e2anon-Object(\u975e\u5bf9\u8c61)\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1aRunnable\u3001Comparator\u7b49(java\u5e93\u5e38\u7528\u8fd9\u4e9b\u63a5\u53e3\u8fdb\u884c\u56de\u8c03\u64cd\u4f5c)\u3002  lambda\u8868\u8fbe\u5f0f\u53ea\u80fd\u51fa\u73b0\u5728\u5b83\u4eec\u5c06\u88ab\u5206\u914d\u7ed9\u7c7b\u578b\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u53d8\u91cf\u7684\u5730\u65b9\uff0c\u5982\uff1a  Runnable r = () -> { System.out.println(\"hello\"); };  \u6216\u8005  Collections.sort(strings, (String a, String b) -> -(a.compareTo(b)));  \u7f16\u8bd1\u5668\u751f\u6210\u7528\u4e8e\u6355\u83b7\u8fd9\u4e9blambda\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u662f\u4f9d\u8d56\u8868\u8fbe\u5f0f\u672c\u8eab\uff0c\u4ee5\u53ca\u4e3a\u5176\u5206\u914d\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u7c7b\u578b",
            "title": "1. \u5173\u4e8e"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#11",
            "text": "\u8f6c\u5316\u6a21\u5f0f\u4f9d\u8d56\u4e8e JSR-292 ]\u4e2d\u6240\u5b9a\u4e49\u7684\u51e0\u4e2a\u7279\u6027\uff0c\u5305\u62ecinvokedynamic\uff0c\u65b9\u6cd5\u53e5\u67c4\u4ee5\u53caLDC\u5b57\u8282\u7801\u7684\u589e\u5f3a\u5f62\u6001\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u6027\u5728java\u4e2d\u662f\u4e0d\u53ef\u63cf\u8ff0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u4f2a\u4ee3\u7801\u6765\u8fdb\u884c\u8bf4\u660e\uff1a   \u65b9\u6cd5\u53e5\u67c4\u5e38\u91cf\uff1a MH([refKind] class-name.method-name)  \u65b9\u6cd5\u7c7b\u578b\u5e38\u91cf\uff1a MT(method-signature)  invokedynamic\uff1aINDY((bootstrap, static args...)(dynamic args...))   \u8bfb\u8005\u4eec\u5e94\u8be5\u5bf9 JSR-292 \u7684\u7279\u6027\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\uff0c\u8f6c\u6362\u6a21\u5f0f\u8fd8\u5047\u8bbe\u4e86\u4e00\u4e2a\u65b0\u7279\u6027\uff0c\u5b83\u6b63\u5728\u7531 JSR-292 \u4e13\u5bb6\u7ec4\u4e3aJava SE8\u6307\u5b9a:\u4e00\u4e2a\u7528\u4e8e\u5bf9\u5e38\u91cf\u65b9\u6cd5\u5904\u7406\u7684\u53cd\u5c04\u7684API\u3002",
            "title": "1.1. \u4f9d\u8d56\u548c\u7b26\u53f7"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#2",
            "text": "\u80fd\u591f\u5c06lambda\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u5b57\u8282\u6d41\u7684\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u7c7b\u4f3c\u4e8e\u5185\u90e8\u7c7b\u3001\u65b9\u6cd5\u53e5\u67c4\u3001\u52a8\u6001\u4ee3\u7406\u7b49\u3002\u5f53\u7136\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u6709\u5229\u6709\u5f0a\uff0c\u5728\u9009\u62e9\u7b56\u7565\u65f6\uff0c\u6709\u4e24\u4e2a\u76f8\u4e92\u5236\u7ea6\u7684\u76ee\u6807:\u901a\u8fc7\u4e0d\u63d0\u4ea4\u7279\u5b9a\u7b56\u7565\u3001\u5728\u7c7b\u6587\u4ef6\u8868\u793a\u4e2d\u63d0\u4f9b\u7a33\u5b9a\u6027\u6765\u6700\u5927\u5316\u4ee5\u540e\u4f18\u5316\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 JSR-292 \u7684invokedynamic\u7279\u6027\u6765\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u76ee\u6807\uff0c\u4ece\u800c\u5c06\u5b57\u8282\u7801\u4e2dlambda\u521b\u5efa\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e0e\u5728\u8fd0\u884c\u65f6\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\u7684\u673a\u5236\u5206\u79bb\u5f00\u6765\u3002\u6211\u4eec\u4e0d\u662f\u751f\u6210\u5b57\u8282\u7801\u6765\u521b\u5efa\u5b9e\u73b0lambda\u8868\u8fbe\u5f0f\u7684\u5bf9\u8c61(\u6bd4\u5982\u8c03\u7528\u5185\u90e8\u7c7b\u7684\u6784\u9020\u5668)\uff0c\u800c\u662f\u63cf\u8ff0\u6784\u9020lambda\u7684\u65b9\u6cd5\uff0c\u5e76\u5c06\u5b9e\u9645\u7684\u6784\u5efa\u59d4\u6258\u7ed9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6765\u5b8c\u6210\u3002\u8be5\u65b9\u6cd5\u5728invokedynamic\u6307\u4ee4\u7684\u9759\u6001\u548c\u52a8\u6001\u53c2\u6570\u5217\u8868\u4e2d\u8fdb\u884c\u7f16\u7801\u3002  \u4f7f\u7528invokedynamic\u53ef\u4ee5\u63a8\u8fdf\u8f6c\u5316\u7b56\u7565\u7684\u9009\u62e9\u81f3\u8fd0\u884c\u65f6\uff0c\u8fd0\u884c\u65f6\u5b9e\u73b0\u53ef\u4ee5\u81ea\u7531\u5730\u9009\u62e9\u7b56\u7565\u6765\u8bc4\u4f30lambda\u8868\u8fbe\u5f0f\u3002\u8fd0\u884c\u65f6\u5b9e\u73b0\u9009\u62e9\u9690\u85cf\u5728\u6807\u51c6\u5316(\u5373\u5e73\u53f0\u89c4\u8303\u7684\u4e00\u90e8\u5206)\u7528\u4e8elambda\u7ed3\u6784\u7684API\uff0c\u8fd9\u6837\u9759\u6001\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u53d1\u51fa\u5bf9\u8fd9\u4e2aAPI\u7684\u8c03\u7528\uff0cJRE\u7684\u5b9e\u73b0\u53ef\u4ee5\u9009\u62e9\u5b83\u4eec\u7684\u9996\u9009\u7b56\u7565\u3002invokedynamic\u673a\u5236\u5141\u8bb8\u5728\u6ca1\u6709\u8fd9\u79cd\u5ef6\u8fdf\u7ed1\u5b9a\u65b9\u6cd5\u4e14\u53ef\u80fd\u589e\u52a0\u6027\u80fd\u6210\u672c\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002  \u5f53\u7f16\u8bd1\u5668\u9047\u5230lambda\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5148\u5c06\u8be5\u8868\u8fbe\u5f0f\u7684body\u4f53\u5f31\u5316(\u63d0\u53d6)\u4e3a\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b\u540clambda\u8868\u8fbe\u5f0f\u7684\u76f8\u5339\u914d\uff0c\u53ef\u80fd\u4f1a\u9644\u5e26\u4e00\u4e9b\u53c2\u6570(\u7528\u4e8e\u4ece\u8bcd\u6cd5\u4f5c\u7528\u57df\u5185\u6355\u83b7\u503c)\uff0c\u5f53lambda\u8868\u8fbe\u5f0f\u88ab\u6355\u83b7\u65f6\uff0c\u5c06\u4ea7\u751f\u4e00\u4e2ainvokedynamic\u8c03\u7528\u7ad9\u70b9\uff0c\u5f53\u88ab\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7531lambda\u8f6c\u6362\u6210\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8c03\u7528\u7ad9\u70b9\u79f0\u4e3alambda\u5de5\u5382\u3002lambda\u5de5\u5382\u7684\u52a8\u6001\u53c2\u6570\u662f\u4ece\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u83b7\u6355\u83b7\u5230\u7684\u503c\uff0clambda\u5de5\u5382\u7684\u542f\u52a8\u65b9\u6cd5\u662fjava\u8fd0\u884c\u65f6\u5e93\u4e2d\u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u53eb\u505alambda metafactory(lambda\u5143\u5de5\u5382)\uff0c\u9759\u6001\u5f15\u5bfc\u53c2\u6570\u5728\u7f16\u8bd1\u65f6\u6355\u83b7\u5173\u4e8elambda\u7684\u4fe1\u606f(\u5b83\u5c06\u88ab\u8f6c\u6362\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5bf9desugared lambda\u4f53\u7684\u65b9\u6cd5\u53e5\u67c4\uff0c\u4ee5\u53ca\u5173\u4e8eSAM\u7c7b\u578b\u662f\u5426\u53ef\u5e8f\u5217\u5316\u7b49\u4fe1\u606f)\u3002  \u65b9\u6cd5\u5f15\u7528\u4e0elambda\u8868\u8fbe\u5f0f\u7684\u5904\u7406\u65b9\u5f0f\u76f8\u540c\uff0c\u4f46\u5927\u591a\u6570\u65b9\u6cd5\u5f15\u7528\u4e0d\u9700\u8981\u88ab\u5230\u4e00\u4e2a\u65b0\u65b9\u6cd5\u91cc;\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4e3a\u5f15\u7528\u7684\u65b9\u6cd5\u52a0\u8f7d\u4e00\u4e2a\u5e38\u91cf\u65b9\u6cd5\u53e5\u67c4\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9metafactory\u3002",
            "title": "2. \u8f6c\u5316\u7b56\u7565"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#3-lambda-body",
            "text": "\u5c06lambdas\u8f6c\u6362\u4e3a\u5b57\u8282\u7801\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5c06lambda\u4f53\u63d0\u53d6\u4e3a\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5173\u4e8e\u63d0\u53d6\u6709\u5982\u4e0b\u51e0\u70b9\u9009\u62e9:   \u63d0\u53d6\u6210\u9759\u6001\u65b9\u6cd5\u6216\u662f\u5b9e\u4f8b\u65b9\u6cd5?  \u5e94\u8be5\u63d0\u53d6\u90a3\u513f\u7c7b?  \u63d0\u53d6\u65b9\u6cd5\u7684\u53ef\u8bbf\u95ee\u6027\u5982\u4f55?  \u63d0\u53d6\u65b9\u6cd5\u5e94\u5982\u4f55\u547d\u540d?  \u5982\u679c\u9700\u8981\u9002\u914dlambda body\u7b7e\u540d\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u65b9\u6cd5\u7b7e\u540d\u4e4b\u95f4\u7684\u5dee\u5f02(\u6bd4\u5982\u88c5\u7bb1\u3001\u5f00\u7bb1\u3001\u539f\u59cb\u6269\u5c55\u6216\u6536\u7f29\u8f6c\u6362\u3001\u53d8\u91cf\u8f6c\u6362\u7b49)\uff0c\u90a3\u4e48\u63d0\u53d6\u65b9\u6cd5\u5e94\u8be5\u9075\u5faalambda body\u4f53\u7684\u7b7e\u540d\u3001\u51fd\u6570\u5f0f\u63a5\u53e3\u7b7e\u540d\u6291\u6216\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4?\u7531\u8c01\u8d1f\u8d23\u8be5\u9002\u914d\u6027\u5de5\u4f5c?  \u5982\u679clambda\u6355\u83b7\u4e86\u95ed\u5305\u4f5c\u7528\u57df\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u5728\u63d0\u53d6\u65b9\u6cd5\u7b7e\u540d\u4e2d\u5e94\u8be5\u5982\u4f55\u8868\u793a?(\u5b83\u4eec\u53ef\u4ee5\u662f\u6dfb\u52a0\u5230\u53c2\u6570\u5217\u8868\u7684\u5f00\u59cb\u6216\u7ed3\u675f\u7684\u5355\u72ec\u7684\u53c2\u6570\uff0c\u6216\u8005\u7f16\u8bd1\u5668\u53ef\u4ee5\u5c06\u5b83\u4eec\u6536\u96c6\u5230\u4e00\u4e2a\u201c\u6846\u67b6\u201d\u53c2\u6570\u4e2d\u3002)   \u4e0e\u63d0\u53d6lambda\u4f53\u7684\u95ee\u9898\u76f8\u5173\u7684\u662f\uff0c\u65b9\u6cd5\u5f15\u7528\u662f\u5426\u9700\u8981\u9002\u914d\u5668\u6216\u6865\u63a5\u5668\u65b9\u6cd5\u7684\u751f\u6210\u3002  \u7f16\u8bd1\u5668\u80fd\u591f\u4e3alambda\u8868\u8fbe\u5f0f\u63a8\u5bfc\u65b9\u6cd5\u7b7e\u540d\uff0c\u5305\u62ec\u53c2\u6570\u7c7b\u578b\u3001\u8fd4\u56de\u7c7b\u578b\u4ee5\u53ca\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u79f0\u4e3a\u81ea\u7136\u7b7e\u540d(natural signature)\uff0cLambda\u8868\u8fbe\u5f0f\u6709\u4e00\u4e2a\u76ee\u6807\u7c7b\u578b\uff0c\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3;\u6211\u4eec\u5c06\u4e3a\u64e6\u9664\u4e86\u76ee\u6807\u7c7b\u578b\u7684\u63cf\u8ff0\u7b26\u8c03\u7528lambda\u63cf\u8ff0\u7b26\u7684\u65b9\u6cd5\u7b7e\u540d\u3002lambda\u5de5\u5382\u8fd4\u56de\u7684\u503c\u88ab\u79f0\u4e3alambda\u5bf9\u8c61\uff0c\u5b83\u5b9e\u73b0\u4e86\u51fd\u6570\u5f0f\u63a5\u53e3\u5e76\u6355\u83b7\u4e86lambda\u884c\u4e3a\u3002  \u5728\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u79c1\u6709\u65b9\u6cd5\u662f\u4f18\u4e8e\u975e\u79c1\u6709\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u4f18\u4e8e\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u5982\u679clambda body\u4f53\u63d0\u53d6\u5230\u5185\u90e8\u7c7b\uff0c\u65b9\u6cd5\u7b7e\u540d\u5e94\u5f53\u5339\u914dlambda body\u7684\u7b7e\u540d\uff0c\u989d\u5916\u7684\u53c2\u6570\u5e94\u7f6e\u4e8e\u53c2\u6570\u5217\u8868\u4e2d\u88ab\u6355\u83b7\u7684\u503c\u524d\u9762\uff0c\u65e0\u9700\u63d0\u53d6\u65b9\u6cd5\u5f15\u7528\u3002\u7136\u800c\uff0c\u4e5f\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u504f\u79bb\u8fd9\u4e2a\u57fa\u7ebf\u7b56\u7565\u3002",
            "title": "3. \u63d0\u53d6 lambda body"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#31-lambda",
            "text": "lambda\u8868\u8fbe\u5f0f\u7684\u6700\u7b80\u5355\u5f62\u5f0f\u662f\u4ece\u5b83\u7684\u5c01\u95ed\u4f5c\u7528\u57df(\u65e0\u72b6\u6001\u7684lambda)\u4e2d\u6355\u83b7\u4efb\u4f55\u72b6\u6001:  class A {\n    public void foo() {\n        List<String> list = ...\n        list.forEach( s -> { System.out.println(s); } );\n    }\n}  lambda\u81ea\u7136\u7b7e\u540d(String)V,forEach\u65b9\u6cd5\u4f7f\u7528\u4e00\u4e2aBlock ,\u5176lambda\u63cf\u8ff0\u7b26\u4e3a(Object)V,\u7f16\u8bd1\u5668\u5c06lambda\u4f53\u63d0\u53d6\u4e3a\u81ea\u7136\u7b7e\u540d\u7684\u9759\u6001\u65b9\u6cd5\u5e76\u4e3a\u62bd\u53d6body\u4f53\u751f\u6210\u65b9\u6cd5\u540d\u3002  class A {\n    public void foo() {\n        List<String> list = ...\n        list.forEach( [lambda for lambda$1 as Block] );\n    }\n\n    static void lambda$1(String s) {\n        System.out.println(s);\n    }\n}",
            "title": "3.1. \u63d0\u53d6\u793a\u4f8b--\u201c\u65e0\u72b6\u6001\u201d lambda"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#32-lambdas",
            "text": "lambda\u8868\u8fbe\u5f0f\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\u662f\u6355\u83b7\u5305\u542bfinal\u7c7b\u578b\u7684(\u6216\u6709\u6548\u7684\u6700\u7ec8)\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u53ca\u6765\u81ea\u5c01\u95ed\u5b9e\u4f8b\u7684\u5b57\u6bb5(\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u5bf9this\u7684\u6355\u83b7)\u3002  class B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf( p -> (p.size >= bottom && p.size <= top) );\n    }\n}  lambda\u4ece\u5c01\u95ed\u4f5c\u7528\u57df\u5185\u6355\u83b7final\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cfbottom\u548ctop\u3002  \u63d0\u53d6\u65b9\u6cd5\u7684\u7b7e\u540d\u5c06\u662f\u81ea\u7136\u7b7e\u540d(Person)Z\uff0c\u5176\u989d\u5916\u53c2\u6570\u5728\u53c2\u6570\u5217\u8868\u7684\u6700\u524d\u9762\u3002\u7f16\u8bd1\u5668\u4f1a\u8003\u8651\u5c06\u8fd9\u4e9b\u989d\u5916\u7684\u53c2\u6570\u8fdb\u884c\u4f55\u79cd\u5448\u73b0;\u5b83\u4eec\u53ef\u4ee5\u5355\u72ec\u9884\u7f6e\uff0c\u88c5\u5165\u6846\u67b6\u7c7b\uff0c\u6216\u88c5\u5165\u4e00\u4e2a\u6570\u7ec4\u7b49\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5206\u522b\u5bf9\u5b83\u4eec\u8fdb\u884c\u9884\u5904\u7406:  class B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf( [ lambda for lambda$1 as Predicate capturing (bottom, top) ]);\n    }\n\n    static boolean lambda$1(int bottom, int top, Person p) {\n        return (p.size >= bottom && p.size <= top;\n    }\n}  \u76f8\u53cd\uff0c\u6355\u83b7\u7684\u503c(bottom\u548ctop)\u53ef\u4ee5\u88ab\u88c5\u5165\u6846\u67b6\u6216\u6570\u7ec4\u4e2d;\u5173\u952e\u662f\u9700\u8981\u4fdd\u6301\u6240\u63d0\u53d6\u7684lambda\u65b9\u6cd5\u7b7e\u540d\u4e2d\u51fa\u73b0\u7684\u989d\u5916\u53c2\u6570\u7684\u7c7b\u578b\u548c\u5b83\u4eec\u4f5c\u4e3a(\u52a8\u6001\u7684)\u53c2\u6570\u663e\u793a\u7ed9lambda\u5de5\u5382\u7684\u7c7b\u578b\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002\u7531\u4e8e\u7f16\u8bd1\u5668\u63a7\u5236\u4e86\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u4eec\u540c\u65f6\u751f\u6210\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5728\u5982\u4f55\u6253\u5305\u6355\u83b7\u53c2\u6570\u65b9\u9762\u5177\u6709\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u3002",
            "title": "3.2. \u63d0\u53d6\u5b9e\u4f8b\u2014\u2014lambdas\u6355\u83b7\u4e0d\u53ef\u53d8\u7684\u503c"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#4-lambda-metafactory",
            "text": "lambda\u7684\u6355\u83b7\u7531invokedynamic\u8c03\u7528\u7ad9\u70b9\u5b9e\u73b0\uff0c\u5176\u9759\u6001\u53c2\u6570\u63cf\u8ff0\u4e86lambda body\u4f53\u4ee5\u53ca\u88ab\u6355\u83b7\u5230\u7684\u52a8\u6001\u53c2\u6570\u503c\u7684\u7279\u5f81\uff0c\u5f53\u88ab\u8c03\u7528\u65f6\uff0c\u8fd9\u4e2a\u8c03\u7528\u7ad9\u70b9\u5c06\u8fd4\u56de\u4e00\u4e2alambda\u5bf9\u8c61\uff0c\u4ee5\u5bf9\u5e94lambda\u7684body\u4f53\u3001\u63cf\u8ff0\u7b26\u548c\u7ed1\u5b9a\u6355\u83b7\u7684\u503c\uff0c\u8c03\u7528\u7ad9\u70b9\u542f\u52a8\u65b9\u6cd5\u79f0\u4e4b\u4e3a\u5143\u5de5\u5382\uff08\u53ef\u4ee5\u6709\u4e00\u4e2a\u9002\u5e94\u4e8e\u6574\u4e2alambda\u5f62\u6001\u7684\u5355\u72ec\u7684metafactory\uff0c\u6216\u8005\u5bf9\u5e38\u89c1\u7684\u60c5\u51b5\u6709\u4e13\u95e8\u7684\u7248\u672c\uff09\uff0cVM\u9488\u5bf9\u7f8e\u56fd\u8c03\u7528\u70b9\u4ec5\u8c03\u7528\u4e00\u6b21metafactory\uff0c\u7136\u540e\u4f1a\u8fde\u63a5\u8be5\u8c03\u7528\u70b9\u5e76\u79bb\u5f00\uff0c\u8c03\u7528\u70b9\u90fd\u662f\u5ef6\u8fdf\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u8c03\u7528\u7684\u8bdd\u5c31\u4e0d\u4f1a\u8fde\u63a5\uff0cmetafactory\u7684\u9759\u6001\u53c2\u6570\u5217\u8868\u5982\u4e0b\uff1a  metaFactory(MethodHandles.Lookup caller, // provided by VM\n            String invokedName,          // provided by VM\n            MethodType invokedType,      // provided by VM\n            MethodHandle descriptor,     // lambda descriptor\n            MethodHandle impl)           // lambda body  \u524d\u4e09\u4e2a\u53c2\u6570\uff08caller, invokeName, invokeType\uff09\u5728callsite\u94fe\u63a5\u4e2d\u88abVM\u81ea\u52a8\u5806\u53e0\uff1bdescriptor\u5b9a\u4e49\u4e86\u88ab\u8f6c\u6362lambda\u5bf9\u5e94\u7684\u51fd\u6570\u5f0f\u63a5\u53e3(\u901a\u8fc7\u65b9\u6cd5\u53e5\u67c4\u7684\u53cd\u5c04API\uff0cmetafactory\u80fd\u591f\u83b7\u53d6\u5230\u51fd\u6570\u5f0f\u63a5\u53e3\u7684class\u7c7b\u3001\u540d\u5b57\u4ee5\u53ca\u4e3b\u8981\u65b9\u6cd5\u7684\u7b7e\u540d)\uff1bimpl\u6807\u8bc6lambda\u65b9\u6cd5\uff0c\u53ef\u80fd\u662flambda body\u4f53\u65b9\u6cd5\u6216\u662f\u88ab\u547d\u540d\u7684\u65b9\u6cd5\u5f15\u7528\u3002  \u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u65b9\u6cd5\u7b7e\u540d\u548c\u5b9e\u73b0\u65b9\u6cd5\u4e4b\u95f4\u5177\u6709\u5dee\u5f02\u6027\uff0c\u5b9e\u73b0\u65b9\u6cd5\u6709\u4e00\u4e9b\u5f53\u524d\u88ab\u6355\u83b7\u5230\u503c\u7684\u989d\u5916\u53c2\u6570\uff0c\u5176\u4f59\u7684\u53c2\u6570\u4e5f\u53ef\u80fd\u4e0d\u5b8c\u5168\u5339\u914d\uff1b\u4e00\u4e9b\u4f8b\u5982(\u5b50\u7c7b\u578b\uff0c\u88c5\u7bb1)\u5728\u9002\u5e94\u4e2d\u662f\u5141\u8bb8\u7684\u3002",
            "title": "4. lambda \u5143\u5de5\u5382(Metafactory)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#41-lambda",
            "text": "\u63a5\u4e0b\u6765\u4ecb\u7ecdlambda\u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528\u5411\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u8f6c\u5316\uff0c\u8f6c\u5316\u793a\u4f8bclass A\u5982\uff1a  class A {\n    public void foo() {\n            List<String> list = ...\n            list.forEach(indy((MH(metaFactory), MH(invokeVirtual Block.apply),\n                               MH(invokeStatic A.lambda$1)( )));\n        }\n\n    private static void lambda$1(String s) {\n        System.out.println(s);\n    }\n}  \u56e0\u4e3alambda\u5728A\u4e2d\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6240\u4ee5lambda\u5de5\u5382\u7ad9\u70b9\u7684\u52a8\u6001\u53c2\u6570\u5217\u8868\u662f\u7a7a\u7684\uff0c\u5982\u793a\u4f8b B\uff0c\u52a8\u6001\u53c2\u6570\u5217\u8868\u4e0d\u662f\u7a7a\u7684\uff0c\u56e0\u4e3a\u5fc5\u987b\u4e3alambda\u5de5\u5382\u63d0\u4f9b\u53c2\u6570bottom\u548ctop\u7684\u503c\uff1a  class B {\n    public void foo() {\n        List<Person> list = ...\n        final int bottom = ..., top = ...;\n        list.removeIf(indy((MH(metaFactory), MH(invokeVirtual Predicate.apply),\n                            MH(invokeStatic B.lambda$1))( bottom, top ))));\n    }\n\n    private static boolean lambda$1(int bottom, int top, Person p) {\n        return (p.size >= bottom && p.size <= top;\n    }\n}",
            "title": "4.1. \u6355\u83b7 lambda"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#42-vs",
            "text": "\u7c7b\u4f3c\u4e8e\u4e0a\u8ff0\u7684lambda\u80fd\u591f\u8f6c\u6362\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\u5c01\u88c5\u5bf9\u8c61\u5b9e\u4f8b(this\u3001super\u6216\u5c01\u95ed\u5b9e\u4f8b\u7684\u6210\u5458)\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u5f15\u7528\u4f7f\u7528this\u3001super\u6216\u6355\u83b7\u5c01\u95ed\u5b9e\u4f8b\u6210\u5458\u7684lambdas\u4f5c\u4e3a\u5b9e\u4f8b\u6355\u83b7(instance-capturing) lambdas\u3002\u975e\u5b9e\u4f8b\u6355\u83b7(non-instance-capturing)\u7684lambdas\u88ab\u8f6c\u6362\u4e3a\u9759\u6001\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u6355\u83b7\u7684lambda\u5c06\u88ab\u8f6c\u6362\u4e3a\u79c1\u6709\u65b9\u6cd5\uff0c\u8fd9\u7b80\u5316\u53efinstance-capturing lambdas\u7684\u63d0\u53d6\uff0c\u56e0\u4e3alambda body\u4f53\u4e2d\u7684\u540d\u5b57\u548cdesugared\u65b9\u6cd5\u7684\u540d\u79f0\u76f8\u540c\uff0c\u5e76\u4e14\u4e0e\u53ef\u7528\u7684\u5b9e\u73b0\u6280\u672f(\u7ed1\u5b9a\u65b9\u6cd5\u53e5\u67c4)\u5f88\u597d\u5730\u543b\u5408\u3002\u5f53\u6355\u83b7\u4e00\u4e2a\u5b9e\u4f8b\u6355\u83b7lambda\u65f6\uff0c\u63a5\u6536\u8005(this)\u88ab\u6307\u5b9a\u4e3a\u7b2c\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u3002\u4ee5\u6355\u83b7lambda\u7684minSize\u5b57\u6bb5\u4e3a\u4f8b\uff1a  list.filter(e -> e.getSize() < minSize)  \u5c06\u5176\u63d0\u53d6\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u5e76\u5c06\u63a5\u6536\u8005\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a  list.forEach(INDY((MH(metaFactory), MH(invokeVirtual Predicate.apply),\n                   MH(invokeVirtual B.lambda$1))( this ))));\n\nprivate boolean lambda$1(Element e) {\n    return e.getSize() < minSize;\n}  \u56e0\u4e3alambda\u7684body\u4f53\u4f1a\u8f6c\u6362\u6210\u79c1\u6709\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4f20\u9012\u884c\u4e3a\u65b9\u6cd5\u53e5\u67c4\u7ed9metafactory\u662f\uff0c\u6355\u83b7\u70b9\u9700\u8981\u52a0\u8f7d\u4e00\u4e2a\u5e38\u91cf\u65b9\u6cd5\u53e5\u67c4\uff0c\u8be5\u53e5\u67c4\u7684\u5f15\u7528\u7c7b\u578b\u662f\u7528\u4e8e\u5b9e\u4f8b\u65b9\u6cd5\u7684REF_invokeSpecial\u548c\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u7684REF_invokeStatic\u3002\u4e4b\u6240\u4ee5\u80fd\u591f\u63d0\u53d6\u79c1\u6709\u65b9\u6cd5\uff0c\u662f\u56e0\u4e3a\u79c1\u6709\u65b9\u6cd5\u53ef\u4ee5\u88ab\u6355\u83b7\u7c7b\u8bbf\u95ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3ametafactory\u6240\u8c03\u7528\u7684\u79c1\u6709\u65b9\u6cd5\u83b7\u53d6\u4e00\u4e2a\u65b9\u6cd5\u53e5\u67c4(\u5982\u679cmetafactory\u751f\u6210\u5b57\u8282\u7801\u6765\u5b9e\u73b0\u76ee\u6807\u51fd\u6570\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8c03\u7528\u65b9\u6cd5\u53e5\u67c4\uff0c\u5b83\u5c06\u901a\u8fc7Unsafe.defineClass\u6765\u52a0\u8f7d\u8fd9\u4e9b\u7c7b\uff0c\u65e0\u9700\u8fdb\u884c\u53ef\u8fbe\u6027\u68c0\u6d4b\uff09\u3002",
            "title": "4.2. \u9759\u6001\u65b9\u6cd5 VS \u5b9e\u4f8b\u65b9\u6cd5"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#43",
            "text": "\u65b9\u6cd5\u5f15\u7528\u6709\u591a\u79cd\u5f62\u5f0f\u5982lambda\uff0c\u53ef\u4ee5\u5212\u5206\u4e3ainstance-capturing \u548c non-instance-capturing\uff0cnon-instance-capturing\u7684\u65b9\u6cd5\u5f15\u7528\u5305\u542b\u9759\u6001\u65b9\u6cd5\u5f15\u7528 (Integer::parseInt, \u7528\u5f15\u7528\u7c7binvokeStatic\u6355\u83b7)\uff0c\u672a\u7ed1\u5b9a\u5b9e\u4f8b\u7684\u65b9\u6cd5\u5f15\u7528(String::length,\u7528\u5f15\u7528invokeVirtual\u6355\u83b7)\u4ee5\u53ca\u9876\u7ea7\u6784\u9020\u65b9\u6cd5\u5f15\u7528(Foo::new,\u7528invoke_newSpecial\u5f15\u7528\u8fdb\u884c\u6355\u83b7)\uff0c\u5f53\u6355\u83b7\u4e00\u4e2anon-instance-capturing\u7684\u65b9\u6cd5\u5f15\u7528\u65f6\uff0c\u88ab\u6355\u83b7\u7684\u53c2\u6570\u5217\u8868\u662f\u7a7a\u7684\uff1a  list.filter(String::isEmpty)  \u88ab\u8f6c\u6362\u6210\uff1a  list.filter(indy(MH(metaFactory), MH(invokeVirtual Predicate.apply), MH(invokeVirtual String.isEmpty))()))  instance-capturing \u65b9\u6cd5\u5f15\u7528\u5f62\u6001\u5305\u62ec\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528(s::length, \u901a\u8fc7\u5f15\u7528invokeVirtual\u6355\u83b7)\uff0csuper\u65b9\u6cd5\u5f15\u7528(super::foo, \u901a\u8fc7\u5f15\u7528invokeSpecial\u6355\u83b7)\u4ee5\u53ca\u5185\u90e8\u7c7b\u6784\u9020\u5f15\u7528(Inner::new, \u901a\u8fc7\u5f15\u7528invokeNewSpecial\u6355\u83b7)\uff0c\u5f53\u6355\u83b7\u4e00\u4e2a instance-capturing\u65b9\u6cd5\u5f15\u7528\uff0c\u88ab\u6355\u83b7\u7684\u53c2\u6570\u5217\u8868\u603b\u662f\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u53c2\u6570\uff0c\u662fsuper\u91cc\u7684this\u6216\u5185\u90e8\u7c7b\u653e\u5165\u6784\u9020\u51fd\u6570\u65b9\u6cd5\u5f15\u7528\uff0c\u4ea6\u6216\u662f\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528\u6240\u6307\u5b9a\u63a5\u6536\u8005\u3002",
            "title": "4.3. \u65b9\u6cd5\u5f15\u7528\u6355\u83b7"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#44-varargs",
            "text": "\u5982\u679c\u5bf9varargs\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528\u88ab\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u800c\u975evarargs\u65b9\u6cd5\uff0c\u7f16\u8bd1\u5668\u5fc5\u987b\u751f\u6210\u4e00\u4e2a\u6865\u63a5\u65b9\u6cd5\u5e76\u6355\u83b7\u6865\u63a5\u7684\u65b9\u6cd5\u53e5\u67c4\u4ee5\u66ff\u4ee3\u6355\u83b7\u76ee\u6807\u65b9\u6cd5\u672c\u8eab\u3002\u6865\u63a5\u5fc5\u987b\u5904\u7406\u4efb\u4f55\u9700\u8981\u7684\u53c2\u6570\u7c7b\u578b\u7684\u4fee\u6539\u4ee5\u53ca\u4ecevarargs\u5230\u975evarargs\u7684\u4fee\u6539\uff0c\u5982\uff1a  interface IIS {\n    void foo(Integer a1, Integer a2, String a3);\n}\n\nclass Foo {\n    static void m(Number a1, Object... rest) { ... }\n}\n\nclass Bar {\n    void bar() {\n        SIS x = Foo::m;\n    }\n}  \u5728\u6b64\uff0c\u7f16\u8bd1\u5668\u9700\u8981\u751f\u6210\u4e00\u4e2a\u6865\u63a5\u6765\u6267\u884c\u4eceNumber\u5230Integer\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u7684\u9002\u914d\uff0c\u4ee5\u53ca\u5c06\u5269\u4f59\u7684\u53c2\u6570\u6536\u96c6\u5230\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u4e2d:  class Bar {\n    void bar() {\n        SIS x = indy((MH(metafactory), MH(invokeVirtual IIS.foo),\n                      MH(invokeStatic m$bridge))( ))\n    }\n\n    static private void m$bridge(Integer a1, Integer a2, String a3) {\n        Foo.m(a1, a2, a3);\n    }\n}",
            "title": "4.4. \u53ef\u53d8\u53c2\u6570 (Varargs)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#45",
            "text": "\u63d0\u53d6lambda\u65b9\u6cd5\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b(A1..An) -> Ra (\u5982\u679c\u63a5\u6536\u65b9\u6cd5\u662f\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u90a3\u4e48\u63a5\u6536\u8005\u88ab\u8ba4\u4e3a\u662f\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570)\uff0c\u7c7b\u4f3c\u5730\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3\u540c\u6837\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u7c7b\u578b\uff1a(F1..Fm) -> Rf\uff08\u65e0\u63a5\u6536\u8005\u53c2\u6570\uff09\uff0c\u5de5\u5382\u7ad9\u70b9\u7684\u52a8\u6001\u53c2\u6570\u5217\u8868\u6709\u53c2\u6570\u7c7b\u578b(D1..Dk)\u3002\u5982\u679clambda\u662f\u5b9e\u4f8b\u6355\u83b7\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u52a8\u6001\u53c2\u6570\u5fc5\u987b\u662f\u63a5\u6536\u8005\u3002  \u5b83\u4eec\u7684\u957f\u5ea6\u5fc5\u987b\u52a0\u8d77\u6765\u5982\u4e0b:k+m == n\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0clambda\u4f53\u53c2\u6570\u5217\u8868\u957f\u5ea6\u5e94\u8be5\u7b49\u4e8e\u52a8\u6001\u53c2\u6570\u5217\u8868\u548c\u51fd\u6570\u5f0f\u63a5\u53e3\u65b9\u6cd5\u53c2\u6570\u5217\u8868\u957f\u5ea6\u4e4b\u548c\u3002\n\u5c06lambda body\u53c2\u6570\u5217\u8868A1..An\u5212\u5206\u4e3a(D1 . .Dk H1..Hm\uff0cD\u53c2\u6570\u5bf9\u5e94\u4e8e\u201c\u989d\u5916\u201d(\u52a8\u6001)\u53c2\u6570\uff0cH\u53c2\u6570\u5bf9\u5e94\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u53c2\u6570\u3002\n\u6211\u4eec\u8981\u6c42Hi\u57281\u5230m\u8303\u56f4\u5185\u80fd\u9002\u5e94Fi\u3002\u540c\u6837\u5730\uff0c\u6211\u4eec\u8981\u6c42Ra\u53ef\u4ee5\u9002\u5e94Rf,\u7c7b\u578bT\u9002\u7528\u4e8e\u7c7b\u578bU:   T == U  T\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0cU\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u901a\u8fc7\u88c5\u7bb1\u64cd\u4f5c\u8f6c\u6362\u4e3aU  T\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cU\u4e3a\u57fa\u672c\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u901a\u8fc7\u62c6\u7bb1\u64cd\u4f5c\u8f6c\u6362\u4e3aU  T\u548cU\u90fd\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4e14T\u80fd\u591f\u901a\u8fc7\u6269\u5c55\u8f6c\u6362\u4e3aU  T\u548cU\u90fd\u4e3a\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0cT\u80fd\u591f\u8f6c\u6362\u4e3aU   \u9002\u5e94\u6027\u7531metafactory\u5728\u94fe\u63a5\u65f6\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5e76\u5728\u6267\u884c\u65f6\u8fdb\u884c\u6355\u83b7\u3002",
            "title": "4.5. \u9002\u5e94\u6027"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#46-metafactory",
            "text": "\u5bf9\u6240\u6709\u7684lambda\u5f62\u6001\u90fd\u7528\u4e00\u4e2a\u5143\u6570\u636e\u662f\u662f\u53ef\u884c\u7684\u3002\u7136\u800c\uff0c\u6700\u597d\u8fd8\u662f\u5c06 metafactory \u5212\u5206\u4e3a\u591a\u4e2a\u7248\u672c:   \u4e00\u4e2a\u201c\u5feb\u901f\u8def\u5f84(fast path)\u201d\u7248\u672c\uff0c\u5b83\u652f\u6301\u4e0d\u53ef\u5e8f\u5217\u5316\u7684 lambda \u548c\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u9759\u6001\u6216\u672a\u7ed1\u5b9a\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528;  \u4e00\u4e2a\u53ef\u5e8f\u5217\u5316\u7684\u7248\u672c\uff0c\u652f\u6301\u53ef\u5e8f\u5217\u5316\u7684 lambda \u548c\u5404\u79cd\u65b9\u6cd5\u5f15\u7528;  \u5982\u679c\u6709\u5fc5\u8981\uff0c\u4e00\u4e2a\u201ckitchen sink\u201d\u7248\u672c\uff0c\u5b83\u652f\u6301\u4efb\u610f\u7ec4\u5408\u7684\u8f6c\u6362\u7279\u6027\u3002   kitchen sink\u7248\u672c\u5c06\u4f1a\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684flag\u6807\u5fd7\u53c2\u6570\u6765\u9009\u62e9\u9009\u9879\uff0c\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7279\u5b9a\u9009\u9879\u7684\u53c2\u6570\u3002serializable\u7248\u672c\u53ef\u80fd\u4f1a\u63a5\u53d7\u4e0e\u5e8f\u5217\u5316\u6709\u5173\u7684\u9644\u52a0\u53c2\u6570\u3002  \u7531\u4e8emetafactories\u4e0d\u662f\u7531\u7528\u6237\u76f4\u63a5\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u6765\u505a\u76f8\u540c\u7684\u4e8b\u60c5\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u6df7\u6dc6\u3002\u901a\u8fc7\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u53c2\u6570\uff0c\u7c7b\u6587\u4ef6\u53d8\u5f97\u66f4\u5c0f\u3002\u5feb\u901f\u8def\u5f84\u9009\u9879\u964d\u4f4e\u4e86VM\u5bf9lambda\u8f6c\u5316\u64cd\u4f5c\u7684\u5185\u90e8\u9650\u5236\uff0c\u4f7f\u5b83\u53ef\u4ee5\u88ab\u5f53\u4f5c\u4e00\u4e2a\u201c\u88c5\u7bb1\u201d\u64cd\u4f5c\uff0c\u5e76\u4fc3\u8fdb\u4e86\u62c6\u7bb1\u4f18\u5316\u3002",
            "title": "4.6. metafactory \u53d8\u4f53"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#5",
            "text": "\u6211\u4eec\u7684\u52a8\u6001\u8f6c\u5316\u7b56\u7565\u8981\u6c42\u4e00\u4e2a\u52a8\u6001\u7684\u5e8f\u5217\u5316\u7b56\u7565\u3002\u5982\u679c\u5e0c\u671b\u80fd\u591f\u4ece\u5185\u90e8\u7c7b\u8f6c\u5230\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\uff0c\u6216\u8005\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5fc5\u987b\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u53d8\u6210\u52a8\u6001\u4ee3\u7406\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e3alambda\u8868\u8fbe\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u7acb\u7684\u5e8f\u5217\u5316\u5f62\u5f0f\uff0c\u5e76\u4f7f\u7528readResolve\u548cwriteReplace\u5728lambda\u5bf9\u8c61\u548c\u5e8f\u5217\u5316\u5f62\u6001\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u5e8f\u5217\u5316\u5f62\u6001\u5fc5\u987b\u5305\u542b\u901a\u8fc7metafactory\u91cd\u65b0\u521b\u5efa\u5bf9\u8c61\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\u3002  public interface SerializedLambda extends Serializable {\n    // capture context\n    String getCapturingClass();\n\n    // SAM descriptor\n    String getDescriptorClass();\n    String getDescriptorName();\n    String getDescriptorMethodType();\n\n    // implementation\n    int getImplReferenceKind();\n    String getImplClass();\n    String getImplName();\n    String getImplMethodType();\n\n    // dynamic args -- these will individually need to be Serializable too\n    Object[] getCapturedArgs();\n}  \u8fd9\u91cc\uff0cSerializedLambda\u63a5\u53e3\u63d0\u4f9b\u4e86\u539f\u59cblambda\u6355\u83b7\u7ad9\u70b9\u4e0a\u7684\u6240\u6709\u4fe1\u606f\u3002\u5728\u6355\u83b7\u53ef\u5e8f\u5217\u5316\u7684lambda\u65f6\uff0cmetafactory\u5c06\u4e0d\u5f97\u4e0d\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0writeReplace\u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2aSerializedLambda\u5b9e\u73b0\uff0c\u8be5\u5b9e\u73b0\u5177\u6709\u4e00\u4e2areadResolve\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8d1f\u8d23\u91cd\u65b0\u521b\u5efalambda\u5bf9\u8c61\u3002",
            "title": "5. \u5e8f\u5217\u5316"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#51",
            "text": "\u53cd\u5e8f\u5217\u5316\u4ee3\u7801\u9700\u8981\u4e3a\u5b9e\u73b0\u65b9\u6cd5\u6784\u9020\u4e00\u4e2a\u65b9\u6cd5\u53e5\u67c4\u3002\u867d\u7136\u5e8f\u5217\u5316\u5f62\u5f0f\u63d0\u4f9b\u4e86\u6240\u6709\u4fe1\u606f\u2014\u2014\u79cd\u7c7b\u3001\u7c7b\u3001\u540d\u79f0\u548c\u7c7b\u578b\u2014\u2014\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u66b4\u9732\u5728MethodHandles.Lookup\u4e0a\u7684findXxx\u65b9\u6cd5\u6765\u8fdb\u884c\u6784\u9020\u3002\u88ab\u5f15\u7528\u7684lambda\u65b9\u6cd5\u6216\u65b9\u6cd5\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95eeSerializedLambda\u5b9e\u73b0(\u53ef\u80fd\u662f\u65b9\u6cd5\u4e0d\u53ef\u8bbf\u95ee\u7684\uff0c\u6216\u8005\u662f\u5c01\u95ed\u7c7b\u4e0d\u53ef\u8bbf\u95ee)\u3002\u8fd9\u5bf9\u4e8elambda\u5de5\u5382\u7ad9\u70b9\u6765\u8bf4\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u5b9e\u73b0\u7684\u65b9\u6cd5\u53e5\u67c4\u662f\u4f7f\u7528\u8be5\u7c7b\u7684\u53ef\u8bbf\u95ee\u7279\u6743\u6743\u9650\u52a0\u8f7d\u7684\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u907f\u514d\u5f15\u5165\u5b89\u5168\u98ce\u9669\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5c3d\u91cf\u5c11\u4f7f\u7528\u4efb\u4f55\u9ad8\u7ea7\u7279\u6743\uff0c\u5f53\u7136\u4e5f\u4e0d\u8981\u4fee\u6539JVM\u7684\u53ef\u8bbf\u95ee\u6027\u89c4\u5219\u3002  \u4e00\u79cd\u786e\u4fdd\u5e8f\u5217\u5316lambda\u6216\u65b9\u6cd5\u5f15\u7528\u7684\u5b9e\u73b0\u65b9\u6cd5\u662f\u516c\u5171\u7c7b\u7684\u516c\u5171\u65b9\u6cd5\u3002\u8fd9\u53ef\u80fd\u5df2\u7ecf\u662f\u6b63\u786e\u7684(\u65b9\u6cd5\u5f15\u7528String::length)\uff0c\u6216\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6210\u4e3atrue(\u5bf9\u4e8e\u516c\u5171\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6lambda\u5230public\u65b9\u6cd5)\u3002\u4f46\u662f\u8fd9\u4e5f\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u56e0\u4e3a\u5b83\u4ee5\u516c\u5171\u65b9\u6cd5\u516c\u5f00\u4e86\u5185\u90e8\u4fe1\u606f\uff0c\u5e76\u4e14\u4e0e\u6211\u4eec\u5bf9\u4e0d\u53ef\u5e8f\u5217\u5316\u7684lambda\u7684\u8f6c\u5316\u4e0d\u4e00\u81f4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u8fd8\u9700\u8981\u4e00\u4e9b\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5728\u975e\u516c\u5f00\u7c7b\u4e0a\u521b\u5efa\u4e00\u4e2a\u516c\u5171\u7684\u201csidecar\u201d\u7c7b\u3002(\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u201c\u516c\u5f00\u201d\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c31\u662f\u5e8f\u5217\u5316\u6240\u505a\u7684\u4e8b\u60c5\u2014\u2014\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5916\u90e8\u7684\u516c\u5171\u5b9e\u9645\u6784\u9020\u51fd\u6570\u3002\u4f46\u6211\u4eec\u5e0c\u671b\u5c3d\u91cf\u51cf\u5c11\u8fd9\u79cd\u64cd\u4f5c\u3002  \u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u53cd\u5e8f\u5217\u5316\u8fd4\u56de\u7ed9\u6267\u884clambda\u6355\u83b7\u7684\u7c7b\u3002\u4e00\u4e2a\u5173\u952e\u7684\u5b89\u5168\u95ee\u9898\u662f\uff0c\u4e0d\u80fd\u8ba9\u53cd\u5e8f\u5217\u5316\u673a\u5236\u5141\u8bb8\u653b\u51fb\u8005\u6784\u9020\u4e00\u4e2alambda\u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u88ab\u4fee\u6539\u7684\u5b57\u8282\u6d41\u6765\u8c03\u7528\u4efb\u610f\u7684\u79c1\u6709\u65b9\u6cd5\u3002\u5e8f\u5217\u5316\u81ea\u7136\u5730\u66b4\u9732\u4e86\u201c\u6784\u9020\u51fd\u6570\u201d(\u51fd\u6570\u63a5\u53e3\u3001\u884c\u4e3a\u65b9\u6cd5\u3001\u6355\u83b7\u7684arg\u7c7b\u578b)\u7684\u7279\u5b9a\u7ec4\u5408;\u901a\u8fc7\u5c06\u5176\u59d4\u6d3e\u56de\u6355\u83b7\u7c7b\uff0c\u5b83\u53ef\u4ee5\u9a8c\u8bc1\u5b57\u8282\u6d41\u5728\u7ee7\u7eed\u4e4b\u524d\u662f\u5426\u4e3a\u4e00\u4e2a\u6709\u6548\u7684\u7ec4\u5408\u3002\u4e00\u65e6\u9a8c\u8bc1\u6210\u529f\uff0c\u5b83\u5c31\u53ef\u4ee5\u901a\u8fc7metafactory\u8c03\u7528\u6784\u9020lambda\uff0c\u5e76\u4f7f\u7528\u5b83\u81ea\u5df1\u7684\u53ef\u8bbf\u95ee\u6027\u6743\u9650\u6765\u52a0\u8f7d\u65b9\u6cd5\u53e5\u67c4\u3002\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6355\u83b7\u7c7b\u5e94\u8be5\u6709\u4e00\u4e2a\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u5c42\u8c03\u7528\u7684\u5e2e\u52a9\u65b9\u6cd5\uff0c\u6bd4\u5982\u6709readObject\u3001writeObject\u3001readResolve\u548cwriteReplace\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a$deserialize$(SerializedLambda)\u3002\u5e8f\u5217\u5316\u5c42\u9700\u8981\u7684\u552f\u4e00\u7279\u6743\u64cd\u4f5c\u662f\u8c03\u7528\u8fd9\u4e2a(\u53ef\u80fd\u662f\u79c1\u6709\u7684)\u65b9\u6cd5\u3002\n\u5f53\u7f16\u8bd1\u4e00\u4e2a\u6355\u83b7serializable lambdas\u7684\u7c7b\u65f6\uff0c\u7f16\u8bd1\u5668\u77e5\u9053(\u51fd\u6570\u63a5\u53e3\u3001\u884c\u4e3a\u65b9\u6cd5\u3001\u6355\u83b7\u7684\u53c2\u6570\u7c7b\u578b)\u7684\u7ec4\u5408\u88ab\u6355\u83b7\u4e3a\u53ef\u5e8f\u5217\u5316\u7684lambda\u3002$deserialize$\u65b9\u6cd5\u5e94\u8be5\u53ea\u652f\u6301\u8fd9\u4e9b\u7ec4\u5408\u7684\u53cd\u5e8f\u5217\u5316\u3002\n\u4ee5\u6355\u83b7\u4e24\u4e2a\u53ef\u5e8f\u5217\u5316\u7684lambda\u4e3a\u4f8b:  class Foo {\n    void moo() {\n        SerializableComparator<String> byLength = (a,b) -> a.length() - b.length();\n        SerializablePredicate<String> isEmpty = String::isEmpty;\n        ...\n    }\n}  \u53ef\u4ee5\u8f6c\u6362\u6210\u5982\u4e0b\u5f62\u5f0f  class Foo {\n    void moo() {\n        SerializableComparator<String> byLength\n            = indy(MH(serializableMetafactory), MH(invokeVirtual SerializableComparator.compare),\n                   MH(invokeStatic lambda$1))());\n        SerializablePredicate<String> isEmpty\n            = indy(MH(serializableMetafactory), MH(invokeVirtual SerializablePredicate.apply),\n                   MH(invokeVirtual String.isEmpty)());\n        ...\n    }\n\n    private static int lambda$1(String a, String b) { return a.length() - b.length(); }\n\n    private static $deserialize$(SerializableLambda lambda) {\n        switch(lambda.getImplName()) {\n        case \"lambda$1\":\n            if (lambda.getSamClass().equals(\"com/foo/SerializableComparator\")\n                 && lambda.getSamMethodName().equals(\"compare\")\n                 && lambda.getSamMethodDesc().equals(\"...\")\n                 && lambda.getImpleReferenceKind() == REF_invokeStatic\n                 && lambda.getImplClass().equals(\"com/foo/Foo\")\n                 && lambda.getImplDesc().equals(...)\n                 && lambda.getInvocationDesc().equals(...))\n                     return indy(MH(serializableMetafactory),\n                                 MH(invokeVirtual SerializableComparator.compare),\n                                 MH(invokeStatic lambda$1))(lambda.getCapturedArgs()));\n            break;\n\n        case \"isEmpty\":\n            if (lambda.getSamClass().equals(\"com/foo/SerializablePredicate\"))\n                 && lambda.getSamMethodName().equals(\"apply\")\n                 && lambda.getSamMethodDesc().equals(\"...\")\n                 && lambda.getImpleReferenceKind() == REF_invokeVirtual\n                 && lambda.getImplClass().equals(\"java/lang/String\")\n                 && lambda.getImplDesc().equals(...)\n                 && lambda.getInvocationDesc().equals(...))\n                     return indy(MH(serializableMetafactory),\n                                 MH(invokeVirtual SerializablePredicate.apply),\n                                 MH(invokeVirtual String.isEmpty)(lambda.getCapturedArgs));\n\n            break;\n        }\n        throw new ...;\n    }\n}  $deserialize$\u65b9\u6cd5\u77e5\u9053\u8be5\u7c7b\u6355\u83b7\u4e86\u54ea\u4e9blambda\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u5217\u8868\u4e2d\u68c0\u67e5\u63d0\u4f9b\u7684\u5e8f\u5217\u5316\u5f62\u6001\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u4e2a\u76f8\u540c\u7684\u8c03\u7528\u7ad9\u70b9\u91cd\u6784lambda\uff0c\u5b83\u53ef\u4ee5\u4e0e\u6355\u83b7\u7ad9\u70b9\u5171\u4eab\u76f8\u540c\u7684bootstrap\u7d22\u5f15\u3002(\u6216\u8005\uff0c\u5b83\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u5b9e\u9645\u6355\u83b7\u7ad9\u70b9\uff0c\u56e0\u6b64\uff0c\u901a\u8fc7\u5c06\u6355\u83b7\u5206\u89e3\u4e3a\u79c1\u6709\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u94fe\u63a5\u72b6\u6001\uff0c\u8fd9\u53ef\u4ee5\u7b80\u5316\u4e0b\u9762\u7684\u7c7b\u7f13\u5b58\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\u5982\u679c\u4e00\u4e2a\u8c03\u7528\u8005\u6b3a\u9a97\u6211\u4eec\u53bb\u53cd\u5e8f\u5217\u5316\u4e00\u4e2a\u6076\u610f\u7684\u5b57\u8282\u6d41\uff0c\u90a3\u4e48\u5b83\u53ea\u4f1a\u4e3a\u90a3\u4e9b\u5b9e\u9645\u4e0a\u662f\u8be5\u7f16\u8bd1\u5355\u5143\u4e2dlambda\u8f6c\u6362\u7684\u76ee\u6807\u7684\u65b9\u6cd5\u5de5\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u5e8f\u5217\u5316\u7684\u5185\u90e8\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u66b4\u9732\u51fa\u6765\u3002\u56e0\u4e3a\u5b83\u4e0e\u63d0\u53d6\u65b9\u6cd5\u5728\u540c\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d\uff0c\u5728\u91cd\u65b0\u7f16\u8bd1\u65f6\u4e0d\u5f15\u5165\u989d\u5916\u7684\u540d\u79f0\u3002\n\u8fd9\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u9002\u7528\u4e8e\u6240\u6709lambda\u4e3b\u4f53\u7684\u63d0\u53d6\u7b56\u7565\u2014\u2014\u5bf9\u53ef\u5e8f\u5217\u5316\u548c\u4e0d\u53ef\u5e8f\u5217\u5316\u7684lambda\u4f7f\u7528\u76f8\u540c\u7684\u7b56\u7565\u3002\u5b83\u80fd\u8ba9\u6240\u6709\u63d0\u53d6lambda body\u4f53\u7684\u79c1\u6709\u5316\uff0c\u6d88\u9664\u4e86\u5bf9sidecar\u7c7b\u6216\u6613\u8bbf\u95ee\u6027\u6865\u63a5\u65b9\u6cd5\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u552f\u4e00\u7684\u7279\u6743\u64cd\u4f5c\u662f$deserialize$\u3002\n\u51cf\u5c11\u66b4\u9732\u5728\u7c7b\u52a0\u8f7d\u7684\u653b\u51fb(\u653b\u51fb\u8005\u521b\u5efa\u4e00\u4e2a\u5e8f\u5217\u5316lambda\u63cf\u8ff0\u7684\u610f\u56fe\u8feb\u4f7f\u7c7b\u52a0\u8f7d\u9759\u6001\u521d\u59cb\u5316\u5668)\uff0c\u6700\u597d\u662f\u7531SerializedLambda\u63a5\u53e3\u5904\u7406\u6240\u6709\u7684\u6807\u8bc6\u7b26\u7684\u7c7b\u540d,\u800c\u975e\u7c7b\u5bf9\u8c61\u3002",
            "title": "5.1. \u53ef\u8fbe\u6027"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#52-class-caching",
            "text": "\u5728\u4e00\u4e9b\u8f6c\u5316\u7b56\u7565\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u751f\u6210\u65b0\u7c7b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u4e3a\u6bcf\u4e00\u4e2alambda\u751f\u6210\u4e00\u4e2a\u7c7b(\u5728\u8fd0\u884c\u65f6\u800c\u4e0d\u662f\u7f16\u8bd1\u65f6\u7684\u5185\u90e8\u7c7b)\uff0c\u6211\u4eec\u5c06\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u7ed9\u5b9a\u7684lambda\u5de5\u5382\u7ad9\u70b9\u65f6\u751f\u6210\u8be5\u7c7b\uff0c\u6b64\u540e\u5bf9\u8be5lambda\u5de5\u5382\u7ad9\u70b9\u7684\u8c03\u7528\u5c06\u91cd\u7528\u7b2c\u4e00\u6b21\u8c03\u7528\u751f\u6210\u7684\u7c7b\u3002\n\u5bf9\u4e8e\u53ef\u5e8f\u5217\u5316\u7684lambda\uff0c\u53ef\u4ee5\u89e6\u53d1\u7c7b\u751f\u6210\u7684\u4e24\u4e2a\u70b9:\u6355\u83b7\u7ad9\u70b9\uff0c\u4ee5\u53ca\u5728$deserialize$\u4ee3\u7801\u4e2d\u5bf9\u5e94\u7684\u5de5\u5382\u7ad9\u70b9\u3002\u65e0\u8bba\u54ea\u6761\u79cd\u88ab\u89e6\u53d1\uff0c\u90fd\u662f\u53ef\u53d6\u7684(\u5c3d\u7ba1\u4e0d\u662f\u5fc5\u9700\u7684)\uff0c\u901a\u8fc7\u4efb\u4e00\u8def\u5f84\u751f\u6210\u7684\u5bf9\u8c61\u90fd\u5177\u6709\u76f8\u540c\u7684\u7c7b\uff0c\u8fd9\u9700\u8981\u6bcf\u4e2alambda\u6355\u83b7\u7684\u552f\u4e00\u5bc6\u94a5\uff0c\u4ee5\u53ca\u5728\u4e24\u4e2a\u6355\u83b7\u7ad9\u70b9\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u7ed9\u5b9aserializable lambda\u7684\u7f13\u5b58\u3002  class SerializationExperiment {\n    interface Foo extends Serializable { int m(); }\n\n    public static void main(String[] args) {\n        Foo f1, f2;\n        if (args[0].equals(\"r\")) {\n            // read file 'foo.ser' and deserialize into f1\n        }\n\n        f2 = () -> 3;\n\n        if (args[0].equals(\"w\")) {\n            // serialize f2 and write into file 'foo.ser'\n            // read file 'foo.ser' and deserialize into f1\n        }\n\n        assert f1.getClass() == f2.getClass();\n    }\n}  \u5982\u679c\u5c06\u4e0a\u9762\u8fd9\u6bb5\u7a0b\u5e8f\u8fd0\u884c\u4e24\u6b21\uff1a  java -ea SerializationExperiment w\njava -ea SerializationExperiment r  \u5982\u679c\u8fd0\u884c\u662f\u6210\u529f\u7684\uff0c\u65e0\u8bba\u662f\u7b2c\u4e00\u6b21\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u8fd8\u662f\u7b2c\u4e00\u6b21\u8c03\u7528metafactory\uff0c\u90fd\u662f\u53ef\u53d6\u7684.",
            "title": "5.2/ \u7c7b\u7f13\u5b58(Class caching)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#53-performance-impact",
            "text": "Serializability\u5728lambdas\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u5f00\u9500\uff0c\u56e0\u4e3alambda\u5bf9\u8c61\u9700\u8981\u643a\u5e26\u8db3\u591f\u7684\u72b6\u6001\u6765\u6709\u6548\u5730\u91cd\u65b0\u521b\u5efametafactory\u7684\u9759\u6001\u548c\u52a8\u6001\u53c2\u6570\u5217\u8868\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5b9e\u73b0\u7c7b\u4e2d\u7684\u989d\u5916\u5b57\u6bb5\u3001\u989d\u5916\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5de5\u4f5c\u4ee5\u53ca\u5bf9\u8f6c\u5316\u7b56\u7565\u7684\u7ea6\u675f(\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u65b9\u6cd5\u5904\u7406\u4ee3\u7406\uff0c\u56e0\u4e3a\u7ed3\u679c\u5bf9\u8c61\u4e0d\u4f1a\u5b9e\u73b0\u6240\u9700\u7684writeReplace\u65b9\u6cd5)\u3002\u56e0\u6b64\uff0c\u6700\u597d\u5355\u72ec\u5bf9\u5f85\u5e8f\u5217\u5316lambda\uff0c\u800c\u4e0d\u662f\u8ba9\u6240\u6709\u7684lambdas\u5e8f\u5217\u5316\u4ee5\u53ca\u5c06\u8fd9\u4e9b\u5f00\u9500\u5f3a\u52a0\u4e8e\u6240\u6709\u7684lambda\u8868\u8fbe\u5f0f\u3002",
            "title": "5.3. \u6027\u80fd\u5f71\u54cd(Performance impact)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#6-miscellaneous",
            "text": "",
            "title": "6. \u5176\u4ed6(Miscellaneous)"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#61",
            "text": "\u51fd\u6570\u5f0f\u63a5\u53e3\u5b9e\u9645\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u975e\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u6709\u6865\u63a5\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728\u529f\u80fd\u63a5\u53e3B\u4e2d:  interface A<T> { void m(T t); }\ninterface B extends A<String> { void m(String s); }  B\u7684\u4e3b\u8981\u65b9\u6cd5\u662fm(String)\uff0c\u4f46\u662fB\u4e5f\u6709\u4e00\u4e2a\u65b9\u6cd5m(Object)\uff0c\u5b83\u662fm(String)\u7684\u6865\u63a5\u65b9\u6cd5\u3002(\u5982\u679c\u5c06B\u8f6c\u6362\u4e3aA\uff0c\u5e76\u5728\u7ed3\u679c\u4e0a\u8c03\u7528m\uff0c\u5219\u8c03\u7528\u5c06\u5931\u8d25\u3002)\n\u5f53\u6211\u4eec\u5c06lambda\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3(\u5982 B)\u7684\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u6240\u6709\u7684\u6865\u63a5\u65b9\u6cd5\u90fd\u6b63\u786e\u5730\u8fde\u63a5\u5230\u4e3b\u65b9\u6cd5\uff0c\u5e76\u4f7f\u7528\u9002\u5f53\u7684\u53c2\u6570\u6216\u8fd4\u56de\u7c7b\u578b\u9002\u5e94(casting)\u3002\u901a\u8fc7\u6076\u610f\u7684\u5b57\u8282\u7801\u751f\u6210\u6216\u5355\u72ec\u7684\u7f16\u8bd1\u5de5\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u627e\u5230\u5728\u7f16\u8bd1\u65f6\u4e0d\u5b58\u5728\u4e8e\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u989d\u5916\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528MethodHandleProxy\u6240\u91c7\u53d6\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u6267\u884c\u5b8c\u6574\u7684JLS\u6865\u63a5\u8ba1\u7b97\u7b97\u6cd5\u548c\u6865\u63a5\u7a0b\u5e8f\uff0c\u5b83\u5c06\u4ee5\u76f8\u540c\u7684\u540d\u79f0\u548c\u65b9\u5f0f\u5c06\u6240\u6709\u65b9\u6cd5\u4e0e\u4e3b\u65b9\u6cd5\u8fde\u63a5\u8d77\u6765\u3002(\u5982\u679c\u53d1\u73b0\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u90fd\u4e0e\u4e3b\u65b9\u6cd5\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u65f6\u5c06\u51fa\u73b0ClassCastException\uff0c\u8fd9\u53ea\u6bd4\u5c06\u4f1a\u629b\u51fa\u7684\u94fe\u63a5\u9519\u8bef\u4fe1\u606f\u7a0d\u5fae\u5c11\u4e00\u4e9b\u3002)\u6211\u4eec\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u5728metafactory\u4e2d\u5305\u542b\u4e00\u4e2a\u5df2\u77e5\u7684\u6709\u6548\u7684\u7f16\u8bd1\u65f6\u6865\u63a5\u7b7e\u540d\u7684\u5217\u8868\uff0c\u4f46\u662f\u8fd9\u4f1a\u589e\u52a0\u7c7b\u6587\u4ef6\u7684\u5927\u5c0f\u3002",
            "title": "6.1. \u6865\u63a5\u65b9\u6cd5"
        },
        {
            "location": "/it/java/java8/lambda/18-03-07/lambda\u539f\u7406\u7bc7(\u8bd1)/#62-tostring",
            "text": "\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9lambda\u5bf9\u8c61\u7684toString\u65b9\u6cd5\u662f\u4eceObject\u7ee7\u627f\u800c\u6765\u7684\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u516c\u5171\u975e\u5408\u6210\u65b9\u6cd5\u7684\u65b9\u6cd5\u5f15\u7528\uff0c\u53ef\u80fd\u5e0c\u671b\u7528\u5b9e\u73b0\u65b9\u6cd5\u4e2d\u7684\u7c7b\u548c\u65b9\u6cd5\u540d\u79f0\u6765\u5b9e\u73b0toString\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eString::size\u8f6c\u6362\u4e3aIntFn\uff0c\u6211\u8ba9toString\u8fd4\u56deString::size()\uff0c java.lang.String::size()\uff0c String::size()\u4e3aIntFn\uff0c\u7b49\u7b49\u3002\nTODO:\u5982\u679c\u6211\u4eec\u652f\u6301lambda\u7684\u7406\u5ff5\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5c06toString\u7ed3\u679c\u4ece\u540d\u79f0\u4e2d\u6d3e\u751f\u51fa\u6765\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u540d\u79f0\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4f20\u5165metafactory\u3002",
            "title": "6.2. toString"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/",
            "text": "stream\u6d41\u539f\u7406\u6d45\u6790\n\n\n\u65f6\u95f4: 2018\u5e743\u670810\u65e5\n\n\n\n\njava8\u4e2d\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684stream\u6d41\u5904\u7406\uff0c\u901a\u8fc7\u5176\u63d0\u4f9b\u7684\u4f8b\u5982\u8fc7\u6ee4(filter)\u3001\u6620\u5c04(map)\u3001\u622a\u53d6(limit)\u3001\u6536\u96c6(collect)\u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\u7684\u7ec4\u5408\uff0c\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u5bf9\u96c6\u5408\u6570\u636e\u7684\u590d\u6742\u64cd\u4f5c\uff0c\u4ec5\u4ee5\u6b64\u7bc7\u5bf9stream\u6d41\u6c34\u7ebf\u5f0f\u7ec4\u5408\u539f\u7406\u8fdb\u884c\u6d45\u6790\uff0c\u671b\u77e5\u5176\u7136\u5e76\u77e5\u5176\u6240\u4ee5\u7136\u3002\n\n\n\n\n\u6587\u6863\u76ee\u5f55\n\n\n\n\n1.\u5bf9\u6bd4\u5c0f\u793a\u4f8b\n\n\n2.stream\u6d41\u7684\u64cd\u4f5c\u7c7b\u578b\u548c\u60f0\u6027\u6c42\u503c\n\n\n3.stream\u90e8\u5206\u6e90\u4ee3\u7801\u6d45\u6790\n\n\n4.\u5c0f\u7ed3\n\n\n5.\u53c2\u8003\n\n\n\n\n1. \u5bf9\u6bd4\u5c0f\u793a\u4f8b\n\n\n\u5148\u4e3e\u4e00\u4e2a\u5229\u7528java8 \u4e2dstream\u6d41\u65b9\u6cd5\u4e0e\u4e4b\u524d\u65b9\u6cd5\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff1a\u83b7\u53d6\u516c\u53f8\u5458\u5de5\u5217\u8868\u4e2d\u5e74\u9f84\u5927\u4e8e25\u7684\u524d\u4e09\u4e2a\u5458\u5de5\u7684\u540d\u5b57\u3002\n\n\n//\u5b9a\u4e49Employee\u7c7b\nclass Employee {\n    private Integer id;\n    private String name;\n    private Integer age;\n    public Employee(Integer id, String name, Integer age) {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n    }\n\n    public Employee() {\n    }\n\n    //\u5c5e\u6027getter\u548csetter\u65b9\u6cd5......\n}\n\n//\u6784\u9020\u7684\u5458\u5de5\u6570\u636e\u5217\u8868\nList<Employee> employees = new ArrayList<>();\nemployees.add(new Employee(20180001, \"Tom\",  26));\nemployees.add(new Employee(20180002, \"Lucy\",  29));\nemployees.add(new Employee(20180003, \"John\",  23));\nemployees.add(new Employee(20180004, \"Green\",  27));\n\n\n\n\n\u5904\u7406\u65b9\u5f0f1: \u4f20\u7edf\u96c6\u5408\u5904\u7406\u65b9\u5f0f\n\n\nList<String> names = new ArrayList<>();\nint count = 0;\nfor(Employee employee: employees) {\n    if(employee.getAge() > 25) {\n        names.add(employee.getName());\n        count++;\n    }\n    if(count >= 3) {\n        break;\n    }\n }\n\n\n\n\n\u5904\u7406\u65b9\u5f0f2\uff1astream\u6d41\u5f0f\u5904\u7406\uff1a\n\n\nList<String> names = employees.stream()\n                            .filter(x -> x.getAge() > 25)\n                            .map(Employee::getName)\n                            .limit(3)\n                            .collect(toList());\n\n\n\n\n\u4e24\u79cd\u65b9\u5f0f\u90fd\u80fd\u5f97\u51fa\u76f8\u540c\u7684\u7ed3\u679c\u5373\uff1a\n\n\n[\"Tom\", \"Lucy\", \"Green\"]\n\n\n\n\n\u4e0a\u9762\u793a\u4f8b\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u79cd\u65b9\u5f0f\u5728\u83b7\u53d6\u6ee1\u8db3\u8981\u6c42\u7684\u5458\u5de5\u540d\u5b57\u5217\u8868\u7684\u5224\u65ad\u903b\u8f91\u76f8\u53bb\u4e0d\u5927\uff0c\u6bd4\u8f83\u5e74\u9f84->\u6620\u5c04\u540d\u5b57->\u5224\u65ad\u6570\u91cf\uff1b\u4f46stream\u51fd\u6570\u5f0f\u98ce\u683c\u5404\u4e2a\u5904\u7406\u9636\u6bb5\u5206\u5de5\u660e\u786e\uff0c\u6709\u6761\u4e0d\u7d6e\uff0c\u6bd4\u5982\u518d\u52a0\u4e0a\u540d\u5b57\u4e0d\u91cd\u590d\u7684\u524d3\u4e2a\u540d\u5b57(\u6309\u5217\u8868\u987a\u5e8f)\uff0cstream\u4e2d\u76f4\u63a5\u5728limit()\u65b9\u6cd5\u524d\u6302\u4e00\u4e2adistinct()\u5373\u53ef\uff0c\u800c\u96c6\u5408\u5904\u7406\u65b9\u5f0f\u7684\u4ee3\u7801\u590d\u6742\u5ea6\u65e0\u7591\u5927\u5927\u589e\u5f3a\u3002\n\n\n2. stream\u6d41\u7684\u64cd\u4f5c\u7c7b\u578b\u548c\u60f0\u6027\u6c42\u503c\n\n\nstream\u6d41\u7684\u64cd\u4f5c\u53ef\u7c97\u5206\u4e3a\u4e24\u79cd\uff1a\u4e2d\u95f4\u64cd\u4f5c\u548c\u7ec8\u7aef\u64cd\u4f5c\u3002\u4e2d\u95f4\u64cd\u4f5c\u4ec5\u8bb0\u5f55\u4e86\u64cd\u4f5c\uff0c\u53ea\u6709\u5728\u7ec8\u7aef\u64cd\u4f5c\u65f6\u624d\u4f1a\u89e6\u53d1\u771f\u6b63\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1b\u7ec8\u7aef\u64cd\u4f5c\u53c8\u53ef\u4ee5\u5206\u4e3a\u77ed\u8def\u4e0e\u975e\u77ed\u8def\u64cd\u4f5c\uff0c\u524d\u8005\u662f\u6307\u9047\u5230\u67d0\u4e9b\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\uff1b\u800c\u540e\u8005\u662f\u6307\u5fc5\u987b\u5904\u7406\u6240\u6709\u5143\u7d20\u624d\u80fd\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\n\u7ec6\u5206\u5982\u4e0b\u8868\n\u5f15\u7528\u4f20\u9001\u95e8\n\uff1a\n\n\n+--------------------------------------------------------------------------------------------------------+\n|                                                   Stream\u64cd\u4f5c\u5206\u7c7b                                       |                    \n\n+========================+==================+============================================================+\n|                        | \u65e0\u72b6\u6001(Stateless)| unordered filter map mapToInt mapToLong mapToDouble        |\n|\u4e2d\u95f4\u64cd\u4f5c(Intermediate   |                  | flatMap flatMapToInt flatMapToLong flatMapToDouble peek    |  \n\n+ operations)            +------------------+------------------------------------------------------------+           \n\n|                        | \u6709\u72b6\u6001(Stateful) | distinct sorted limit skip                                 |\n+------------------------+------------------+------------------------------------------------------------+\n|\u7ed3\u675f\u64cd\u4f5c(Intermediate   | \u975e\u77ed\u8def\u64cd\u4f5c       | forEach forEachOrdered toArray reduce collect max min count|      \n\n| operations)            +------------------+------------------------------------------------------------+           \n\n|                        | \u77ed\u8def\u64cd\u4f5c         |anyMatch allMatch noneMatch findFirst findAny               |\n\n+------------------------+------------------+------------------------------------------------------------+\n\n\n\u60f0\u6027\u6c42\u503c\uff1a\u60f0\u6027\uff0c\u61d2\u60f0\u4e5f\uff0c\u5565\u610f\u601d\uff1f\u770b\u4e2a\u4f8b\u5b50\u5148\uff1a\n\u793a\u4f8b2 \u60f0\u6027\u6c42\u503c\uff1a\n\n\n Stream<String> nameStream = employees.stream().filter(x -> x.getAge() > 25)\n                .map(student -> {\n                    System.out.println(student.getName());\n                    return student.getName();\n                }).limit(3);\n        System.out.println(\"--------------\");\n        nameStream.collect(toList());\n\n\n\n\n\u7ed3\u679c:\n\n\n--------------\nTom\nLucy\nGreen\n\n\n\n\n\u7c97\u770bprintln\u65b9\u6cd5\u597d\u50cf\u662f\u5728\u90a3\u4e00\u6392\u6a2a\u7ebf\u524d\u9762\u7684\uff0c\u600e\u4e48\u6253\u5370\u5230\u540e\u9762\u53bb\u4e86\u5462\uff1f\u4f8b\u5b50\u4e2d\u4f53\u73b0\u7684\u5c31\u662f\u4e2d\u95f4\u64cd\u4f5c(filter|map|limit)\u5dee\u4e0d\u591a\u8d77\u4e2a\u5b9a\u4e49\u4f5c\u7528\uff0c\u5177\u4f53\u7684\u8ba1\u7b97\u8c03\u7528\u64cd\u4f5c\u662f\u7b49\u5230\u540e\u9762\u7684\u7ec8\u7aef\u64cd\u4f5c\u8fdb\u884c\u7684(collect)\uff0c\u7b49\u5230\u5b9e\u5728\u9700\u8981\u7ed3\u679c\u7684\u65f6\u5019\u518d\u8ba1\u7b97\u3002\u540e\u9762\u6e90\u7801\u6d45\u6790\u90e8\u5206\u4f1a\u4ecb\u7ecd\u3002  \n\n\n\u6211\u8fd9\u629b\u51fa\u4e24\u4e2a\u5c0f\u95ee\u9898\u5148\uff1a\n\n\n\n\n\u6d41\u5904\u7406\u8fc7\u7a0b\u6570\u636e\u662f\u5982\u4f55\u4f20\u9012\u7684\uff1f\n\n\n\u7ec8\u7aef\u64cd\u4f5c\u5982\u4f55\u89e6\u53d1\u4e2d\u95f4\u64cd\u4f5c\uff1f\n\n\n\n\n3. stream\u6e90\u4ee3\u7801\u6d45\u6790\n\n\n\u4ee5\u793a\u4f8b1\u7684stream\u6d41\u6c34\u7ebf\u8fdb\u884c\u8ddf\u8e2a\u5206\u6790\uff0c\u770b\u770b\u6bcf\u4e2a\u64cd\u4f5c\u5185\u90e8\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u5148\u7b80\u5355\u6709\u4e2a\u8fd9\u6837\u7684\u6982\u5ff5\uff1a\n\n\n\n\n\u6d41\u5904\u7406\u7684\u6bcf\u4e2a\u64cd\u4f5c\u53eb\u505a\u4e00\u4e2aStage\uff1b\n\n\n\u6bcf\u4e2aStage\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u662f\u901a\u8fc7\u53cc\u5411\u94fe\u8868\u8fdb\u884c\u94fe\u63a5\n\n\n\n\n\u5373\uff1a\n\n\n\n\n\n\n\n\n\u518d\u653e\u4e00\u5f20\u5404\u64cd\u4f5c\u7684\u7ee7\u627f\u7ed3\u6784\u56fe\uff1a\n\n\n\n\n\n\n\n\nstage0:\n \u5c06eployees\u8f6c\u6362\u4e3a\u6d41\uff0c\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e86\u4e00\u4e2aHead\uff0c\u8fd9\u4e2aHead\u76f8\u5f53\u4e8e\u53cc\u5411\u94fe\u8868\u7684\u94fe\u5934\n\n\n//step1: \u8c03\u7528Collection\u7684stream\u65b9\u6cd5\u4ea7\u751f\u4e00\u4e2a\u6d41\ndefault Stream<E> stream() {\n    return StreamSupport.stream(spliterator(), false);\n}\n\n//step2: \u8c03\u7528StreamSupport\u7684stream\u65b9\u6cd5\n public static <T> Stream<T> stream(Spliterator<T> spliterator, boolean parallel) {\n    Objects.requireNonNull(spliterator);\n    return new ReferencePipeline.Head<>(spliterator,\n                                        StreamOpFlag.fromCharacteristics(spliterator),\n                                        parallel);\n}\n\n//step3 \u521b\u5efaHead\uff0c\u5e76\u901a\u8fc7supper\u521d\u59cb\u5316\u7ee7\u627f\u94fe\u4e0a\u5bf9\u5e94\u7684AbstractPipeline\u76f8\u5173\u5c5e\u6027\nAbstractPipeline(Spliterator<?> source, int sourceFlags, boolean parallel) {\n    //\u5f53\u524dStage\u7f6e\u4e3anull\n    this.previousStage = null;\n    //\u8bbe\u7f6e\u6570\u636esource\n    this.sourceSpliterator = source;\n    this.sourceStage = this;\n    this.sourceOrOpFlags = sourceFlags & StreamOpFlag.STREAM_MASK;\n    // The following is an optimization of:\n    // StreamOpFlag.combineOpFlags(sourceOrOpFlags, StreamOpFlag.INITIAL_OPS_VALUE);\n    this.combinedFlags = (~(sourceOrOpFlags << 1)) & StreamOpFlag.INITIAL_OPS_VALUE;\n    this.depth = 0;\n    this.parallel = parallel;\n}\n\n\n\n\nStage1:\n fliter()\u65b9\u6cd5\u7684\u76f8\u5173\u5b9a\u4e49\uff0cfliter()\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u5373\u51fd\u6570\u5f0f\u63a5\u53e3Predicate\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u5b9a\u4e49\u7684test\u65b9\u6cd5\u6765\u6d4b\u8bd5flilter\u7684\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u6761\u4ef6\u3002 \n\n\n@Override\npublic final Stream<P_OUT> filter(Predicate<? super P_OUT> predicate) {\n    Objects.requireNonNull(predicate);\n    return new StatelessOp<P_OUT, P_OUT>(this, StreamShape.REFERENCE,\n                                 StreamOpFlag.NOT_SIZED) {\n        @Override\n        Sink<P_OUT> opWrapSink(int flags, Sink<P_OUT> sink) {\n            return new Sink.ChainedReference<P_OUT, P_OUT>(sink) {\n                @Override\n                public void begin(long size) {\n                    downstream.begin(-1);\n                }\n\n                @Override\n                public void accept(P_OUT u) {\n                    if (predicate.test(u))\n                        downstream.accept(u);\n                }\n            };\n        }i\n    };\n}\n\n\n\n\n\u53ef\u4ee5\u770b\u5230filter\u65b9\u6cd5\u5904\u7406\u9a8c\u8bc1predicate\u7684\u6709\u6548\u6027\u5916\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2aStatelessOp\uff0cStatelessOp\u91cc\u9762\u91cd\u8f7d\u4e86opWrapSink\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u662f\u901a\u8fc7\u7ec8\u7aef\u64cd\u4f5c\u65f6\u8c03\u7528\uff0c\u5148\u770b\u770bnew\u7684StatelessOp\u5728\u5e72\u5565\u3002\n\n\n// \u8c03\u7528StatelessOp\u5bf9\u5e94\u6784\u9020\u65b9\u6cd5\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u901a\u8fc7super\u5c06this\n//(\u5373\u901a\u8fc7Stage0\u4e2d\u7684Head)\u4f5c\u4e3a\u5f53\u524dStage\u7684upstream\uff08\u524d\u9a71\u5f15\u7528\uff09 \nStatelessOp(AbstractPipeline<?, E_IN, ?> upstream,\n                StreamShape inputShape,\n                int opFlags) {\n        //\u8c03\u7528super\u5c06\u6570\u636e\u4f20\u9012\u7ed9ReferencePipeline\u5e76\u7ee7\u7eed\u8c03\u7528super\u4f20\u9012\u7ed9AbstractPipeline\u8fdb\u884c\u6570\u636e\u9879\u8bbe\u7f6e\n        super(upstream, opFlags);\n        assert upstream.getOutputShape() == inputShape;\n    }\n\nAbstractPipeline(AbstractPipeline<?, E_IN, ?> previousStage, int opFlags) {\n    ...\n    previousStage.linkedOrConsumed = true;\n    //\u8bbe\u7f6e\u524d\u9a71\u5f15\u7528\u7684\u540e\u7ee7\u5f15\u7528\u6307\u5411\u5f53\u524dStage\n    previousStage.nextStage = this;\n    this.previousStage = previousStage;\n    this.sourceOrOpFlags = opFlags & StreamOpFlag.OP_MASK;\n    this.combinedFlags = StreamOpFlag.combineOpFlags(opFlags, previousStage.combinedFlags);\n    this.sourceStage = previousStage.sourceStage;\n    if (opIsStateful())\n        sourceStage.sourceAnyStateful = true;\n    //\u8bbe\u7f6e\u65b9\u6cd5\u94fe\u5c42\u6b21\u6df1\u5ea6\n    this.depth = previousStage.depth + 1;\n}\n\n\n\n\nStage2:\n map\u76f8\u5173\u4ee3\u7801,\u548cfilter\u4e0d\u540c\u7684\u662f\u63a5\u6536\u7684\u53c2\u6570\u662fFunction\u63a5\u53e3\uff0c\u6700\u540e\u4f20\u9012\u7ed9\u4e0b\u6e38\u6d41\u662f\u7ecf\u8fc7\u6620\u5c04\u540e\u7684\u6570\u636e\u3002\n\n\nOverride\n@SuppressWarnings(\"unchecked\")\npublic final <R> Stream<R> map(Function<? super P_OUT, ? extends R> mapper) {\n    Objects.requireNonNull(mapper);\n    return new StatelessOp<P_OUT, R>(this, StreamShape.REFERENCE,\n                                 StreamOpFlag.NOT_SORTED | StreamOpFlag.NOT_DISTINCT) {\n        @Override\n        Sink<P_OUT> opWrapSink(int flags, Sink<R> sink) {\n            return new Sink.ChainedReference<P_OUT, R>(sink) {\n                //\u4e3amap\u91cf\u8eab\u6253\u9020\u7684accept\u64cd\u4f5c\n                @Override\n                public void accept(P_OUT u) {\n                    downstream.accept(mapper.apply(u));\n                }\n            };\n        }\n    };\n}\n\n\n\n\nStage3:\n limit\u65b9\u6cd5\u8bbe\u7f6e\u6700\u5927\u6570\u636e\u91cf\u622a\u53d6\u6761\u6570\n\n\n@Override\npublic final Stream<P_OUT> limit(long maxSize) {\n    if (maxSize < 0)\n        throw new IllegalArgumentException(Long.toString(maxSize));\n    return SliceOps.makeRef(this, 0, maxSize);\n}\n\n\n\n\nStage4:\n collect\n\n\n@Override\n@SuppressWarnings(\"unchecked\")\npublic final <R, A> R collect(Collector<? super P_OUT, A, R> collector) {\n    A container;\n    if (isParallel() && ...) {\n        //\u5e76\u884c\u65b9\u5f0f\n        container = collector.supplier().get();\n        BiConsumer<A, ? super P_OUT> accumulator = collector.accumulator();\n        forEach(u -> accumulator.accept(container, u));\n    }\n    else {\n        //\u4e32\u884c\u65b9\u5f0f\n        container = evaluate(ReduceOps.makeRef(collector));\n    }\n    return collector.characteristics().contains(Collector.Characteristics.IDENTITY_FINISH)\n           ? (R) container\n           : collector.finisher().apply(container);\n}\n\n\n\n\ncollect\u7684\u8c03\u7528\u8fc7\u7a0b\u76f8\u5bf9\u6bd4\u8f83\u590d\u6742\uff0c\u7528\u6d41\u7a0b\u56fe\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd(\u4e3b\u8981\u4ecb\u7ecd\u4e32\u884c\u65b9\u5f0f)\uff1a\n\n\n\n\n\n\n\n\n\u5728\u672c\u6587\u7ed9\u51fa\u7684\u793a\u4f8b\u4e2d\uff0c\u5404\u4e2a\u4e2d\u95f4\u64cd\u4f5c\u7684accept\u65b9\u6cd5\u5177\u4f53\u6267\u884c\u65f6\u95f4\u662f\u5728collect\u9636\u6bb5\u6765\u5b8c\u6210\u7684\uff0c\u66f4\u5177\u4f53\u7684\u5c31\u662f\u6267\u884c\u4e86action.accept(e)\uff0c\u8fd9\u4e5f\u6b63\u597d\u5370\u8bc1\u4e86stream\u6d41\u7684\u60f0\u6027\u8ba1\u7b97\u8fc7\u7a0b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e00\u6d41\u5f0f\u8ba1\u7b97\u8fc7\u7a0b\u4e5f\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528\u5404\u4e2aStage\u4e2d\u7684accept\u65b9\u6cd5\u8fc7\u7a0b\u3002\n\n\n4. \u5c0f\u7ed3\n\n\n\u672c\u7247\u535a\u5ba2\u4ecb\u7ecd\u7684\u5185\u5bb9\u4e5f\u4e0d\u8fc7stream\u6d41\u4e2d\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u53ef\u80fd\u5176\u4e2d\u6709\u7406\u89e3\u4e0d\u51c6\u786e\u7684\uff0c\u4e0b\u4e00\u7bc7\u51c6\u5907\u7814\u7a76\u4e00\u4e0b\u4e32\u5e76\u884c\u4e4b\u95f4\u7684\u5de5\u4f5c\u539f\u7406\u7684\u4e0d\u540c\u4e4b\u5904\u4ee5\u53ca\u4e32\u5e76\u8f6c\u6362\u8fc7\u7a0b\u3002\n\n\n5.\u53c2\u8003\n\n\n\u6df1\u5165\u7406\u89e3Java Stream\u6d41\u6c34\u7ebf",
            "title": "stream\u6d41\u6d45\u6790-1"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#stream",
            "text": "\u65f6\u95f4: 2018\u5e743\u670810\u65e5   java8\u4e2d\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684stream\u6d41\u5904\u7406\uff0c\u901a\u8fc7\u5176\u63d0\u4f9b\u7684\u4f8b\u5982\u8fc7\u6ee4(filter)\u3001\u6620\u5c04(map)\u3001\u622a\u53d6(limit)\u3001\u6536\u96c6(collect)\u7b49\u4e00\u7cfb\u5217\u65b9\u6cd5\u7684\u7ec4\u5408\uff0c\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u5bf9\u96c6\u5408\u6570\u636e\u7684\u590d\u6742\u64cd\u4f5c\uff0c\u4ec5\u4ee5\u6b64\u7bc7\u5bf9stream\u6d41\u6c34\u7ebf\u5f0f\u7ec4\u5408\u539f\u7406\u8fdb\u884c\u6d45\u6790\uff0c\u671b\u77e5\u5176\u7136\u5e76\u77e5\u5176\u6240\u4ee5\u7136\u3002",
            "title": "stream\u6d41\u539f\u7406\u6d45\u6790"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#_1",
            "text": "1.\u5bf9\u6bd4\u5c0f\u793a\u4f8b  2.stream\u6d41\u7684\u64cd\u4f5c\u7c7b\u578b\u548c\u60f0\u6027\u6c42\u503c  3.stream\u90e8\u5206\u6e90\u4ee3\u7801\u6d45\u6790  4.\u5c0f\u7ed3  5.\u53c2\u8003",
            "title": "\u6587\u6863\u76ee\u5f55"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#1",
            "text": "\u5148\u4e3e\u4e00\u4e2a\u5229\u7528java8 \u4e2dstream\u6d41\u65b9\u6cd5\u4e0e\u4e4b\u524d\u65b9\u6cd5\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff1a\u83b7\u53d6\u516c\u53f8\u5458\u5de5\u5217\u8868\u4e2d\u5e74\u9f84\u5927\u4e8e25\u7684\u524d\u4e09\u4e2a\u5458\u5de5\u7684\u540d\u5b57\u3002  //\u5b9a\u4e49Employee\u7c7b\nclass Employee {\n    private Integer id;\n    private String name;\n    private Integer age;\n    public Employee(Integer id, String name, Integer age) {\n        this.id = id;\n        this.name = name;\n        this.age = age;\n    }\n\n    public Employee() {\n    }\n\n    //\u5c5e\u6027getter\u548csetter\u65b9\u6cd5......\n}\n\n//\u6784\u9020\u7684\u5458\u5de5\u6570\u636e\u5217\u8868\nList<Employee> employees = new ArrayList<>();\nemployees.add(new Employee(20180001, \"Tom\",  26));\nemployees.add(new Employee(20180002, \"Lucy\",  29));\nemployees.add(new Employee(20180003, \"John\",  23));\nemployees.add(new Employee(20180004, \"Green\",  27));  \u5904\u7406\u65b9\u5f0f1: \u4f20\u7edf\u96c6\u5408\u5904\u7406\u65b9\u5f0f  List<String> names = new ArrayList<>();\nint count = 0;\nfor(Employee employee: employees) {\n    if(employee.getAge() > 25) {\n        names.add(employee.getName());\n        count++;\n    }\n    if(count >= 3) {\n        break;\n    }\n }  \u5904\u7406\u65b9\u5f0f2\uff1astream\u6d41\u5f0f\u5904\u7406\uff1a  List<String> names = employees.stream()\n                            .filter(x -> x.getAge() > 25)\n                            .map(Employee::getName)\n                            .limit(3)\n                            .collect(toList());  \u4e24\u79cd\u65b9\u5f0f\u90fd\u80fd\u5f97\u51fa\u76f8\u540c\u7684\u7ed3\u679c\u5373\uff1a  [\"Tom\", \"Lucy\", \"Green\"]  \u4e0a\u9762\u793a\u4f8b\u53ef\u4ee5\u770b\u51fa\uff0c\u4e24\u79cd\u65b9\u5f0f\u5728\u83b7\u53d6\u6ee1\u8db3\u8981\u6c42\u7684\u5458\u5de5\u540d\u5b57\u5217\u8868\u7684\u5224\u65ad\u903b\u8f91\u76f8\u53bb\u4e0d\u5927\uff0c\u6bd4\u8f83\u5e74\u9f84->\u6620\u5c04\u540d\u5b57->\u5224\u65ad\u6570\u91cf\uff1b\u4f46stream\u51fd\u6570\u5f0f\u98ce\u683c\u5404\u4e2a\u5904\u7406\u9636\u6bb5\u5206\u5de5\u660e\u786e\uff0c\u6709\u6761\u4e0d\u7d6e\uff0c\u6bd4\u5982\u518d\u52a0\u4e0a\u540d\u5b57\u4e0d\u91cd\u590d\u7684\u524d3\u4e2a\u540d\u5b57(\u6309\u5217\u8868\u987a\u5e8f)\uff0cstream\u4e2d\u76f4\u63a5\u5728limit()\u65b9\u6cd5\u524d\u6302\u4e00\u4e2adistinct()\u5373\u53ef\uff0c\u800c\u96c6\u5408\u5904\u7406\u65b9\u5f0f\u7684\u4ee3\u7801\u590d\u6742\u5ea6\u65e0\u7591\u5927\u5927\u589e\u5f3a\u3002",
            "title": "1. \u5bf9\u6bd4\u5c0f\u793a\u4f8b"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#2-stream",
            "text": "stream\u6d41\u7684\u64cd\u4f5c\u53ef\u7c97\u5206\u4e3a\u4e24\u79cd\uff1a\u4e2d\u95f4\u64cd\u4f5c\u548c\u7ec8\u7aef\u64cd\u4f5c\u3002\u4e2d\u95f4\u64cd\u4f5c\u4ec5\u8bb0\u5f55\u4e86\u64cd\u4f5c\uff0c\u53ea\u6709\u5728\u7ec8\u7aef\u64cd\u4f5c\u65f6\u624d\u4f1a\u89e6\u53d1\u771f\u6b63\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1b\u7ec8\u7aef\u64cd\u4f5c\u53c8\u53ef\u4ee5\u5206\u4e3a\u77ed\u8def\u4e0e\u975e\u77ed\u8def\u64cd\u4f5c\uff0c\u524d\u8005\u662f\u6307\u9047\u5230\u67d0\u4e9b\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\uff1b\u800c\u540e\u8005\u662f\u6307\u5fc5\u987b\u5904\u7406\u6240\u6709\u5143\u7d20\u624d\u80fd\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\n\u7ec6\u5206\u5982\u4e0b\u8868 \u5f15\u7528\u4f20\u9001\u95e8 \uff1a  +--------------------------------------------------------------------------------------------------------+\n|                                                   Stream\u64cd\u4f5c\u5206\u7c7b                                       |                     \n+========================+==================+============================================================+\n|                        | \u65e0\u72b6\u6001(Stateless)| unordered filter map mapToInt mapToLong mapToDouble        |\n|\u4e2d\u95f4\u64cd\u4f5c(Intermediate   |                  | flatMap flatMapToInt flatMapToLong flatMapToDouble peek    |   \n+ operations)            +------------------+------------------------------------------------------------+            \n|                        | \u6709\u72b6\u6001(Stateful) | distinct sorted limit skip                                 |\n+------------------------+------------------+------------------------------------------------------------+\n|\u7ed3\u675f\u64cd\u4f5c(Intermediate   | \u975e\u77ed\u8def\u64cd\u4f5c       | forEach forEachOrdered toArray reduce collect max min count|       \n| operations)            +------------------+------------------------------------------------------------+            \n|                        | \u77ed\u8def\u64cd\u4f5c         |anyMatch allMatch noneMatch findFirst findAny               | \n+------------------------+------------------+------------------------------------------------------------+  \u60f0\u6027\u6c42\u503c\uff1a\u60f0\u6027\uff0c\u61d2\u60f0\u4e5f\uff0c\u5565\u610f\u601d\uff1f\u770b\u4e2a\u4f8b\u5b50\u5148\uff1a\n\u793a\u4f8b2 \u60f0\u6027\u6c42\u503c\uff1a   Stream<String> nameStream = employees.stream().filter(x -> x.getAge() > 25)\n                .map(student -> {\n                    System.out.println(student.getName());\n                    return student.getName();\n                }).limit(3);\n        System.out.println(\"--------------\");\n        nameStream.collect(toList());  \u7ed3\u679c:  --------------\nTom\nLucy\nGreen  \u7c97\u770bprintln\u65b9\u6cd5\u597d\u50cf\u662f\u5728\u90a3\u4e00\u6392\u6a2a\u7ebf\u524d\u9762\u7684\uff0c\u600e\u4e48\u6253\u5370\u5230\u540e\u9762\u53bb\u4e86\u5462\uff1f\u4f8b\u5b50\u4e2d\u4f53\u73b0\u7684\u5c31\u662f\u4e2d\u95f4\u64cd\u4f5c(filter|map|limit)\u5dee\u4e0d\u591a\u8d77\u4e2a\u5b9a\u4e49\u4f5c\u7528\uff0c\u5177\u4f53\u7684\u8ba1\u7b97\u8c03\u7528\u64cd\u4f5c\u662f\u7b49\u5230\u540e\u9762\u7684\u7ec8\u7aef\u64cd\u4f5c\u8fdb\u884c\u7684(collect)\uff0c\u7b49\u5230\u5b9e\u5728\u9700\u8981\u7ed3\u679c\u7684\u65f6\u5019\u518d\u8ba1\u7b97\u3002\u540e\u9762\u6e90\u7801\u6d45\u6790\u90e8\u5206\u4f1a\u4ecb\u7ecd\u3002    \u6211\u8fd9\u629b\u51fa\u4e24\u4e2a\u5c0f\u95ee\u9898\u5148\uff1a   \u6d41\u5904\u7406\u8fc7\u7a0b\u6570\u636e\u662f\u5982\u4f55\u4f20\u9012\u7684\uff1f  \u7ec8\u7aef\u64cd\u4f5c\u5982\u4f55\u89e6\u53d1\u4e2d\u95f4\u64cd\u4f5c\uff1f",
            "title": "2. stream\u6d41\u7684\u64cd\u4f5c\u7c7b\u578b\u548c\u60f0\u6027\u6c42\u503c"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#3-stream",
            "text": "\u4ee5\u793a\u4f8b1\u7684stream\u6d41\u6c34\u7ebf\u8fdb\u884c\u8ddf\u8e2a\u5206\u6790\uff0c\u770b\u770b\u6bcf\u4e2a\u64cd\u4f5c\u5185\u90e8\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u5148\u7b80\u5355\u6709\u4e2a\u8fd9\u6837\u7684\u6982\u5ff5\uff1a   \u6d41\u5904\u7406\u7684\u6bcf\u4e2a\u64cd\u4f5c\u53eb\u505a\u4e00\u4e2aStage\uff1b  \u6bcf\u4e2aStage\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u662f\u901a\u8fc7\u53cc\u5411\u94fe\u8868\u8fdb\u884c\u94fe\u63a5   \u5373\uff1a     \u518d\u653e\u4e00\u5f20\u5404\u64cd\u4f5c\u7684\u7ee7\u627f\u7ed3\u6784\u56fe\uff1a     stage0:  \u5c06eployees\u8f6c\u6362\u4e3a\u6d41\uff0c\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e86\u4e00\u4e2aHead\uff0c\u8fd9\u4e2aHead\u76f8\u5f53\u4e8e\u53cc\u5411\u94fe\u8868\u7684\u94fe\u5934  //step1: \u8c03\u7528Collection\u7684stream\u65b9\u6cd5\u4ea7\u751f\u4e00\u4e2a\u6d41\ndefault Stream<E> stream() {\n    return StreamSupport.stream(spliterator(), false);\n}\n\n//step2: \u8c03\u7528StreamSupport\u7684stream\u65b9\u6cd5\n public static <T> Stream<T> stream(Spliterator<T> spliterator, boolean parallel) {\n    Objects.requireNonNull(spliterator);\n    return new ReferencePipeline.Head<>(spliterator,\n                                        StreamOpFlag.fromCharacteristics(spliterator),\n                                        parallel);\n}\n\n//step3 \u521b\u5efaHead\uff0c\u5e76\u901a\u8fc7supper\u521d\u59cb\u5316\u7ee7\u627f\u94fe\u4e0a\u5bf9\u5e94\u7684AbstractPipeline\u76f8\u5173\u5c5e\u6027\nAbstractPipeline(Spliterator<?> source, int sourceFlags, boolean parallel) {\n    //\u5f53\u524dStage\u7f6e\u4e3anull\n    this.previousStage = null;\n    //\u8bbe\u7f6e\u6570\u636esource\n    this.sourceSpliterator = source;\n    this.sourceStage = this;\n    this.sourceOrOpFlags = sourceFlags & StreamOpFlag.STREAM_MASK;\n    // The following is an optimization of:\n    // StreamOpFlag.combineOpFlags(sourceOrOpFlags, StreamOpFlag.INITIAL_OPS_VALUE);\n    this.combinedFlags = (~(sourceOrOpFlags << 1)) & StreamOpFlag.INITIAL_OPS_VALUE;\n    this.depth = 0;\n    this.parallel = parallel;\n}  Stage1:  fliter()\u65b9\u6cd5\u7684\u76f8\u5173\u5b9a\u4e49\uff0cfliter()\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u5373\u51fd\u6570\u5f0f\u63a5\u53e3Predicate\uff0c\u901a\u8fc7\u8be5\u63a5\u53e3\u5b9a\u4e49\u7684test\u65b9\u6cd5\u6765\u6d4b\u8bd5flilter\u7684\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u6761\u4ef6\u3002   @Override\npublic final Stream<P_OUT> filter(Predicate<? super P_OUT> predicate) {\n    Objects.requireNonNull(predicate);\n    return new StatelessOp<P_OUT, P_OUT>(this, StreamShape.REFERENCE,\n                                 StreamOpFlag.NOT_SIZED) {\n        @Override\n        Sink<P_OUT> opWrapSink(int flags, Sink<P_OUT> sink) {\n            return new Sink.ChainedReference<P_OUT, P_OUT>(sink) {\n                @Override\n                public void begin(long size) {\n                    downstream.begin(-1);\n                }\n\n                @Override\n                public void accept(P_OUT u) {\n                    if (predicate.test(u))\n                        downstream.accept(u);\n                }\n            };\n        }i\n    };\n}  \u53ef\u4ee5\u770b\u5230filter\u65b9\u6cd5\u5904\u7406\u9a8c\u8bc1predicate\u7684\u6709\u6548\u6027\u5916\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2aStatelessOp\uff0cStatelessOp\u91cc\u9762\u91cd\u8f7d\u4e86opWrapSink\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u662f\u901a\u8fc7\u7ec8\u7aef\u64cd\u4f5c\u65f6\u8c03\u7528\uff0c\u5148\u770b\u770bnew\u7684StatelessOp\u5728\u5e72\u5565\u3002  // \u8c03\u7528StatelessOp\u5bf9\u5e94\u6784\u9020\u65b9\u6cd5\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u901a\u8fc7super\u5c06this\n//(\u5373\u901a\u8fc7Stage0\u4e2d\u7684Head)\u4f5c\u4e3a\u5f53\u524dStage\u7684upstream\uff08\u524d\u9a71\u5f15\u7528\uff09 \nStatelessOp(AbstractPipeline<?, E_IN, ?> upstream,\n                StreamShape inputShape,\n                int opFlags) {\n        //\u8c03\u7528super\u5c06\u6570\u636e\u4f20\u9012\u7ed9ReferencePipeline\u5e76\u7ee7\u7eed\u8c03\u7528super\u4f20\u9012\u7ed9AbstractPipeline\u8fdb\u884c\u6570\u636e\u9879\u8bbe\u7f6e\n        super(upstream, opFlags);\n        assert upstream.getOutputShape() == inputShape;\n    }\n\nAbstractPipeline(AbstractPipeline<?, E_IN, ?> previousStage, int opFlags) {\n    ...\n    previousStage.linkedOrConsumed = true;\n    //\u8bbe\u7f6e\u524d\u9a71\u5f15\u7528\u7684\u540e\u7ee7\u5f15\u7528\u6307\u5411\u5f53\u524dStage\n    previousStage.nextStage = this;\n    this.previousStage = previousStage;\n    this.sourceOrOpFlags = opFlags & StreamOpFlag.OP_MASK;\n    this.combinedFlags = StreamOpFlag.combineOpFlags(opFlags, previousStage.combinedFlags);\n    this.sourceStage = previousStage.sourceStage;\n    if (opIsStateful())\n        sourceStage.sourceAnyStateful = true;\n    //\u8bbe\u7f6e\u65b9\u6cd5\u94fe\u5c42\u6b21\u6df1\u5ea6\n    this.depth = previousStage.depth + 1;\n}  Stage2:  map\u76f8\u5173\u4ee3\u7801,\u548cfilter\u4e0d\u540c\u7684\u662f\u63a5\u6536\u7684\u53c2\u6570\u662fFunction\u63a5\u53e3\uff0c\u6700\u540e\u4f20\u9012\u7ed9\u4e0b\u6e38\u6d41\u662f\u7ecf\u8fc7\u6620\u5c04\u540e\u7684\u6570\u636e\u3002  Override\n@SuppressWarnings(\"unchecked\")\npublic final <R> Stream<R> map(Function<? super P_OUT, ? extends R> mapper) {\n    Objects.requireNonNull(mapper);\n    return new StatelessOp<P_OUT, R>(this, StreamShape.REFERENCE,\n                                 StreamOpFlag.NOT_SORTED | StreamOpFlag.NOT_DISTINCT) {\n        @Override\n        Sink<P_OUT> opWrapSink(int flags, Sink<R> sink) {\n            return new Sink.ChainedReference<P_OUT, R>(sink) {\n                //\u4e3amap\u91cf\u8eab\u6253\u9020\u7684accept\u64cd\u4f5c\n                @Override\n                public void accept(P_OUT u) {\n                    downstream.accept(mapper.apply(u));\n                }\n            };\n        }\n    };\n}  Stage3:  limit\u65b9\u6cd5\u8bbe\u7f6e\u6700\u5927\u6570\u636e\u91cf\u622a\u53d6\u6761\u6570  @Override\npublic final Stream<P_OUT> limit(long maxSize) {\n    if (maxSize < 0)\n        throw new IllegalArgumentException(Long.toString(maxSize));\n    return SliceOps.makeRef(this, 0, maxSize);\n}  Stage4:  collect  @Override\n@SuppressWarnings(\"unchecked\")\npublic final <R, A> R collect(Collector<? super P_OUT, A, R> collector) {\n    A container;\n    if (isParallel() && ...) {\n        //\u5e76\u884c\u65b9\u5f0f\n        container = collector.supplier().get();\n        BiConsumer<A, ? super P_OUT> accumulator = collector.accumulator();\n        forEach(u -> accumulator.accept(container, u));\n    }\n    else {\n        //\u4e32\u884c\u65b9\u5f0f\n        container = evaluate(ReduceOps.makeRef(collector));\n    }\n    return collector.characteristics().contains(Collector.Characteristics.IDENTITY_FINISH)\n           ? (R) container\n           : collector.finisher().apply(container);\n}  collect\u7684\u8c03\u7528\u8fc7\u7a0b\u76f8\u5bf9\u6bd4\u8f83\u590d\u6742\uff0c\u7528\u6d41\u7a0b\u56fe\u8fdb\u884c\u7b80\u8981\u4ecb\u7ecd(\u4e3b\u8981\u4ecb\u7ecd\u4e32\u884c\u65b9\u5f0f)\uff1a     \u5728\u672c\u6587\u7ed9\u51fa\u7684\u793a\u4f8b\u4e2d\uff0c\u5404\u4e2a\u4e2d\u95f4\u64cd\u4f5c\u7684accept\u65b9\u6cd5\u5177\u4f53\u6267\u884c\u65f6\u95f4\u662f\u5728collect\u9636\u6bb5\u6765\u5b8c\u6210\u7684\uff0c\u66f4\u5177\u4f53\u7684\u5c31\u662f\u6267\u884c\u4e86action.accept(e)\uff0c\u8fd9\u4e5f\u6b63\u597d\u5370\u8bc1\u4e86stream\u6d41\u7684\u60f0\u6027\u8ba1\u7b97\u8fc7\u7a0b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e00\u6d41\u5f0f\u8ba1\u7b97\u8fc7\u7a0b\u4e5f\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528\u5404\u4e2aStage\u4e2d\u7684accept\u65b9\u6cd5\u8fc7\u7a0b\u3002",
            "title": "3. stream\u6e90\u4ee3\u7801\u6d45\u6790"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#4",
            "text": "\u672c\u7247\u535a\u5ba2\u4ecb\u7ecd\u7684\u5185\u5bb9\u4e5f\u4e0d\u8fc7stream\u6d41\u4e2d\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u53ef\u80fd\u5176\u4e2d\u6709\u7406\u89e3\u4e0d\u51c6\u786e\u7684\uff0c\u4e0b\u4e00\u7bc7\u51c6\u5907\u7814\u7a76\u4e00\u4e0b\u4e32\u5e76\u884c\u4e4b\u95f4\u7684\u5de5\u4f5c\u539f\u7406\u7684\u4e0d\u540c\u4e4b\u5904\u4ee5\u53ca\u4e32\u5e76\u8f6c\u6362\u8fc7\u7a0b\u3002",
            "title": "4. \u5c0f\u7ed3"
        },
        {
            "location": "/it/java/java8/stream/18-03-10/stream\u6d41\u6d45\u6790-1/#5",
            "text": "\u6df1\u5165\u7406\u89e3Java Stream\u6d41\u6c34\u7ebf",
            "title": "5.\u53c2\u8003"
        },
        {
            "location": "/it/tools/",
            "text": "tools \u76f8\u5173\u6587\u6863\n\n\npostman\n\n\n\n\npostman\u5b89\u88c5\u4e0e\u5b66\u4e60\n\n\npostman\u6d4b\u8bd5",
            "title": "tools index"
        },
        {
            "location": "/it/tools/#tools",
            "text": "",
            "title": "tools \u76f8\u5173\u6587\u6863"
        },
        {
            "location": "/it/tools/#postman",
            "text": "postman\u5b89\u88c5\u4e0e\u5b66\u4e60  postman\u6d4b\u8bd5",
            "title": "postman"
        },
        {
            "location": "/it/tools/postman/18-01-21/\u5b89\u88c5\u4e0e\u5b66\u4e60/",
            "text": "postman-\u4e3a\u63a5\u53e3\u6d4b\u8bd5\u800c\u751f\n\n\n\u65f6\u95f4: 2018\u5e7401\u670821\u65e5\n\n\n\n\n\u81ea17\u5e74\u6bd5\u4e1a\uff0c\u5728\u6210\u90fd*IT\u516c\u53f8\u4e0a\u73ed\u8fd1\u534a\u5e74\u4e86\uff0c\u4e4b\u524d\u505a\u8fc7\u4e00\u6bb5\u65f6\u95f4web\u524d\u7aef\u5f00\u53d1\uff0c\u540e\u8f6c\u505aapi\u63a5\u53e3\u5bf9\u63a5\u5f00\u53d1\u4e86\uff0cpostman\u662f\u57fa\u4e8e\u8c37\u6b4c\u6d4f\u89c8\u5668\u7684API\u8c03\u8bd5\u3001Http\u8bf7\u6c42\u7684\u5de5\u5177\uff0c\u4ee5\u4e4b\u524d\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u5de5\u5177\u7684\uff0c\u7531\u4e8e\u9879\u76ee\u5904\u4e8e\u5f00\u53d1\u7684\u524d\u671f\u9636\u6bb5\uff0c\u8bb8\u591a\u529f\u80fd\u65b9\u6848\u90fd\u4e0d\u592a\u7a33\u5b9a\uff0c\u867d\u8bf4\u63d0\u4f9b\u7684api\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\uff0c\u4f46\u6d89\u53ca\u5230\u540e\u7aefapi\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u80fd\u6709\u5f88\u5927\u7684\u53d8\u52a8\uff0c\u6bcf\u6b21\u8c03\u52a8\u5b8c\u53ef\u80fd\u9700\u6d89\u53ca\u5230\u51e0\u5341\u4e2aapi\u63a5\u53e3\u7684\u6d4b\u8bd5\uff0c\u9700\u8981\u4e3a\u4e00\u4e2a\u4e2a\u7684\u63a5\u53e3\u66f4\u6539\u4f9d\u8d56\u53c2\u6570\u624d\u80fd\u6d4b\u8bd5\uff0c\u5fc3\u771f\u7d2f\u554a\uff0c\u8fd1\u53d7\u6d4b\u8bd5\u7ec4\u5927\u4f6c\u9646\u54e5\u7684\u70b9\u62e8\uff0c\u624d\u4f0a\u59cb\u53d1\u73b0\u539f\u6765\u8fd9\u6b3e\u5de5\u5177\u5982\u6b64\u725b\u903c\u54c4\u54c4\uff0c\u679c\u65ad\u6df1\u5165\u5b66\u4e60\u5b66\u4e60\uff0c\u611f\u53d7\u4e00\u4e0b\u51e0\u5341\u4e2aapi\u7ecf\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u66f4\u6539\u4fbf\u53ef\u4ee5\u5237\u5237\u5237\u4e00\u952e\u5b8c\u6210\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5feb\u611f\u3002\n\n\n\n\n1. \u4e0b\u8f7d\u5b89\u88c5\n\n\n\n\n\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0a\u4e0b\u8f7d\u5c31\u884c\u4e86\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4e0b\u8f7d\u5bf9\u5e94\u7684postman\u7248\u672c \npostman\u5b98\u7f51\u4e0b\u8f7d\n , \u6211\u662f\u4e0b\u8f7d\u5b89\u88c5\u7248\u7684\uff0c\u76f4\u63a5\u8fd0\u884c\u4e0b\u8f7d\u7684.exe\u8fdb\u884c\u5b89\u88c5(\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u60f3\u8fd9\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\u5fc5\u7136\u8f7b\u8f66\u719f\u8def\u5427)\uff0c\u5b89\u88c5\u597d\u540e\uff0c\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5b89\u88c5\u57fa\u4e8echrome\u6d4f\u89c8\u5668\u7684\u6269\u5c55\u63d2\u4ef6\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5,\u53ef\u4ee5\u53c2\u8003\u8fd9\u4f4d\u540c\u5b66\u7684\u64cd\u4f5c \nchrome\u5b89\u88c5postman\u63d2\u4ef6\n \u3002\n\n\n\u5b89\u88c5\u597d\u540e\uff0c\u53d1\u9001\u4e00\u6761\u7b80\u5355\u7684http\u8bf7\u6c42\uff0c\u770b\u770b\u4f4e\u8c03\u5962\u534e\u7684\u8bf7\u6c42\u754c\u9762\uff1a\n\n\n\n\n\n\n\n\n\n\n\u6d45\u6d45\u7684\u89c2\u671b\u4e86\u4e00\u4e0b\uff0c\u6574\u4f53\u4e0a\u8fd9\u4e24\u7248\u90fd\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6d4b\u8bd5\u529f\u80fd\u6a21\u5757\uff0c\uff0capp\u7248\u7684\u4f3c\u4e4e\u66f4\u5168\u3001\u66f4\u4e30\u5bcc\uff0c\u7b80\u5355\u7684\u5bf9\u6bd4\u5c31\u662fPre-requst\u9664\u4e86\u4e24\u8005\u5728\u5199\u6cd5\u4e0a\u7565\u6709\u4e0d\u540c\uff0c\u8fd8\u6709\u5c31\u662fapp\u7248\u7684\u8981\u591a\u5f88\u591a\u53ef\u64cd\u4f5c\u9879\uff0c\u80fd\u591f\u5728\u6267\u884c\u672c\u6761\u8bf7\u6c42\u524d\u68c0\u6d4b\u5176\u4ed6\u6240\u4f9d\u8d56\u7684\u8bf7\u6c42\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u5b66\u751f\u9009\u8bfeAPI\u63a5\u53e3\uff0c\u505a\u529f\u80fd\u6027\u6d4b\u8bd5\u65f6\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001http\u8bf7\u6c42\u6765\u5148\u83b7\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u67d0\u4e00\u5b66\u751fID\u548c\u67d0\u4e00\u8bfe\u7a0bID\uff0c\u5177\u4f53\u63d0\u4f9b\u7684\u5bf9\u6bd4\u5982\u4e0b\uff1a\n\n\n\u63d2\u4ef6\u7248\uff1a\n\n//\u6e05\u9664\u67d0\u4e00\u5168\u5c40\u53d8\u91cf\npostman.clearGlobalVariable(\"variable_key\"); \n\n//\u6e05\u9664\u67d0\u4e00\u73af\u5883\u53d8\u91cf\npostman.clearEnvironmentVariable(\"variable_key\"); \n\n//\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\npostman.setGlobalVariable(\"variable_key\", \"variable_value\");\n\n//\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\npostman.setEnvironmentVariable(\"variable_key\", \"variable_value\");\n\n\napp\u7248\uff1a\n\n//\u6e05\u9664\u67d0\u4e00\u5168\u5c40\u53d8\u91cf\npm.globals.unset(\"variable_key\");     \n\n//\u6e05\u9664\u67d0\u4e00\u73af\u5883\u53d8\u91cf\npm.environment.unset(\"variable_key\"); \n\n//\u83b7\u53d6\u5168\u5c40\u53d8\u91cf\npm.globals.get(\"variable_key\");       \n\n//\u83b7\u53d6\u5c40\u90e8\u53d8\u91cf\npm.variables.get(\"variable_key\");     \n\n//\u83b7\u53d6\u73af\u5883\u53d8\u91cf\npm.environment.get(\"variable_key\");   \n\n//\u53d1\u9001\u5176\u4ed6http\u8bf7\u6c42\npm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\n    console.log(response.json());\n});                                    \n\n//\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\npm.globals.set(\"variable_key\", \"variable_value\"); \n\n//\u8bbe\u7f6e\u5c40\u90e8\u53d8\u91cf\npm.globals.set(\"variable_key\", \"variable_value\");  \n\n//\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\npm.environment.set(\"variable_key\", \"variable_value\");  \n\n\n\n\n2. \u4e3b\u754c\u9762\u7b80\u4ecb\n\n\n\n\n\n\n\n\n\u529f\u80fd\u70b9\u4ecb\u7ecd\uff1a\n\n\n- 1. \u6570\u636e\u5bfc\u5165\uff1a\u53ef\u4ee5\u5bfc\u5165\u6d4b\u8bd5\u96c6\u5408\uff0c\u73af\u5883\u53d8\u91cf\u7b49\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u6587\u4ef6\uff1b\n- 2. \u6279\u91cf\u6267\u884c\u5668\uff1a\u53ef\u4ee5\u5bf9\u591a\u6761\u6d4b\u8bd5\u7528\u4f8b\u6216\u591a\u4e2a\u6d4b\u8bd5\u96c6\u5408\u8fdb\u884c\u6279\u91cf\u6d4b\u8bd5\uff1b\n- 3. \u5386\u53f2\u8bf7\u6c42\u8bb0\u5f55\uff1b\n- 4. \u6d4b\u8bd5\u7528\u4f8b\u96c6\u5408\uff0c\u53ef\u5bf9\u4e00\u4e2a\u9879\u76ee\u7684\u6d4b\u8bd5\u7528\u4f8b\u6309\u7167\u529f\u80fd\u6a21\u5757\u5212\u5206\uff0c\u4fbf\u4e8e\u7ba1\u7406\uff1b\n- 5. \u5355\u6761\u6d4b\u8bd5\u7528\u4f8b\u8be6\u7ec6\u64cd\u4f5ctab\uff1b\n- 6. \u56e2\u961f\u5171\u4eab\u533a\u57df\uff1b\n- 7. \u9009\u62e9\u73af\u5883\u53d8\u91cf\u96c6\uff1b\n- 8. \u914d\u7f6e\u3001\u5206\u4eab(\u4ed8\u8d39) \u591a\u4f5c\u7528\u57df\u7684\u73af\u5883\u53d8\u91cf\uff1b\n- 9. \u5305\u62ecGET\u3001PUT\u3001POST\u3001DELETE\u3001PATCH\u3001HEAD\u7b4915\u79cdHTTP\u7684\u8bf7\u6c42\u65b9\u6cd5\u9009\u62e9\uff1b\n- 10. \u8bf7\u6c42url\uff1b\n- 11. \u8bf7\u6c42url\u53c2\u6570\u8bbe\u7f6e\uff1b\n- 12. \u53d1\u9001\u8bf7\u6c42\uff1b\n- 13. \u4fdd\u5b58/\u53e6\u5b58\u8bf7\u6c42\uff1b\n- 14. \u5386\u53f2cookie\u96c6\uff1b\n- 15. \u591a\u8bed\u8a00\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06postman\u8bf7\u6c42\u8f6c\u6362\u4e3ajava\u3001python\u7b49\u8bed\u8a00\u7684\u8bf7\u6c42\uff1b\n- 16. Authoriation\uff0c\u8bbe\u7f6e\u8bf7\u6c42\u8ba4\u8bc1\uff1b\n- 17. \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff1b\n- 18. \u8bbe\u7f6e\u8bf7\u6c42\u4f53\uff1b\n- 19. Pre-request\uff0c\u53d1\u9001\u8bf7\u6c42\u524d\u6267\u884c\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u5728\u8be5\u6a21\u5757\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u52a8\u6001\u53c2\u6570\u7b49\uff08*\uff09\uff1b\n- 20. test\u6d4b\u8bd5\u70b9\uff0c\u5bf9\u8bf7\u6c42\u7ed3\u679c\u8fdb\u884c\u5206\u6790\u548c\u5904\u7406(*)\uff1b\n- 21. \u54cd\u5e94\u4f53\uff1b\n- 22. \u8bf7\u6c42\u8fd4\u56de\u7684cookie\u4fe1\u606f\n- 23.\u54cd\u5e94\u5934\uff1b\n- 24. test\u6d4b\u8bd5\u7ed3\u679c(\u5fd8\u5199\u7f16\u7801\u4e86\uff0c\u5c31\u7f16\u53f723\u65c1\u8fb9)\uff1b\n- 25.\u54cd\u5e94\u72b6\u6001\u7801\u3002\n\n\n\n\n\u8fd9\u4e00\u7bc7\u535a\u6587\u5148\u7b80\u5355\u8bb0\u5f55\u5230\u8fd9\u5427\uff0c\u4e0b\u4e00\u7bc7\u8be6\u7ec6\u6574\u7406\u4e00\u4e0b\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u548c\u5982\u4f55\u590d\u7528\u5ea6\u8f83\u9ad8\u7684\u6d4b\u8bd5\u7528\u4f8b\u96c6\u3002",
            "title": "\u5b89\u88c5\u4e0e\u5b66\u4e60"
        },
        {
            "location": "/it/tools/postman/18-01-21/\u5b89\u88c5\u4e0e\u5b66\u4e60/#postman-",
            "text": "\u65f6\u95f4: 2018\u5e7401\u670821\u65e5   \u81ea17\u5e74\u6bd5\u4e1a\uff0c\u5728\u6210\u90fd*IT\u516c\u53f8\u4e0a\u73ed\u8fd1\u534a\u5e74\u4e86\uff0c\u4e4b\u524d\u505a\u8fc7\u4e00\u6bb5\u65f6\u95f4web\u524d\u7aef\u5f00\u53d1\uff0c\u540e\u8f6c\u505aapi\u63a5\u53e3\u5bf9\u63a5\u5f00\u53d1\u4e86\uff0cpostman\u662f\u57fa\u4e8e\u8c37\u6b4c\u6d4f\u89c8\u5668\u7684API\u8c03\u8bd5\u3001Http\u8bf7\u6c42\u7684\u5de5\u5177\uff0c\u4ee5\u4e4b\u524d\u7684\u6d4b\u8bd5\u5de5\u4f5c\u4e5f\u662f\u57fa\u4e8e\u8fd9\u4e2a\u5de5\u5177\u7684\uff0c\u7531\u4e8e\u9879\u76ee\u5904\u4e8e\u5f00\u53d1\u7684\u524d\u671f\u9636\u6bb5\uff0c\u8bb8\u591a\u529f\u80fd\u65b9\u6848\u90fd\u4e0d\u592a\u7a33\u5b9a\uff0c\u867d\u8bf4\u63d0\u4f9b\u7684api\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\uff0c\u4f46\u6d89\u53ca\u5230\u540e\u7aefapi\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u80fd\u6709\u5f88\u5927\u7684\u53d8\u52a8\uff0c\u6bcf\u6b21\u8c03\u52a8\u5b8c\u53ef\u80fd\u9700\u6d89\u53ca\u5230\u51e0\u5341\u4e2aapi\u63a5\u53e3\u7684\u6d4b\u8bd5\uff0c\u9700\u8981\u4e3a\u4e00\u4e2a\u4e2a\u7684\u63a5\u53e3\u66f4\u6539\u4f9d\u8d56\u53c2\u6570\u624d\u80fd\u6d4b\u8bd5\uff0c\u5fc3\u771f\u7d2f\u554a\uff0c\u8fd1\u53d7\u6d4b\u8bd5\u7ec4\u5927\u4f6c\u9646\u54e5\u7684\u70b9\u62e8\uff0c\u624d\u4f0a\u59cb\u53d1\u73b0\u539f\u6765\u8fd9\u6b3e\u5de5\u5177\u5982\u6b64\u725b\u903c\u54c4\u54c4\uff0c\u679c\u65ad\u6df1\u5165\u5b66\u4e60\u5b66\u4e60\uff0c\u611f\u53d7\u4e00\u4e0b\u51e0\u5341\u4e2aapi\u7ecf\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u66f4\u6539\u4fbf\u53ef\u4ee5\u5237\u5237\u5237\u4e00\u952e\u5b8c\u6210\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5feb\u611f\u3002",
            "title": "postman-\u4e3a\u63a5\u53e3\u6d4b\u8bd5\u800c\u751f"
        },
        {
            "location": "/it/tools/postman/18-01-21/\u5b89\u88c5\u4e0e\u5b66\u4e60/#1",
            "text": "\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0a\u4e0b\u8f7d\u5c31\u884c\u4e86\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4e0b\u8f7d\u5bf9\u5e94\u7684postman\u7248\u672c  postman\u5b98\u7f51\u4e0b\u8f7d  , \u6211\u662f\u4e0b\u8f7d\u5b89\u88c5\u7248\u7684\uff0c\u76f4\u63a5\u8fd0\u884c\u4e0b\u8f7d\u7684.exe\u8fdb\u884c\u5b89\u88c5(\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u60f3\u8fd9\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\u5fc5\u7136\u8f7b\u8f66\u719f\u8def\u5427)\uff0c\u5b89\u88c5\u597d\u540e\uff0c\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5b89\u88c5\u57fa\u4e8echrome\u6d4f\u89c8\u5668\u7684\u6269\u5c55\u63d2\u4ef6\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5,\u53ef\u4ee5\u53c2\u8003\u8fd9\u4f4d\u540c\u5b66\u7684\u64cd\u4f5c  chrome\u5b89\u88c5postman\u63d2\u4ef6  \u3002  \u5b89\u88c5\u597d\u540e\uff0c\u53d1\u9001\u4e00\u6761\u7b80\u5355\u7684http\u8bf7\u6c42\uff0c\u770b\u770b\u4f4e\u8c03\u5962\u534e\u7684\u8bf7\u6c42\u754c\u9762\uff1a      \u6d45\u6d45\u7684\u89c2\u671b\u4e86\u4e00\u4e0b\uff0c\u6574\u4f53\u4e0a\u8fd9\u4e24\u7248\u90fd\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6d4b\u8bd5\u529f\u80fd\u6a21\u5757\uff0c\uff0capp\u7248\u7684\u4f3c\u4e4e\u66f4\u5168\u3001\u66f4\u4e30\u5bcc\uff0c\u7b80\u5355\u7684\u5bf9\u6bd4\u5c31\u662fPre-requst\u9664\u4e86\u4e24\u8005\u5728\u5199\u6cd5\u4e0a\u7565\u6709\u4e0d\u540c\uff0c\u8fd8\u6709\u5c31\u662fapp\u7248\u7684\u8981\u591a\u5f88\u591a\u53ef\u64cd\u4f5c\u9879\uff0c\u80fd\u591f\u5728\u6267\u884c\u672c\u6761\u8bf7\u6c42\u524d\u68c0\u6d4b\u5176\u4ed6\u6240\u4f9d\u8d56\u7684\u8bf7\u6c42\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u5b66\u751f\u9009\u8bfeAPI\u63a5\u53e3\uff0c\u505a\u529f\u80fd\u6027\u6d4b\u8bd5\u65f6\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001http\u8bf7\u6c42\u6765\u5148\u83b7\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u67d0\u4e00\u5b66\u751fID\u548c\u67d0\u4e00\u8bfe\u7a0bID\uff0c\u5177\u4f53\u63d0\u4f9b\u7684\u5bf9\u6bd4\u5982\u4e0b\uff1a  \u63d2\u4ef6\u7248\uff1a\n\n//\u6e05\u9664\u67d0\u4e00\u5168\u5c40\u53d8\u91cf\npostman.clearGlobalVariable(\"variable_key\"); \n\n//\u6e05\u9664\u67d0\u4e00\u73af\u5883\u53d8\u91cf\npostman.clearEnvironmentVariable(\"variable_key\"); \n\n//\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\npostman.setGlobalVariable(\"variable_key\", \"variable_value\");\n\n//\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\npostman.setEnvironmentVariable(\"variable_key\", \"variable_value\");\n\n\napp\u7248\uff1a\n\n//\u6e05\u9664\u67d0\u4e00\u5168\u5c40\u53d8\u91cf\npm.globals.unset(\"variable_key\");     \n\n//\u6e05\u9664\u67d0\u4e00\u73af\u5883\u53d8\u91cf\npm.environment.unset(\"variable_key\"); \n\n//\u83b7\u53d6\u5168\u5c40\u53d8\u91cf\npm.globals.get(\"variable_key\");       \n\n//\u83b7\u53d6\u5c40\u90e8\u53d8\u91cf\npm.variables.get(\"variable_key\");     \n\n//\u83b7\u53d6\u73af\u5883\u53d8\u91cf\npm.environment.get(\"variable_key\");   \n\n//\u53d1\u9001\u5176\u4ed6http\u8bf7\u6c42\npm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\n    console.log(response.json());\n});                                    \n\n//\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\npm.globals.set(\"variable_key\", \"variable_value\"); \n\n//\u8bbe\u7f6e\u5c40\u90e8\u53d8\u91cf\npm.globals.set(\"variable_key\", \"variable_value\");  \n\n//\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\npm.environment.set(\"variable_key\", \"variable_value\");",
            "title": "1. \u4e0b\u8f7d\u5b89\u88c5"
        },
        {
            "location": "/it/tools/postman/18-01-21/\u5b89\u88c5\u4e0e\u5b66\u4e60/#2",
            "text": "",
            "title": "2. \u4e3b\u754c\u9762\u7b80\u4ecb"
        },
        {
            "location": "/it/tools/postman/18-01-21/\u5b89\u88c5\u4e0e\u5b66\u4e60/#_1",
            "text": "- 1. \u6570\u636e\u5bfc\u5165\uff1a\u53ef\u4ee5\u5bfc\u5165\u6d4b\u8bd5\u96c6\u5408\uff0c\u73af\u5883\u53d8\u91cf\u7b49\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u6587\u4ef6\uff1b\n- 2. \u6279\u91cf\u6267\u884c\u5668\uff1a\u53ef\u4ee5\u5bf9\u591a\u6761\u6d4b\u8bd5\u7528\u4f8b\u6216\u591a\u4e2a\u6d4b\u8bd5\u96c6\u5408\u8fdb\u884c\u6279\u91cf\u6d4b\u8bd5\uff1b\n- 3. \u5386\u53f2\u8bf7\u6c42\u8bb0\u5f55\uff1b\n- 4. \u6d4b\u8bd5\u7528\u4f8b\u96c6\u5408\uff0c\u53ef\u5bf9\u4e00\u4e2a\u9879\u76ee\u7684\u6d4b\u8bd5\u7528\u4f8b\u6309\u7167\u529f\u80fd\u6a21\u5757\u5212\u5206\uff0c\u4fbf\u4e8e\u7ba1\u7406\uff1b\n- 5. \u5355\u6761\u6d4b\u8bd5\u7528\u4f8b\u8be6\u7ec6\u64cd\u4f5ctab\uff1b\n- 6. \u56e2\u961f\u5171\u4eab\u533a\u57df\uff1b\n- 7. \u9009\u62e9\u73af\u5883\u53d8\u91cf\u96c6\uff1b\n- 8. \u914d\u7f6e\u3001\u5206\u4eab(\u4ed8\u8d39) \u591a\u4f5c\u7528\u57df\u7684\u73af\u5883\u53d8\u91cf\uff1b\n- 9. \u5305\u62ecGET\u3001PUT\u3001POST\u3001DELETE\u3001PATCH\u3001HEAD\u7b4915\u79cdHTTP\u7684\u8bf7\u6c42\u65b9\u6cd5\u9009\u62e9\uff1b\n- 10. \u8bf7\u6c42url\uff1b\n- 11. \u8bf7\u6c42url\u53c2\u6570\u8bbe\u7f6e\uff1b\n- 12. \u53d1\u9001\u8bf7\u6c42\uff1b\n- 13. \u4fdd\u5b58/\u53e6\u5b58\u8bf7\u6c42\uff1b\n- 14. \u5386\u53f2cookie\u96c6\uff1b\n- 15. \u591a\u8bed\u8a00\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06postman\u8bf7\u6c42\u8f6c\u6362\u4e3ajava\u3001python\u7b49\u8bed\u8a00\u7684\u8bf7\u6c42\uff1b\n- 16. Authoriation\uff0c\u8bbe\u7f6e\u8bf7\u6c42\u8ba4\u8bc1\uff1b\n- 17. \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff1b\n- 18. \u8bbe\u7f6e\u8bf7\u6c42\u4f53\uff1b\n- 19. Pre-request\uff0c\u53d1\u9001\u8bf7\u6c42\u524d\u6267\u884c\u7684\u811a\u672c\uff0c\u53ef\u4ee5\u5728\u8be5\u6a21\u5757\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u52a8\u6001\u53c2\u6570\u7b49\uff08*\uff09\uff1b\n- 20. test\u6d4b\u8bd5\u70b9\uff0c\u5bf9\u8bf7\u6c42\u7ed3\u679c\u8fdb\u884c\u5206\u6790\u548c\u5904\u7406(*)\uff1b\n- 21. \u54cd\u5e94\u4f53\uff1b\n- 22. \u8bf7\u6c42\u8fd4\u56de\u7684cookie\u4fe1\u606f\n- 23.\u54cd\u5e94\u5934\uff1b\n- 24. test\u6d4b\u8bd5\u7ed3\u679c(\u5fd8\u5199\u7f16\u7801\u4e86\uff0c\u5c31\u7f16\u53f723\u65c1\u8fb9)\uff1b\n- 25.\u54cd\u5e94\u72b6\u6001\u7801\u3002  \u8fd9\u4e00\u7bc7\u535a\u6587\u5148\u7b80\u5355\u8bb0\u5f55\u5230\u8fd9\u5427\uff0c\u4e0b\u4e00\u7bc7\u8be6\u7ec6\u6574\u7406\u4e00\u4e0b\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u548c\u5982\u4f55\u590d\u7528\u5ea6\u8f83\u9ad8\u7684\u6d4b\u8bd5\u7528\u4f8b\u96c6\u3002",
            "title": "\u529f\u80fd\u70b9\u4ecb\u7ecd\uff1a"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/",
            "text": "postman\u63a5\u53e3\u6d4b\u8bd5\u64cd\u4f5c\n\n\n\u65f6\u95f4: 2018\u5e7401\u670828\u65e5\n\n\n\n\n\u5176\u5b9e\u548c\u90e8\u5206\u5176\u4ed6\u540c\u4e8b\u4e00\u6837\uff0c\u4f7f\u7528postman\u5728\u505a\u63a5\u53e3\u6d4b\u8bd5\u65f6\u5019\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u6d4b\u8bd5\u7684\u63a5\u53e3\u90fd\u8981\u8fdb\u884c\u4e00\u4e9b\u53c2\u6570\u914d\u7f6e\uff0c\u8fd9\u4e9b\u53c2\u6570\u914d\u7f6e\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u76f8\u540c\u7684\u53c2\u6570\u9879\uff0c\u90fd\u8981\u8fdb\u884c\u5206\u522b\u914d\u7f6e\uff0c\u6211\u60f3\uff0c\u4f5c\u4e3a\u63a5\u53e3\u5f00\u53d1\u4eba\u5458\uff0c\u53ef\u80fd\u4e0d\u592a\u628a\u5173\u6ce8\u70b9\u653e\u5728\u63a5\u53e3\u6d4b\u8bd5\u7684\u6548\u7387\u4e0a\uff0c\u4f46\u6bcf\u6b21\u5f00\u53d1\u65f6\u8fdb\u884c\u529f\u80fd\u8fed\u4ee3\u6216\u8005\u6a21\u5757\u4fee\u6539\u540e\u7684\u6d4b\u8bd5\u5de5\u4f5c\u53ef\u80fd\u5f97\u82b1\u4e0a\u4e2a\u628a\u5c0f\u65f6\u624d\u80fd\u628a\u81ea\u5df1\u8d1f\u8d23\u7684\u63a5\u53e3\u4f9d\u6b21\u8f6e\u4e00\u904d\uff0c\u8fd9\u8fd8\u4e0d\u5305\u62ec\u5904\u7406\u63a5\u53e3\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u95f4\uff0cso\uff0c\u5f00\u53d1\u81ea\u6d4b\u8fd8\u662f\u76f8\u5f53\u91cd\u8981\u7684\u3002\n\n\n\n\n1. \u73af\u5883\u53d8\u91cf\n\n\n\n\npostman\u6839\u636e\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u4e0d\u540c\u53ef\u5206\u4e3a\u5168\u5c40\u53d8\u91cf(global variable)\u3001\u73af\u5883\u53d8\u91cf(environment variable)\u3001\u5c40\u90e8\u53d8\u91cf(local variable)\u3002\u6545\u540d\u601d\u8bae\uff0c\u5f88\u7b80\u5355\uff0c\u5728postman\u8fd9\u4e2a\u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u8868\u793a\u4e00\u65e6\u8bbe\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4e3a\u5168\u5c40\u7684\uff0c\u90a3\u4e48\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u9879\u76ee\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\uff1b\u73af\u5883\u53d8\u91cf\u5728\u6d4b\u8bd5\u5c24\u5176\u662f\u5728\u6279\u91cf\u6d4b\u8bd5\u65f6\uff0c\u5fc5\u987b\u8981\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u89c9\u5f97\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\u5bf9\u5e94\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u96c6\u5408\uff0c\u4e00\u822c\u53ef\u4ee5\u628a\u6839URL\u8fd9\u7c7b\u578b\u7684\u4e1c\u897f\u653e\u5728\u73af\u5883\u53d8\u91cf\u91cc\uff0c\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\u6216\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u63d0\u9ad8\u53d8\u91cf\u7684\u516c\u7528\u6027\uff0c\u5404\u4e2a\u6d4b\u8bd5\u9879\u76ee\u7684\u73af\u5883\u53d8\u91cf\u5e94\u5206\u5f00\u4ee5\u907f\u514d\u6df7\u6dc6\uff1b\u5c40\u90e8\u53d8\u91cf\u5728\u8bf7\u6c42\u7684\u9884\u5904\u7406pre-request\u548c\u8bf7\u6c42\u7ed3\u679c\u5904\u7406test\u91cc\u9762\u7528\u5f97\u8f83\u591a\u3002\n\n\n\n\n\n\n\n\n\n\n2. Pre-request\n\n\n\n\n\u524d\u6587\u6709\u8bb2\uff0cPre-request\u80fd\u591f\u5728\u8fdb\u884c\u6b63\u5f0f\u7684http\u8bf7\u6c42\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u9884\u5904\u7406\u64cd\u4f5c\uff0cpostman\u7684\u8fd9\u4e2a\u7279\u6027\u5927\u6709\u76ca\u5904\uff0c\u6bd4\u5982\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3001\u68c0\u6d4b\u6570\u636e\u7684\u6709\u6548\u6027\u7b49\uff0c\u5728\u6211\u5b9e\u9645\u5f00\u53d1\u7684\u81ea\u6d4b\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u7684\u95ee\u9898\u662f\uff0c\u9879\u76ee\u591a\u4e2a\u4eba\u5458\u4e00\u8d77\u5f00\u53d1\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u7ecf\u5e38\u4f1a\u53bb\u624b\u52a8\u6e05\u7a7aredis\u91cc\u9762\u7f13\u5b58\u7684\u7528\u6237\u8ba4\u8bc1token\u4fe1\u606f\uff0ctoken\u5931\u6548\u4fbf\u81ea\u7136\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u6709\u6548\u7684token\u503c\u4e86\uff0c\u90a3\u4e48Pre-request\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u811a\u672c\u91cc\u9762\u81ea\u52a8\u9a8c\u8bc1token\u662f\u5426\u8fc7\u671f\uff0c\u5982\u679c\u8fc7\u671f\uff0c\u5219\u83b7\u53d6\u4e00\u4e2a\u65b0\u7684token\u503c\uff1b\u8fd8\u6709\u5c31\u662f\u6bd4\u5982\u4f60\u60f3\u8981\u81ea\u52a8\u5316\u7684\u4fee\u6539\u67d0\u4e00\u6761\u6570\u636e\u7684\u5c5e\u6027\uff0c\u8981\u81ea\u52a8\u5316\u7684\u5b8c\u6210\uff0c\u90a3\u8fd9\u6761\u6570\u636e\u5bf9\u5e94\u7684ID\u53f7\u5c31\u5fc5\u987b\u81ea\u52a8\u83b7\u53d6\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u53d1\u9001\u8fd9\u6761PUT\u8bf7\u6c42\u4e4b\u524d\u53ef\u4ee5\u5148\u67e5\u8be2\u8be5\u6570\u636e\u5217\u8868\uff0c\u7136\u540e\u4ece\u5176\u4e2d\u9009\u62e9\u4e00\u6761\u6709\u6548\u6570\u636e\u7684ID\u5e76\u63d0\u524d\u8bbe\u7f6e\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u90a3\u4e48\u5728\u771f\u6b63\u53d1\u9001url\u8bf7\u6c42\u7684\u65f6\u5019\u8fd9\u4e2aID\u503c\u5c31\u53ef\u4ee5\u4ece\u521a\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u83b7\u53d6\u54a7\uff0cPre-request\u662f\u652f\u6301\u539f\u751fjs\u7684\uff0c\u8981\u73a9\u8fd9\u4e2a\u4f60\u5f97\u4f1a\u70b9\u7b80\u5355\u7684js\uff0c\u5f53\u7136\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u4f60\u5373\u4f7f\u4e0d\u4f1a\u4e5f\u5206\u5206\u949f\u80fd\u4e0a\u624b\uff08^^\uff09\uff0c\u914d\u5408js\uff0cPre-request\u811a\u672c\u91cc\u57fa\u672c\u57fa\u672c\u7684CURD\u64cd\u4f5c\u90fd\u80fd\u591f\u5f88\u597d\u7684\u5904\u7406\uff0c\u4e0b\u9762\u4ee5\u751f\u6210\u4e00\u4e2astudentId\u4e3a\u4f8b\uff0c\u5148\u67e5\u8be2\u51fa\u6709\u6548\u7684studentId\uff0c\u7136\u540e\u5c06\u5176\u8bbe\u7f6e\u5230\u73af\u5883\u53d8\u91cf\u4e2dstudentId\u4e2d\uff0c\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n\n\n\n3. Test\n\n\n\n\nTest\u811a\u672c\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u7684\u7ed3\u679c\u8fdb\u884c\u5904\u7406\uff0c\u76f8\u6bd4\u4e8ePre-request\u7684Snippets\u5c31\u4e30\u5bcc\u591a\u4e86\uff0c\u5305\u62ec\u5982\u68c0\u67e5\u72b6\u6001\u7801\u3001\u68c0\u67e5\u54cd\u5e94\u4e32\u3001\u9a8c\u8bc1JSON\u3001\u68c0\u67e5header\u3001\u9650\u5236\u5e94\u7b54\u65f6\u95f4\u7b49\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f\u5224\u65adCURD\u7684\u7ed3\u679c\u7684\u72b6\u6001\u7801\u662f\u5426\u548c\u9884\u5b9a\u4e49\u7684\u4e00\u81f4\uff0c\u6bd4\u5982\u521b\u5efa\u6210\u529f\u4f7f\u7528CREATED(201)\u3001\u67e5\u8be2\u4fee\u6539\u6210\u529fOK(200)\u3001\u5220\u9664\u6210\u529f\u53ef\u7528NO-CONTENT(204)\u7b49,\u53ef\u4ee5\u4ece\u53f3\u4fa7\u5feb\u6377\u83dc\u5355\u680f\u4e2d\u9009\u62e9\u9884\u5b58\u7684\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u5feb\u901f\u751f\u6210\u76f8\u5e94\u7684Test\u7ed3\u679c\u529f\u80fd\u6d4b\u8bd5\u70b9\uff1a\n\n\n\n\n\n\n\n\n\n\n4. Collection Runner\n\n\n\n\n\u5f53\u63a5\u53e3\u9700\u8981\u8fed\u4ee3\u6d4b\u8bd5\u65f6\uff0cCollection Runner\u6279\u91cf\u8fd0\u884c\u529f\u80fd\u5c31\u53d1\u6325\u4e86\u5de8\u5927\u4f5c\u7528\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u9009\u62e9\u9700\u8981\u8fd0\u884c\u7684\u8bf7\u6c42\u96c6\u5408\uff0c\u70b9\u51fbRun\uff0c\u7136\u540e\u4fbf\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u96c6\u5408\u91cc\u9762\u7684\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff0cRunner\u6d4b\u8bd5\u7684\u6700\u5c0f\u5355\u4f4d\u53ef\u4ee5\u662fFolder\uff0c\u5373Collection\u6d4b\u8bd5\u96c6\u5408\u91cc\u6700\u5c0f\u7684\u4e00\u4e2a\u6a21\u5757\u6d4b\u8bd5\u6587\u4ef6\u5939\uff0c\u518d\u9009\u62e9\u4f60\u6240\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4ec5\u8fd9\u4e24\u6b65\uff0c\u7136\u540e\u70b9\u51fbRun\u6309\u94ae\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u6279\u91cf\u6d4b\u8bd5\u4e86\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRunner\u6d4b\u8bd5\u7ed3\u679c\u7684\u5c55\u793a\u4e5f\u975e\u5e38\u7684\u53cb\u597d\u548c\u76f4\u89c2\uff0c\u9664\u4e86\u5bf9\u6d4b\u8bd5\u96c6\u5408\u7684\u6d4b\u8bd5\u529f\u80fd\u70b9\u7684\u6210\u529f\u548c\u5931\u8d25\u683c\u5f0f\u8fdb\u884c\u7edf\u8ba1\uff0c\u8fd8\u8be6\u7ec6\u5c55\u793a\u4e86\u6279\u91cf\u8bf7\u6c42\u7684\u5404\u6210\u529f\u548c\u5931\u8d25\u7684case\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u805a\u7126\u5904\u7406fail\u7684case\u800c\u53ef\u4ee5\u4e0d\u8fc7\u4e8e\u5173\u6ce8\u6210\u529f\u7684case\u4e86\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\u5c0f\u4f19\u4f34\u4eec\uff0cpostman\u8d76\u5feb\u7528\u8d77\u6765\uff01\uff01\uff01",
            "title": "postman\u6d4b\u8bd5"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/#postman",
            "text": "\u65f6\u95f4: 2018\u5e7401\u670828\u65e5   \u5176\u5b9e\u548c\u90e8\u5206\u5176\u4ed6\u540c\u4e8b\u4e00\u6837\uff0c\u4f7f\u7528postman\u5728\u505a\u63a5\u53e3\u6d4b\u8bd5\u65f6\u5019\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u6d4b\u8bd5\u7684\u63a5\u53e3\u90fd\u8981\u8fdb\u884c\u4e00\u4e9b\u53c2\u6570\u914d\u7f6e\uff0c\u8fd9\u4e9b\u53c2\u6570\u914d\u7f6e\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u4f7f\u76f8\u540c\u7684\u53c2\u6570\u9879\uff0c\u90fd\u8981\u8fdb\u884c\u5206\u522b\u914d\u7f6e\uff0c\u6211\u60f3\uff0c\u4f5c\u4e3a\u63a5\u53e3\u5f00\u53d1\u4eba\u5458\uff0c\u53ef\u80fd\u4e0d\u592a\u628a\u5173\u6ce8\u70b9\u653e\u5728\u63a5\u53e3\u6d4b\u8bd5\u7684\u6548\u7387\u4e0a\uff0c\u4f46\u6bcf\u6b21\u5f00\u53d1\u65f6\u8fdb\u884c\u529f\u80fd\u8fed\u4ee3\u6216\u8005\u6a21\u5757\u4fee\u6539\u540e\u7684\u6d4b\u8bd5\u5de5\u4f5c\u53ef\u80fd\u5f97\u82b1\u4e0a\u4e2a\u628a\u5c0f\u65f6\u624d\u80fd\u628a\u81ea\u5df1\u8d1f\u8d23\u7684\u63a5\u53e3\u4f9d\u6b21\u8f6e\u4e00\u904d\uff0c\u8fd9\u8fd8\u4e0d\u5305\u62ec\u5904\u7406\u63a5\u53e3\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u95f4\uff0cso\uff0c\u5f00\u53d1\u81ea\u6d4b\u8fd8\u662f\u76f8\u5f53\u91cd\u8981\u7684\u3002",
            "title": "postman\u63a5\u53e3\u6d4b\u8bd5\u64cd\u4f5c"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/#1",
            "text": "postman\u6839\u636e\u53d8\u91cf\u4f5c\u7528\u57df\u7684\u4e0d\u540c\u53ef\u5206\u4e3a\u5168\u5c40\u53d8\u91cf(global variable)\u3001\u73af\u5883\u53d8\u91cf(environment variable)\u3001\u5c40\u90e8\u53d8\u91cf(local variable)\u3002\u6545\u540d\u601d\u8bae\uff0c\u5f88\u7b80\u5355\uff0c\u5728postman\u8fd9\u4e2a\u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u8868\u793a\u4e00\u65e6\u8bbe\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4e3a\u5168\u5c40\u7684\uff0c\u90a3\u4e48\uff0c\u6240\u6709\u7684\u6d4b\u8bd5\u9879\u76ee\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\uff1b\u73af\u5883\u53d8\u91cf\u5728\u6d4b\u8bd5\u5c24\u5176\u662f\u5728\u6279\u91cf\u6d4b\u8bd5\u65f6\uff0c\u5fc5\u987b\u8981\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u89c9\u5f97\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\u5bf9\u5e94\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u96c6\u5408\uff0c\u4e00\u822c\u53ef\u4ee5\u628a\u6839URL\u8fd9\u7c7b\u578b\u7684\u4e1c\u897f\u653e\u5728\u73af\u5883\u53d8\u91cf\u91cc\uff0c\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\u6216\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u63d0\u9ad8\u53d8\u91cf\u7684\u516c\u7528\u6027\uff0c\u5404\u4e2a\u6d4b\u8bd5\u9879\u76ee\u7684\u73af\u5883\u53d8\u91cf\u5e94\u5206\u5f00\u4ee5\u907f\u514d\u6df7\u6dc6\uff1b\u5c40\u90e8\u53d8\u91cf\u5728\u8bf7\u6c42\u7684\u9884\u5904\u7406pre-request\u548c\u8bf7\u6c42\u7ed3\u679c\u5904\u7406test\u91cc\u9762\u7528\u5f97\u8f83\u591a\u3002",
            "title": "1. \u73af\u5883\u53d8\u91cf"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/#2-pre-request",
            "text": "\u524d\u6587\u6709\u8bb2\uff0cPre-request\u80fd\u591f\u5728\u8fdb\u884c\u6b63\u5f0f\u7684http\u8bf7\u6c42\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u9884\u5904\u7406\u64cd\u4f5c\uff0cpostman\u7684\u8fd9\u4e2a\u7279\u6027\u5927\u6709\u76ca\u5904\uff0c\u6bd4\u5982\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3001\u68c0\u6d4b\u6570\u636e\u7684\u6709\u6548\u6027\u7b49\uff0c\u5728\u6211\u5b9e\u9645\u5f00\u53d1\u7684\u81ea\u6d4b\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u7684\u95ee\u9898\u662f\uff0c\u9879\u76ee\u591a\u4e2a\u4eba\u5458\u4e00\u8d77\u5f00\u53d1\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u7ecf\u5e38\u4f1a\u53bb\u624b\u52a8\u6e05\u7a7aredis\u91cc\u9762\u7f13\u5b58\u7684\u7528\u6237\u8ba4\u8bc1token\u4fe1\u606f\uff0ctoken\u5931\u6548\u4fbf\u81ea\u7136\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u6709\u6548\u7684token\u503c\u4e86\uff0c\u90a3\u4e48Pre-request\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u811a\u672c\u91cc\u9762\u81ea\u52a8\u9a8c\u8bc1token\u662f\u5426\u8fc7\u671f\uff0c\u5982\u679c\u8fc7\u671f\uff0c\u5219\u83b7\u53d6\u4e00\u4e2a\u65b0\u7684token\u503c\uff1b\u8fd8\u6709\u5c31\u662f\u6bd4\u5982\u4f60\u60f3\u8981\u81ea\u52a8\u5316\u7684\u4fee\u6539\u67d0\u4e00\u6761\u6570\u636e\u7684\u5c5e\u6027\uff0c\u8981\u81ea\u52a8\u5316\u7684\u5b8c\u6210\uff0c\u90a3\u8fd9\u6761\u6570\u636e\u5bf9\u5e94\u7684ID\u53f7\u5c31\u5fc5\u987b\u81ea\u52a8\u83b7\u53d6\uff0c\u5176\u5b9e\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u53d1\u9001\u8fd9\u6761PUT\u8bf7\u6c42\u4e4b\u524d\u53ef\u4ee5\u5148\u67e5\u8be2\u8be5\u6570\u636e\u5217\u8868\uff0c\u7136\u540e\u4ece\u5176\u4e2d\u9009\u62e9\u4e00\u6761\u6709\u6548\u6570\u636e\u7684ID\u5e76\u63d0\u524d\u8bbe\u7f6e\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u90a3\u4e48\u5728\u771f\u6b63\u53d1\u9001url\u8bf7\u6c42\u7684\u65f6\u5019\u8fd9\u4e2aID\u503c\u5c31\u53ef\u4ee5\u4ece\u521a\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u83b7\u53d6\u54a7\uff0cPre-request\u662f\u652f\u6301\u539f\u751fjs\u7684\uff0c\u8981\u73a9\u8fd9\u4e2a\u4f60\u5f97\u4f1a\u70b9\u7b80\u5355\u7684js\uff0c\u5f53\u7136\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u4f60\u5373\u4f7f\u4e0d\u4f1a\u4e5f\u5206\u5206\u949f\u80fd\u4e0a\u624b\uff08^^\uff09\uff0c\u914d\u5408js\uff0cPre-request\u811a\u672c\u91cc\u57fa\u672c\u57fa\u672c\u7684CURD\u64cd\u4f5c\u90fd\u80fd\u591f\u5f88\u597d\u7684\u5904\u7406\uff0c\u4e0b\u9762\u4ee5\u751f\u6210\u4e00\u4e2astudentId\u4e3a\u4f8b\uff0c\u5148\u67e5\u8be2\u51fa\u6709\u6548\u7684studentId\uff0c\u7136\u540e\u5c06\u5176\u8bbe\u7f6e\u5230\u73af\u5883\u53d8\u91cf\u4e2dstudentId\u4e2d\uff0c\u5982\u4e0b\uff1a",
            "title": "2. Pre-request"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/#3-test",
            "text": "Test\u811a\u672c\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u7684\u7ed3\u679c\u8fdb\u884c\u5904\u7406\uff0c\u76f8\u6bd4\u4e8ePre-request\u7684Snippets\u5c31\u4e30\u5bcc\u591a\u4e86\uff0c\u5305\u62ec\u5982\u68c0\u67e5\u72b6\u6001\u7801\u3001\u68c0\u67e5\u54cd\u5e94\u4e32\u3001\u9a8c\u8bc1JSON\u3001\u68c0\u67e5header\u3001\u9650\u5236\u5e94\u7b54\u65f6\u95f4\u7b49\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f\u5224\u65adCURD\u7684\u7ed3\u679c\u7684\u72b6\u6001\u7801\u662f\u5426\u548c\u9884\u5b9a\u4e49\u7684\u4e00\u81f4\uff0c\u6bd4\u5982\u521b\u5efa\u6210\u529f\u4f7f\u7528CREATED(201)\u3001\u67e5\u8be2\u4fee\u6539\u6210\u529fOK(200)\u3001\u5220\u9664\u6210\u529f\u53ef\u7528NO-CONTENT(204)\u7b49,\u53ef\u4ee5\u4ece\u53f3\u4fa7\u5feb\u6377\u83dc\u5355\u680f\u4e2d\u9009\u62e9\u9884\u5b58\u7684\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u5feb\u901f\u751f\u6210\u76f8\u5e94\u7684Test\u7ed3\u679c\u529f\u80fd\u6d4b\u8bd5\u70b9\uff1a",
            "title": "3. Test"
        },
        {
            "location": "/it/tools/postman/18-01-27/postman\u6d4b\u8bd5/#4-collection-runner",
            "text": "\u5f53\u63a5\u53e3\u9700\u8981\u8fed\u4ee3\u6d4b\u8bd5\u65f6\uff0cCollection Runner\u6279\u91cf\u8fd0\u884c\u529f\u80fd\u5c31\u53d1\u6325\u4e86\u5de8\u5927\u4f5c\u7528\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u9009\u62e9\u9700\u8981\u8fd0\u884c\u7684\u8bf7\u6c42\u96c6\u5408\uff0c\u70b9\u51fbRun\uff0c\u7136\u540e\u4fbf\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u96c6\u5408\u91cc\u9762\u7684\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff0cRunner\u6d4b\u8bd5\u7684\u6700\u5c0f\u5355\u4f4d\u53ef\u4ee5\u662fFolder\uff0c\u5373Collection\u6d4b\u8bd5\u96c6\u5408\u91cc\u6700\u5c0f\u7684\u4e00\u4e2a\u6a21\u5757\u6d4b\u8bd5\u6587\u4ef6\u5939\uff0c\u518d\u9009\u62e9\u4f60\u6240\u914d\u7f6e\u7684\u73af\u5883\u53d8\u91cf\uff0c\u4ec5\u8fd9\u4e24\u6b65\uff0c\u7136\u540e\u70b9\u51fbRun\u6309\u94ae\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u6279\u91cf\u6d4b\u8bd5\u4e86\u3002          Runner\u6d4b\u8bd5\u7ed3\u679c\u7684\u5c55\u793a\u4e5f\u975e\u5e38\u7684\u53cb\u597d\u548c\u76f4\u89c2\uff0c\u9664\u4e86\u5bf9\u6d4b\u8bd5\u96c6\u5408\u7684\u6d4b\u8bd5\u529f\u80fd\u70b9\u7684\u6210\u529f\u548c\u5931\u8d25\u683c\u5f0f\u8fdb\u884c\u7edf\u8ba1\uff0c\u8fd8\u8be6\u7ec6\u5c55\u793a\u4e86\u6279\u91cf\u8bf7\u6c42\u7684\u5404\u6210\u529f\u548c\u5931\u8d25\u7684case\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u805a\u7126\u5904\u7406fail\u7684case\u800c\u53ef\u4ee5\u4e0d\u8fc7\u4e8e\u5173\u6ce8\u6210\u529f\u7684case\u4e86\u3002       \u5c0f\u4f19\u4f34\u4eec\uff0cpostman\u8d76\u5feb\u7528\u8d77\u6765\uff01\uff01\uff01",
            "title": "4. Collection Runner"
        },
        {
            "location": "/it/python/",
            "text": "",
            "title": "python"
        },
        {
            "location": "/about_me/",
            "text": "\u5173\u4e8e\u6211\n\n\nname\n  boyka\n\n\njob\n  \u521d\u7ea7\u7a0b\u5e8f\u5458\n\n\naddress\n  \u56db\u5ddd\u6210\u90fd\n\n\nemail\n  gxw255613@126.com\n\n\nstate\n \"\u6c89\u8ff7\"\u5b66\u4e60\uff0c\u65e0\u6cd5\u81ea\u62d4",
            "title": "\u5173\u4e8e\u6211"
        },
        {
            "location": "/about_me/#_1",
            "text": "name   boyka  job   \u521d\u7ea7\u7a0b\u5e8f\u5458  address   \u56db\u5ddd\u6210\u90fd  email   gxw255613@126.com  state  \"\u6c89\u8ff7\"\u5b66\u4e60\uff0c\u65e0\u6cd5\u81ea\u62d4",
            "title": "\u5173\u4e8e\u6211"
        }
    ]
}