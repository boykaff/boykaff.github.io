{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\npackage forkjoin;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ForkJoinPool;\nimport java.util.concurrent.ForkJoinTask;\nimport java.util.concurrent.RecursiveTask;\n\nimport static java.util.stream.Collectors.toList;\n\n/**\n * fork-join\u7684\u7b80\u5355\u6613\u7528\n *\n * 2018/3/20\n *\n * @author boyka\n */\n\n/**\n * \u4efb\u52a1\u7c7b:\u6279\u6539\u7684\u4e00\u5957\u8bd5\u5377\u6216\u8bd5\u5377\u7684\u4e00\u90e8\u5206\n */\n\nclass Task {\n    private String name;  //\u4efb\u52a1\u540d\n    private String level; //\u56f0\u96be\u7b49\u7ea7\n    private Long useTime; //\u9884\u8ba1\u82b1\u8d39\u65f6\u95f4\n    private List<Task> subTaskList; //\u5b50\u4efb\u52a1\u5217\u8868\n\n    public Task(String name, String level, Long useTime, List<Task> subTaskList) {\n        this.name = name;\n        this.level = level;\n        this.useTime = useTime;\n        this.subTaskList = subTaskList;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getLevel() {\n        return level;\n    }\n\n    public void setLevel(String level) {\n        this.level = level;\n    }\n\n    public Long getUseTime() {\n        return useTime;\n    }\n\n    public void setUseTime(Long useTime) {\n        this.useTime = useTime;\n    }\n\n    public List<Task> getSubTaskList() {\n        return subTaskList;\n    }\n\n    public void setSubTaskList(List<Task> subTaskList) {\n        this.subTaskList = subTaskList;\n    }\n}\n\n/**\n * \u4efb\u52a1\u64cd\u4f5c\u7c7b:\u8fdb\u884c\u8bd5\u5377\u6279\u6539\u64cd\u4f5c\n */\npublic class ForkJoinTest extends RecursiveTask<Long> {\n    private final static String EASY = \"easy\";\n    private final static String DIFFICULT = \"difficult\";\n    private Task task;\n\n    private ForkJoinTest(Task task) {\n        this.task = task;\n    }\n\n    @Override\n    protected Long compute() {\n        Long useTimes = 0L;\n        //\u5bb9\u6613\uff0c\u4e00\u4e2a\u540c\u5b66\u80fd\u591f\u6539\u5f97\u5b8c\u4e86\n        if (EASY.equals(task.getLevel())) {\n            useTimes = task.getUseTime();\n            try {\n                Thread.sleep(task.getUseTime() * 1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        } else {\n            //\u4efb\u52a1\u91cf\u5927\uff0c\u5c06\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6309\u4efb\u52a1\u91cf\u7ec6\u5206\u540e\u8ba9\u591a\u4e2a\u7ae5\u978b\u53bb(\u5de5\u4f5c\u7ebf\u7a0b)\u5b8c\u6210\n            if (null != task && null != task.getSubTaskList()) {\n                useTimes = task.getSubTaskList()\n                        .stream()\n                        .map(t -> new ForkJoinTest(t).fork())\n                        .collect(toList())\n                        .stream()\n                        .mapToLong(t -> t.join())\n                        .sum();\n            }\n        }\n        return useTimes;\n    }\n\n    // \u6d4b\u8bd5\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long startTime = System.currentTimeMillis();\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        ForkJoinTest mainForkJoin = new ForkJoinTest(ForkJoinTest.initTasks());\n        ForkJoinTask<Long> result = forkJoinPool.submit(mainForkJoin);\n        System.out.println(\"BOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a\" + result.get() + \" H\");\n        System.out.println(\"\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a \" + (System.currentTimeMillis() - startTime) / 1000 + \" H\");\n    }\n\n    //\u6784\u9020\u7b80\u6613\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6811\n    private static Task initTasks() {\n        //\u5fae\u673a\n        Task wjTask1 = new Task(\"\u5fae\u673a\u9009\u62e9+\u586b\u7a7a\u9898\", EASY, 4L, new ArrayList<>());\n        Task wjTask2 = new Task(\"\u5fae\u673a\u5927\u9898\", EASY, 3L, null);\n        Task wjTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask1, wjTask2));\n        //\u7f51\u7edc\n        Task wlTask = new Task(\"\u7f51\u7edc\", EASY, 6L, null);\n\n        //\u7b97\u6cd5\n        Task sfTask1 = new Task(\"\u7b97\u6cd5\u524d3\u9053\", EASY, 4L, null);\n        Task sfTask2 = new Task(\"\u7b97\u6cd5\u540e2\u9053\", EASY, 4L, null);\n        Task sfTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(sfTask1, sfTask2));\n\n        return new Task(\"\u6240\u6709\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask, wlTask, sfTask));\n    }\n}\n\n\n\n\n \n\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\u3002\n\n\n\n\n\u8fd9\u662f\u7b2c\u4e00\u884c\u5217\u8868\u9879\u3002\n\n\n\u8fd9\u662f\u7b2c\u4e8c\u884c\u5217\u8868\u9879\u3002\n\n\n\n\n\u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u4ee3\u7801\uff1a\n\n\nreturn shell_exec(\"echo $input | $markdown_script\");",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.  package forkjoin;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ForkJoinPool;\nimport java.util.concurrent.ForkJoinTask;\nimport java.util.concurrent.RecursiveTask;\n\nimport static java.util.stream.Collectors.toList;\n\n/**\n * fork-join\u7684\u7b80\u5355\u6613\u7528\n *\n * 2018/3/20\n *\n * @author boyka\n */\n\n/**\n * \u4efb\u52a1\u7c7b:\u6279\u6539\u7684\u4e00\u5957\u8bd5\u5377\u6216\u8bd5\u5377\u7684\u4e00\u90e8\u5206\n */\n\nclass Task {\n    private String name;  //\u4efb\u52a1\u540d\n    private String level; //\u56f0\u96be\u7b49\u7ea7\n    private Long useTime; //\u9884\u8ba1\u82b1\u8d39\u65f6\u95f4\n    private List<Task> subTaskList; //\u5b50\u4efb\u52a1\u5217\u8868\n\n    public Task(String name, String level, Long useTime, List<Task> subTaskList) {\n        this.name = name;\n        this.level = level;\n        this.useTime = useTime;\n        this.subTaskList = subTaskList;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getLevel() {\n        return level;\n    }\n\n    public void setLevel(String level) {\n        this.level = level;\n    }\n\n    public Long getUseTime() {\n        return useTime;\n    }\n\n    public void setUseTime(Long useTime) {\n        this.useTime = useTime;\n    }\n\n    public List<Task> getSubTaskList() {\n        return subTaskList;\n    }\n\n    public void setSubTaskList(List<Task> subTaskList) {\n        this.subTaskList = subTaskList;\n    }\n}\n\n/**\n * \u4efb\u52a1\u64cd\u4f5c\u7c7b:\u8fdb\u884c\u8bd5\u5377\u6279\u6539\u64cd\u4f5c\n */\npublic class ForkJoinTest extends RecursiveTask<Long> {\n    private final static String EASY = \"easy\";\n    private final static String DIFFICULT = \"difficult\";\n    private Task task;\n\n    private ForkJoinTest(Task task) {\n        this.task = task;\n    }\n\n    @Override\n    protected Long compute() {\n        Long useTimes = 0L;\n        //\u5bb9\u6613\uff0c\u4e00\u4e2a\u540c\u5b66\u80fd\u591f\u6539\u5f97\u5b8c\u4e86\n        if (EASY.equals(task.getLevel())) {\n            useTimes = task.getUseTime();\n            try {\n                Thread.sleep(task.getUseTime() * 1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        } else {\n            //\u4efb\u52a1\u91cf\u5927\uff0c\u5c06\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6309\u4efb\u52a1\u91cf\u7ec6\u5206\u540e\u8ba9\u591a\u4e2a\u7ae5\u978b\u53bb(\u5de5\u4f5c\u7ebf\u7a0b)\u5b8c\u6210\n            if (null != task && null != task.getSubTaskList()) {\n                useTimes = task.getSubTaskList()\n                        .stream()\n                        .map(t -> new ForkJoinTest(t).fork())\n                        .collect(toList())\n                        .stream()\n                        .mapToLong(t -> t.join())\n                        .sum();\n            }\n        }\n        return useTimes;\n    }\n\n    // \u6d4b\u8bd5\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        long startTime = System.currentTimeMillis();\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        ForkJoinTest mainForkJoin = new ForkJoinTest(ForkJoinTest.initTasks());\n        ForkJoinTask<Long> result = forkJoinPool.submit(mainForkJoin);\n        System.out.println(\"BOSS\u4e00\u4e2a\u4eba\u6279\u6539\u7528\u65f6\uff1a\" + result.get() + \" H\");\n        System.out.println(\"\u591a\u4e2a\u7ae5\u978b\u4e00\u8d77\u6539\u7528\u65f6\uff1a \" + (System.currentTimeMillis() - startTime) / 1000 + \" H\");\n    }\n\n    //\u6784\u9020\u7b80\u6613\u6279\u6539\u8bd5\u5377\u4efb\u52a1\u6811\n    private static Task initTasks() {\n        //\u5fae\u673a\n        Task wjTask1 = new Task(\"\u5fae\u673a\u9009\u62e9+\u586b\u7a7a\u9898\", EASY, 4L, new ArrayList<>());\n        Task wjTask2 = new Task(\"\u5fae\u673a\u5927\u9898\", EASY, 3L, null);\n        Task wjTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask1, wjTask2));\n        //\u7f51\u7edc\n        Task wlTask = new Task(\"\u7f51\u7edc\", EASY, 6L, null);\n\n        //\u7b97\u6cd5\n        Task sfTask1 = new Task(\"\u7b97\u6cd5\u524d3\u9053\", EASY, 4L, null);\n        Task sfTask2 = new Task(\"\u7b97\u6cd5\u540e2\u9053\", EASY, 4L, null);\n        Task sfTask = new Task(\"\u7b97\u6cd5\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(sfTask1, sfTask2));\n\n        return new Task(\"\u6240\u6709\u8bd5\u5377\", DIFFICULT, null, Arrays.asList(wjTask, wlTask, sfTask));\n    }\n}",
            "title": "Project layout"
        },
        {
            "location": "/#_1",
            "text": "\u8fd9\u662f\u7b2c\u4e00\u884c\u5217\u8868\u9879\u3002  \u8fd9\u662f\u7b2c\u4e8c\u884c\u5217\u8868\u9879\u3002   \u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u4ee3\u7801\uff1a  return shell_exec(\"echo $input | $markdown_script\");",
            "title": "\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\u3002"
        }
    ]
}